// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Js_list from "bs-platform/lib/es6/js_list.js";
import * as Code$BtsCore from "./pages/Code/Code.bs.js";
import * as Home$BtsCore from "./pages/Home/Home.bs.js";
import * as Icon$BtsCore from "./pages/Icon/Icon.bs.js";
import * as Login$BtsCore from "./pages/Login/Login.bs.js";
import * as Oauth$BtsCore from "./pages/Oauth/Oauth.bs.js";
import * as Forget$BtsCore from "./pages/Forget/Forget.bs.js";
import * as Inside$BtsCore from "./pages/Inside/Inside.bs.js";
import * as Resend$BtsCore from "./pages/Resend/Resend.bs.js";
import * as Signup$BtsCore from "./pages/Signup/Signup.bs.js";
import * as CreateF$BtsCore from "./pages/CreateF/CreateF.bs.js";
import * as CreateI$BtsCore from "./pages/CreateI/CreateI.bs.js";
import * as CreateP$BtsCore from "./pages/CreateP/CreateP.bs.js";
import * as CreateR$BtsCore from "./pages/CreateR/CreateR.bs.js";
import * as IsoFile$BtsCore from "./pages/IsoFile/IsoFile.bs.js";
import * as ModifyF$BtsCore from "./pages/ModifyF/ModifyF.bs.js";
import * as ModifyI$BtsCore from "./pages/ModifyI/ModifyI.bs.js";
import * as ModifyR$BtsCore from "./pages/ModifyR/ModifyR.bs.js";
import * as Product$BtsCore from "./pages/Product/Product.bs.js";
import * as Setting$BtsCore from "./setting/Setting.bs.js";
import * as MailistF$BtsCore from "./pages/MailistF/MailistF.bs.js";
import * as MailistI$BtsCore from "./pages/MailistI/MailistI.bs.js";
import * as MailistR$BtsCore from "./pages/MailistR/MailistR.bs.js";
import * as SendistF$BtsCore from "./pages/SendistF/SendistF.bs.js";
import * as Signlist$BtsCore from "./pages/Signlist/Signlist.bs.js";
import * as Bookmarks$BtsCore from "./pages/Bookmarks/Bookmarks.bs.js";
import * as ReasonReactRouter from "reason-react/src/ReasonReactRouter.bs.js";
import * as SignlistF$BtsCore from "./pages/SignlistF/SignlistF.bs.js";
import * as SignlistI$BtsCore from "./pages/SignlistI/SignlistI.bs.js";
import * as SignlistR$BtsCore from "./pages/SignlistR/SignlistR.bs.js";
import * as NewBookBoard$BtsCore from "./example/Facebook/NewBookBoard.bs.js";

function Route(Props) {
  var url = ReasonReactRouter.useUrl(undefined, undefined);
  var match = url.path;
  var exit = 0;
  if (match) {
    switch (match[0]) {
      case "code" :
          if (!match[1]) {
            return React.createElement(Code$BtsCore.make, { });
          }
          exit = 1;
          break;
      case "forget" :
          if (!match[1]) {
            return React.createElement(Forget$BtsCore.make, { });
          }
          exit = 1;
          break;
      case "login" :
          if (!match[1]) {
            return React.createElement(Login$BtsCore.make, { });
          }
          exit = 1;
          break;
      case "oauth" :
          if (!match[1]) {
            return React.createElement(Oauth$BtsCore.make, { });
          }
          exit = 1;
          break;
      case "resend" :
          if (!match[1]) {
            return React.createElement(Resend$BtsCore.make, { });
          }
          exit = 1;
          break;
      case "signup" :
          if (!match[1]) {
            return React.createElement(Signup$BtsCore.make, { });
          }
          exit = 1;
          break;
      default:
        exit = 1;
    }
  } else {
    exit = 1;
  }
  if (exit === 1) {
    var match$1 = url.path;
    var tmp;
    var exit$1 = 0;
    if (match$1) {
      switch (match$1[0]) {
        case "bookmarks" :
            if (match$1[1]) {
              exit$1 = 2;
            } else {
              tmp = React.createElement(Bookmarks$BtsCore.make, { });
            }
            break;
        case "createF" :
            if (match$1[1]) {
              exit$1 = 2;
            } else {
              tmp = React.createElement(CreateF$BtsCore.make, { });
            }
            break;
        case "createI" :
            if (match$1[1]) {
              exit$1 = 2;
            } else {
              tmp = React.createElement(CreateI$BtsCore.make, { });
            }
            break;
        case "createP" :
            if (match$1[1]) {
              exit$1 = 2;
            } else {
              tmp = React.createElement(CreateP$BtsCore.make, { });
            }
            break;
        case "createR" :
            if (match$1[1]) {
              exit$1 = 2;
            } else {
              tmp = React.createElement(CreateR$BtsCore.make, { });
            }
            break;
        case "icon" :
            if (match$1[1]) {
              exit$1 = 2;
            } else {
              tmp = React.createElement(Icon$BtsCore.make, { });
            }
            break;
        case "inside" :
            if (match$1[1]) {
              exit$1 = 2;
            } else {
              tmp = React.createElement(Inside$BtsCore.make, { });
            }
            break;
        case "isoFile" :
            if (match$1[1]) {
              exit$1 = 2;
            } else {
              tmp = React.createElement(IsoFile$BtsCore.make, { });
            }
            break;
        case "mailistF" :
            if (match$1[1]) {
              exit$1 = 2;
            } else {
              tmp = React.createElement(MailistF$BtsCore.make, { });
            }
            break;
        case "mailistI" :
            if (match$1[1]) {
              exit$1 = 2;
            } else {
              tmp = React.createElement(MailistI$BtsCore.make, { });
            }
            break;
        case "mailistR" :
            if (match$1[1]) {
              exit$1 = 2;
            } else {
              tmp = React.createElement(MailistR$BtsCore.make, { });
            }
            break;
        case "modifyF" :
            if (match$1[1]) {
              exit$1 = 2;
            } else {
              tmp = React.createElement(ModifyF$BtsCore.make, { });
            }
            break;
        case "modifyI" :
            if (match$1[1]) {
              exit$1 = 2;
            } else {
              tmp = React.createElement(ModifyI$BtsCore.make, { });
            }
            break;
        case "modifyR" :
            if (match$1[1]) {
              exit$1 = 2;
            } else {
              tmp = React.createElement(ModifyR$BtsCore.make, { });
            }
            break;
        case "product" :
            if (match$1[1]) {
              exit$1 = 2;
            } else {
              tmp = React.createElement(Product$BtsCore.make, { });
            }
            break;
        case "sendistF" :
            if (match$1[1]) {
              exit$1 = 2;
            } else {
              tmp = React.createElement(SendistF$BtsCore.make, { });
            }
            break;
        case "signlist" :
            if (match$1[1]) {
              exit$1 = 2;
            } else {
              tmp = React.createElement(Signlist$BtsCore.make, { });
            }
            break;
        case "signlistF" :
            if (match$1[1]) {
              exit$1 = 2;
            } else {
              tmp = React.createElement(SignlistF$BtsCore.make, { });
            }
            break;
        case "signlistI" :
            if (match$1[1]) {
              exit$1 = 2;
            } else {
              tmp = React.createElement(SignlistI$BtsCore.make, { });
            }
            break;
        case "signlistR" :
            if (match$1[1]) {
              exit$1 = 2;
            } else {
              tmp = React.createElement(SignlistR$BtsCore.make, { });
            }
            break;
        default:
          exit$1 = 2;
      }
    } else {
      tmp = React.createElement(Home$BtsCore.make, { });
    }
    if (exit$1 === 2) {
      tmp = React.createElement(Home$BtsCore.make, { });
    }
    return React.createElement(NewBookBoard$BtsCore.make, {
                autoPath: Setting$BtsCore.pathObjects(Js_list.length(url.path), url.path, url.hash),
                children: tmp
              });
  }
  
}

var make = Route;

export {
  make ,
  
}
/* react Not a pure module */
