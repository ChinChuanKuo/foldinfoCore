// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as List from "bs-platform/lib/es6/list.js";
import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Caml_obj from "bs-platform/lib/es6/caml_obj.js";
import * as Caml_array from "bs-platform/lib/es6/caml_array.js";
import * as Pervasives from "bs-platform/lib/es6/pervasives.js";
import * as ReactIntl from "react-intl";
import * as Caml_format from "bs-platform/lib/es6/caml_format.js";
import * as Tab$BtsCore from "../../material-ui/core/Tabs/Tab.bs.js";
import * as Data$BtsCore from "../../features/Data.bs.js";
import * as Path$BtsCore from "../../features/Path.bs.js";
import * as Tabs$BtsCore from "../../material-ui/core/Tabs/Tabs.bs.js";
import * as Icons$BtsCore from "../../material-ui/icon/Icons.bs.js";
import * as Image$BtsCore from "../../example/Medias/Image.bs.js";
import * as Media$BtsCore from "../../example/Medias/Media.bs.js";
import * as Button$BtsCore from "../../material-ui/core/Button/Button.bs.js";
import * as Status$BtsCore from "../../features/Status.bs.js";
import * as Switch$BtsCore from "../../material-ui/core/Switch/Switch.bs.js";
import * as Divider$BtsCore from "../../material-ui/core/Divider/Divider.bs.js";
import * as Axiosapi$BtsCore from "../../features/Axiosapi.bs.js";
import * as GridItem$BtsCore from "../../material-ui/core/Grid/GridItem.bs.js";
import * as MenuItem$BtsCore from "../../material-ui/core/MenuItem/MenuItem.bs.js";
import * as Together$BtsCore from "../../styles/Together/Together.bs.js";
import * as ReasonReactRouter from "reason-react/src/ReasonReactRouter.bs.js";
import * as DialogFull$BtsCore from "../../material-ui/core/Dialog/DialogFull.bs.js";
import * as IconAction$BtsCore from "../../material-ui/core/IconStyle/IconAction.bs.js";
import * as IconButton$BtsCore from "../../material-ui/core/IconButton/IconButton.bs.js";
import * as SelectMenu$BtsCore from "../../material-ui/core/Menu/SelectMenu.bs.js";
import * as Typography$BtsCore from "../../material-ui/core/Typography/Typography.bs.js";
import * as DialogTitle$BtsCore from "../../material-ui/core/Dialog/DialogTitle.bs.js";
import * as IconGeneral$BtsCore from "../../material-ui/core/IconStyle/IconGeneral.bs.js";
import * as NewFacetube$BtsCore from "../../example/Facebook/NewFacetube.bs.js";
import * as OtherUpload$BtsCore from "../../example/Uploads/OtherUpload.bs.js";
import * as SwitchColor$BtsCore from "../../controls/SwitchColor.bs.js";
import * as DialogActions$BtsCore from "../../material-ui/core/Dialog/DialogActions.bs.js";
import * as DialogContent$BtsCore from "../../material-ui/core/Dialog/DialogContent.bs.js";
import * as GeneralUpload$BtsCore from "../../example/Uploads/GeneralUpload.bs.js";
import * as GridContainer$BtsCore from "../../material-ui/core/Grid/GridContainer.bs.js";
import * as IconAnimation$BtsCore from "../../controls/IconAnimation.bs.js";
import * as SelectStandard$BtsCore from "../../material-ui/core/Select/SelectStandard.bs.js";
import * as BackgroundBoard$BtsCore from "../../example/Boards/BackgroundBoard.bs.js";
import * as SnackbarYoutube$BtsCore from "../../material-ui/core/Snackbar/SnackbarYoutube.bs.js";
import * as DialogContentText$BtsCore from "../../material-ui/core/Dialog/DialogContentText.bs.js";
import * as TextFieldStandard$BtsCore from "../../material-ui/core/TextField/TextFieldStandard.bs.js";
import * as TextFieldMultiline$BtsCore from "../../material-ui/core/TextField/TextFieldMultiline.bs.js";

((require('../../../scss/pages/Together/together.scss')));

function newitem(id, images, videos, audios, src, imagePath, original, encryption, extension, date) {
  return [{
            photoId: id,
            photoImage: images,
            photoVideo: videos,
            photoAudio: audios,
            photoSrc: src,
            photoPath: imagePath,
            photoOriginal: original,
            photoEncryption: encryption,
            photoExtension: extension,
            photoDate: date,
            photoInsert: true,
            showDelete: true,
            photoDelete: false
          }];
}

function reducer(state, action) {
  if (typeof action === "number") {
    switch (action) {
      case /* SettingError */0 :
          var newrecord = Caml_obj.caml_obj_dup(state);
          newrecord.error = !state.error;
          return newrecord;
      case /* ActionShowProgress */1 :
          var newrecord$1 = Caml_obj.caml_obj_dup(state);
          newrecord$1.showProgress = !state.showProgress;
          return newrecord$1;
      case /* CloseAlbumFull */2 :
          var newrecord$2 = Caml_obj.caml_obj_dup(state);
          newrecord$2.showAlbumFull = !state.showAlbumFull;
          return newrecord$2;
      
    }
  } else {
    switch (action.tag | 0) {
      case /* SettingFormLoad */0 :
          var newrecord$3 = Caml_obj.caml_obj_dup(state);
          newrecord$3.formId = action[0];
          newrecord$3.formLoad = !state.formLoad;
          return newrecord$3;
      case /* SettingFormWidth */1 :
          var newrecord$4 = Caml_obj.caml_obj_dup(state);
          newrecord$4.formHeight = action[1];
          newrecord$4.formWidth = action[0];
          return newrecord$4;
      case /* ActionPermissItems */2 :
          var newrecord$5 = Caml_obj.caml_obj_dup(state);
          newrecord$5.export = action[3];
          newrecord$5.delete = action[2];
          newrecord$5.update = action[1];
          newrecord$5.insert = action[0];
          return newrecord$5;
      case /* SettingFormItems */3 :
          var newrecord$6 = Caml_obj.caml_obj_dup(state);
          newrecord$6.items = action[2];
          newrecord$6.formTitle = action[1];
          newrecord$6.formId = action[0];
          return newrecord$6;
      case /* ClickItemTab */4 :
          var index = action[0];
          var newrecord$7 = Caml_obj.caml_obj_dup(state);
          newrecord$7.index = index;
          newrecord$7.tabitems = List.mapi((function (i, tabitem) {
                  return {
                          showTab: index === i,
                          tabImage: tabitem.tabImage
                        };
                }), state.tabitems);
          return newrecord$7;
      case /* SettingPhotoItems */5 :
          var newrecord$8 = Caml_obj.caml_obj_dup(state);
          newrecord$8.photoitems = action[0];
          return newrecord$8;
      case /* ShowFloorMenu */6 :
          var index$1 = action[0];
          var newrecord$9 = Caml_obj.caml_obj_dup(state);
          newrecord$9.items = $$Array.mapi((function (i, item) {
                  if (index$1 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showFloorMenu = !item.showFloorMenu;
                  return newrecord;
                }), state.items);
          return newrecord$9;
      case /* ClickFloorMenu */7 :
          var index$2 = action[1];
          var value = action[0];
          var newrecord$10 = Caml_obj.caml_obj_dup(state);
          newrecord$10.items = $$Array.mapi((function (i, item) {
                  if (index$2 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.floor = value;
                  newrecord.showFloorMenu = !item.showFloorMenu;
                  return newrecord;
                }), state.items);
          return newrecord$10;
      case /* ChangeWorkno */8 :
          var index$3 = action[1];
          var value$1 = action[0];
          var newrecord$11 = Caml_obj.caml_obj_dup(state);
          newrecord$11.items = $$Array.mapi((function (i, item) {
                  if (index$3 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.workno = value$1;
                  return newrecord;
                }), state.items);
          return newrecord$11;
      case /* SettingItemWorkno */9 :
          var index$4 = action[8];
          var amount = action[7];
          var mbitems = action[6];
          var mb = action[5];
          var momoitems = action[4];
          var homepageMomo = action[3];
          var pnumber = action[2];
          var homepage1 = action[1];
          var showXps = action[0];
          var newrecord$12 = Caml_obj.caml_obj_dup(state);
          newrecord$12.items = $$Array.mapi((function (i, item) {
                  if (index$4 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.amount = amount;
                  newrecord.mb = mb;
                  newrecord.mbitems = mbitems;
                  newrecord.homepageMomo = homepageMomo;
                  newrecord.momoitems = momoitems;
                  newrecord.pnumber = pnumber;
                  newrecord.homepage1 = homepage1;
                  newrecord.showXps = showXps;
                  return newrecord;
                }), state.items);
          return newrecord$12;
      case /* ChangePage1 */10 :
          var index$5 = action[1];
          var value$2 = action[0];
          var newrecord$13 = Caml_obj.caml_obj_dup(state);
          newrecord$13.items = $$Array.mapi((function (i, item) {
                  if (index$5 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.homepage1 = value$2;
                  return newrecord;
                }), state.items);
          return newrecord$13;
      case /* ChangePnumber */11 :
          var index$6 = action[1];
          var value$3 = action[0];
          var newrecord$14 = Caml_obj.caml_obj_dup(state);
          newrecord$14.items = $$Array.mapi((function (i, item) {
                  if (index$6 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.pnumber = value$3;
                  return newrecord;
                }), state.items);
          return newrecord$14;
      case /* ShowMomoMenu */12 :
          var index$7 = action[0];
          var newrecord$15 = Caml_obj.caml_obj_dup(state);
          newrecord$15.items = $$Array.mapi((function (i, item) {
                  if (index$7 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showMomoMenu = !item.showMomoMenu;
                  return newrecord;
                }), state.items);
          return newrecord$15;
      case /* ClickMomoMenu */13 :
          var index$8 = action[1];
          var value$4 = action[0];
          var newrecord$16 = Caml_obj.caml_obj_dup(state);
          newrecord$16.items = $$Array.mapi((function (i, item) {
                  if (index$8 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.homepageMomo = value$4;
                  newrecord.showMomoMenu = !item.showMomoMenu;
                  return newrecord;
                }), state.items);
          return newrecord$16;
      case /* ShowMbMenu */14 :
          var index$9 = action[0];
          var newrecord$17 = Caml_obj.caml_obj_dup(state);
          newrecord$17.items = $$Array.mapi((function (i, item) {
                  if (index$9 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showMbMenu = !item.showMbMenu;
                  return newrecord;
                }), state.items);
          return newrecord$17;
      case /* ClickMbMenu */15 :
          var index$10 = action[1];
          var value$5 = action[0];
          var newrecord$18 = Caml_obj.caml_obj_dup(state);
          newrecord$18.items = $$Array.mapi((function (i, item) {
                  if (index$10 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.mb = value$5;
                  newrecord.showMbMenu = !item.showMbMenu;
                  return newrecord;
                }), state.items);
          return newrecord$18;
      case /* ShowObjMenu */16 :
          var index$11 = action[0];
          var newrecord$19 = Caml_obj.caml_obj_dup(state);
          newrecord$19.items = $$Array.mapi((function (i, item) {
                  if (index$11 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showObjMenu = !item.showObjMenu;
                  return newrecord;
                }), state.items);
          return newrecord$19;
      case /* ClickObjMenu */17 :
          var index$12 = action[1];
          var value$6 = action[0];
          var newrecord$20 = Caml_obj.caml_obj_dup(state);
          newrecord$20.items = $$Array.mapi((function (i, item) {
                  if (index$12 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.obj = value$6;
                  newrecord.showObjMenu = !item.showObjMenu;
                  return newrecord;
                }), state.items);
          return newrecord$20;
      case /* ShowPn */18 :
          var index$13 = action[1];
          var showPn = action[0];
          var newrecord$21 = Caml_obj.caml_obj_dup(state);
          newrecord$21.items = $$Array.mapi((function (i, item) {
                  if (index$13 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showPn = showPn;
                  return newrecord;
                }), state.items);
          return newrecord$21;
      case /* SettingItemPn */19 :
          var index$14 = action[1];
          var items = action[0];
          var newrecord$22 = Caml_obj.caml_obj_dup(state);
          newrecord$22.items = $$Array.mapi((function (i, item) {
                  if (index$14 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.pnitems = items;
                  newrecord.showPn = true;
                  return newrecord;
                }), state.items);
          return newrecord$22;
      case /* ChangePn */20 :
          var index$15 = action[1];
          var value$7 = action[0];
          var newrecord$23 = Caml_obj.caml_obj_dup(state);
          newrecord$23.items = $$Array.mapi((function (i, item) {
                  if (index$15 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.pn = value$7;
                  return newrecord;
                }), state.items);
          return newrecord$23;
      case /* ClickItemPn */21 :
          var index$16 = action[1];
          var value$8 = action[0];
          var newrecord$24 = Caml_obj.caml_obj_dup(state);
          newrecord$24.items = $$Array.mapi((function (i, item) {
                  if (index$16 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.showPn = !item.showPn;
                  newrecord.pn = value$8;
                  return newrecord;
                }), state.items);
          return newrecord$24;
      case /* ChangeAmount */22 :
          var index$17 = action[1];
          var value$9 = action[0];
          var newrecord$25 = Caml_obj.caml_obj_dup(state);
          newrecord$25.items = $$Array.mapi((function (i, item) {
                  if (index$17 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.amount = value$9;
                  return newrecord;
                }), state.items);
          return newrecord$25;
      case /* ChangeInvest */23 :
          var index$18 = action[1];
          var value$10 = action[0];
          var newrecord$26 = Caml_obj.caml_obj_dup(state);
          newrecord$26.items = $$Array.mapi((function (i, item) {
                  if (index$18 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.invest = value$10;
                  return newrecord;
                }), state.items);
          return newrecord$26;
      case /* ChangeFail */24 :
          var index$19 = action[1];
          var value$11 = action[0];
          var newrecord$27 = Caml_obj.caml_obj_dup(state);
          newrecord$27.items = $$Array.mapi((function (i, item) {
                  if (index$19 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.fail = value$11;
                  return newrecord;
                }), state.items);
          return newrecord$27;
      case /* ChangeSubject */25 :
          var index$20 = action[1];
          var value$12 = action[0];
          var newrecord$28 = Caml_obj.caml_obj_dup(state);
          newrecord$28.items = $$Array.mapi((function (i, item) {
                  if (index$20 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.subject = value$12;
                  return newrecord;
                }), state.items);
          return newrecord$28;
      case /* ChangeContainment */26 :
          var index$21 = action[1];
          var value$13 = action[0];
          var newrecord$29 = Caml_obj.caml_obj_dup(state);
          newrecord$29.items = $$Array.mapi((function (i, item) {
                  if (index$21 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.containment = value$13;
                  return newrecord;
                }), state.items);
          return newrecord$29;
      case /* ChangeCause */27 :
          var index$22 = action[1];
          var value$14 = action[0];
          var newrecord$30 = Caml_obj.caml_obj_dup(state);
          newrecord$30.items = $$Array.mapi((function (i, item) {
                  if (index$22 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.cause = value$14;
                  return newrecord;
                }), state.items);
          return newrecord$30;
      case /* ShowRegroupMenu */28 :
          var index$23 = action[0];
          var newrecord$31 = Caml_obj.caml_obj_dup(state);
          newrecord$31.items = $$Array.mapi((function (i, item) {
                  if (index$23 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showRegroupMenu = !item.showRegroupMenu;
                  return newrecord;
                }), state.items);
          return newrecord$31;
      case /* ClickRegroupMenu */29 :
          var index$24 = action[1];
          var value$15 = action[0];
          var newrecord$32 = Caml_obj.caml_obj_dup(state);
          newrecord$32.items = $$Array.mapi((function (i, item) {
                  if (index$24 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.reGroup = value$15;
                  newrecord.showRegroupMenu = !item.showRegroupMenu;
                  return newrecord;
                }), state.items);
          return newrecord$32;
      case /* ShowReplierMenu */30 :
          var index$25 = action[0];
          var newrecord$33 = Caml_obj.caml_obj_dup(state);
          newrecord$33.items = $$Array.mapi((function (i, item) {
                  if (index$25 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showReplierMenu = !item.showReplierMenu;
                  return newrecord;
                }), state.items);
          return newrecord$33;
      case /* SettingItemReplier */31 :
          var index$26 = action[1];
          var items$1 = action[0];
          var newrecord$34 = Caml_obj.caml_obj_dup(state);
          newrecord$34.items = $$Array.mapi((function (i, item) {
                  if (index$26 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.replieritems = items$1;
                  return newrecord;
                }), state.items);
          return newrecord$34;
      case /* ClickReplierMenu */32 :
          var index$27 = action[1];
          var value$16 = action[0];
          var newrecord$35 = Caml_obj.caml_obj_dup(state);
          newrecord$35.items = $$Array.mapi((function (i, item) {
                  if (index$27 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.replier = value$16;
                  newrecord.showReplierMenu = !item.showReplierMenu;
                  return newrecord;
                }), state.items);
          return newrecord$35;
      case /* ShowIssueMenu */33 :
          var index$28 = action[0];
          var newrecord$36 = Caml_obj.caml_obj_dup(state);
          newrecord$36.items = $$Array.mapi((function (i, item) {
                  if (index$28 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showIssueMenu = !item.showIssueMenu;
                  return newrecord;
                }), state.items);
          return newrecord$36;
      case /* ClickIssueMenu */34 :
          var index$29 = action[1];
          var value$17 = action[0];
          var newrecord$37 = Caml_obj.caml_obj_dup(state);
          newrecord$37.items = $$Array.mapi((function (i, item) {
                  if (index$29 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.issuesort = value$17;
                  newrecord.showIssueMenu = !item.showIssueMenu;
                  return newrecord;
                }), state.items);
          return newrecord$37;
      case /* ShowCauseMenu */35 :
          var index$30 = action[0];
          var newrecord$38 = Caml_obj.caml_obj_dup(state);
          newrecord$38.items = $$Array.mapi((function (i, item) {
                  if (index$30 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showCauseMenu = !item.showCauseMenu;
                  return newrecord;
                }), state.items);
          return newrecord$38;
      case /* SettingItemCause */36 :
          var index$31 = action[1];
          var items$2 = action[0];
          var newrecord$39 = Caml_obj.caml_obj_dup(state);
          newrecord$39.items = $$Array.mapi((function (i, item) {
                  if (index$31 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.causeitems = items$2;
                  return newrecord;
                }), state.items);
          return newrecord$39;
      case /* ClickCauseMenu */37 :
          var index$32 = action[1];
          var value$18 = action[0];
          var newrecord$40 = Caml_obj.caml_obj_dup(state);
          newrecord$40.items = $$Array.mapi((function (i, item) {
                  if (index$32 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.causeclass = value$18;
                  newrecord.showCauseMenu = !item.showCauseMenu;
                  return newrecord;
                }), state.items);
          return newrecord$40;
      case /* ChangeDirectPt */38 :
          var index$33 = action[1];
          var value$19 = action[0];
          var newrecord$41 = Caml_obj.caml_obj_dup(state);
          newrecord$41.items = $$Array.mapi((function (i, item) {
                  if (index$33 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.directPt = value$19;
                  return newrecord;
                }), state.items);
          return newrecord$41;
      case /* ChangeIndirectPt */39 :
          var index$34 = action[1];
          var value$20 = action[0];
          var newrecord$42 = Caml_obj.caml_obj_dup(state);
          newrecord$42.items = $$Array.mapi((function (i, item) {
                  if (index$34 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.indirectPt = value$20;
                  return newrecord;
                }), state.items);
          return newrecord$42;
      case /* ChangeCorrectiveaction1 */40 :
          var index$35 = action[1];
          var value$21 = action[0];
          var newrecord$43 = Caml_obj.caml_obj_dup(state);
          newrecord$43.items = $$Array.mapi((function (i, item) {
                  if (index$35 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.correctiveaction1 = value$21;
                  return newrecord;
                }), state.items);
          return newrecord$43;
      case /* ChangeCorrectiveaction2 */41 :
          var index$36 = action[1];
          var value$22 = action[0];
          var newrecord$44 = Caml_obj.caml_obj_dup(state);
          newrecord$44.items = $$Array.mapi((function (i, item) {
                  if (index$36 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.correctiveaction2 = value$22;
                  return newrecord;
                }), state.items);
          return newrecord$44;
      case /* UploadOtherFile */42 :
          var index$37 = action[9];
          var date = action[8];
          var extension = action[7];
          var encryption = action[6];
          var original = action[5];
          var path = action[4];
          var src = action[3];
          var showAudio = action[2];
          var showVideo = action[1];
          var showImage = action[0];
          var newrecord$45 = Caml_obj.caml_obj_dup(state);
          newrecord$45.items = $$Array.mapi((function (i, item) {
                  if (index$37 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.date = date;
                  newrecord.extension = extension;
                  newrecord.encryption = encryption;
                  newrecord.original = original;
                  newrecord.path = path;
                  newrecord.src = src;
                  newrecord.showAudio = showAudio;
                  newrecord.showVideo = showVideo;
                  newrecord.showImage = showImage;
                  newrecord.showFile = true;
                  return newrecord;
                }), state.items);
          return newrecord$45;
      case /* ChangeClosure */43 :
          var index$38 = action[1];
          var value$23 = action[0];
          var newrecord$46 = Caml_obj.caml_obj_dup(state);
          newrecord$46.items = $$Array.mapi((function (i, item) {
                  if (index$38 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.closure = value$23;
                  return newrecord;
                }), state.items);
          return newrecord$46;
      case /* SwitchNotice */44 :
          var index$39 = action[0];
          var newrecord$47 = Caml_obj.caml_obj_dup(state);
          newrecord$47.items = $$Array.mapi((function (i, item) {
                  if (index$39 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.notice = !item.notice;
                  return newrecord;
                }), state.items);
          return newrecord$47;
      case /* SwitchNonstatistical */45 :
          var index$40 = action[0];
          var newrecord$48 = Caml_obj.caml_obj_dup(state);
          newrecord$48.items = $$Array.mapi((function (i, item) {
                  if (index$40 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.nonstatistical = !item.nonstatistical;
                  return newrecord;
                }), state.items);
          return newrecord$48;
      case /* ChangeBody */46 :
          var index$41 = action[1];
          var value$24 = action[0];
          var newrecord$49 = Caml_obj.caml_obj_dup(state);
          newrecord$49.items = $$Array.mapi((function (i, item) {
                  if (index$41 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.body = value$24;
                  return newrecord;
                }), state.items);
          return newrecord$49;
      case /* ShowBelongMenu */47 :
          var index$42 = action[0];
          var newrecord$50 = Caml_obj.caml_obj_dup(state);
          newrecord$50.items = $$Array.mapi((function (i, item) {
                  if (index$42 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showBelongMenu = !item.showBelongMenu;
                  return newrecord;
                }), state.items);
          return newrecord$50;
      case /* ClickBelongMenu */48 :
          var index$43 = action[1];
          var value$25 = action[0];
          var newrecord$51 = Caml_obj.caml_obj_dup(state);
          newrecord$51.items = $$Array.mapi((function (i, item) {
                  if (index$43 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.belong = value$25;
                  newrecord.showBelongMenu = !item.showBelongMenu;
                  return newrecord;
                }), state.items);
          return newrecord$51;
      case /* ChangeBelonger */49 :
          var index$44 = action[1];
          var value$26 = action[0];
          var newrecord$52 = Caml_obj.caml_obj_dup(state);
          newrecord$52.items = $$Array.mapi((function (i, item) {
                  if (index$44 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.belonger = value$26;
                  return newrecord;
                }), state.items);
          return newrecord$52;
      case /* ShowStageMenu */50 :
          var index$45 = action[0];
          var newrecord$53 = Caml_obj.caml_obj_dup(state);
          newrecord$53.items = $$Array.mapi((function (i, item) {
                  if (index$45 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showStageMenu = !item.showStageMenu;
                  return newrecord;
                }), state.items);
          return newrecord$53;
      case /* ClickStageMenu */51 :
          var index$46 = action[1];
          var value$27 = action[0];
          var newrecord$54 = Caml_obj.caml_obj_dup(state);
          newrecord$54.items = $$Array.mapi((function (i, item) {
                  if (index$46 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.stage = value$27;
                  newrecord.showStageMenu = !item.showStageMenu;
                  return newrecord;
                }), state.items);
          return newrecord$54;
      case /* ShowDrop */52 :
          var newrecord$55 = Caml_obj.caml_obj_dup(state);
          newrecord$55.showDrop = action[0];
          return newrecord$55;
      case /* AddPhotoItem */53 :
          var newrecord$56 = Caml_obj.caml_obj_dup(state);
          newrecord$56.photoitems = $$Array.append(state.photoitems, newitem(state.photoitems.length + 1 | 0, action[0], action[1], action[2], action[3], action[4], action[5], action[6], action[7], action[8]));
          return newrecord$56;
      case /* ActionPhotoItem */54 :
          var index$47 = action[0];
          var newrecord$57 = Caml_obj.caml_obj_dup(state);
          newrecord$57.photoitems = $$Array.mapi((function (i, photoitem) {
                  if (index$47 === i) {
                    return {
                            photoId: photoitem.photoId,
                            photoImage: photoitem.photoImage,
                            photoVideo: photoitem.photoVideo,
                            photoAudio: photoitem.photoAudio,
                            photoSrc: photoitem.photoSrc,
                            photoPath: photoitem.photoPath,
                            photoOriginal: photoitem.photoOriginal,
                            photoEncryption: photoitem.photoEncryption,
                            photoExtension: photoitem.photoExtension,
                            photoDate: photoitem.photoDate,
                            photoInsert: photoitem.photoInsert,
                            showDelete: photoitem.showDelete,
                            photoDelete: !photoitem.photoDelete
                          };
                  } else {
                    return photoitem;
                  }
                }), state.photoitems);
          return newrecord$57;
      case /* ActionSnackBar */55 :
          var newrecord$58 = Caml_obj.caml_obj_dup(state);
          newrecord$58.youtubeText = action[0];
          newrecord$58.showYoutube = action[1];
          return newrecord$58;
      case /* SettingAlbumItems */56 :
          var newrecord$59 = Caml_obj.caml_obj_dup(state);
          newrecord$59.albumitems = action[2];
          newrecord$59.albumTile = action[1];
          newrecord$59.albumId = action[0];
          newrecord$59.showAlbumFull = !state.showAlbumFull;
          return newrecord$59;
      
    }
  }
}

var initialState_tabitems = /* :: */[
  {
    showTab: true,
    tabImage: Icons$BtsCore.bookBlack
  },
  /* :: */[
    {
      showTab: false,
      tabImage: Icons$BtsCore.collectionsBlack
    },
    /* [] */0
  ]
];

var initialState_items = [];

var initialState_photoitems = [];

var initialState_albumitems = [];

var initialState = {
  formLoad: false,
  formWidth: 0,
  formHeight: 0,
  showProgress: true,
  error: false,
  insert: false,
  update: false,
  delete: false,
  export: false,
  formId: "",
  formTitle: "",
  tabitems: initialState_tabitems,
  index: 0,
  items: initialState_items,
  showDrop: false,
  photoitems: initialState_photoitems,
  showAlbumFull: false,
  albumId: "",
  albumTile: "",
  albumitems: initialState_albumitems,
  showYoutube: false,
  youtubeText: ""
};

function defaultFloat(value) {
  if (value === "") {
    return "0.0";
  } else {
    return value;
  }
}

function ModifyR(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var fileRef = React.useRef(null);
  var barShowRestoreAction = function (youtubeText) {
    Curry._1(dispatch, /* ActionSnackBar */Block.__(55, [
            youtubeText,
            true
          ]));
    setTimeout((function (param) {
            return Curry._1(dispatch, /* ActionSnackBar */Block.__(55, [
                          "",
                          false
                        ]));
          }), 5000);
    
  };
  var searchAJax = function (id) {
    Axiosapi$BtsCore.Default.sItem(Data$BtsCore.dFormData(id, localStorage.getItem("newid"))).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* SettingFormItems */Block.__(3, [
                        id,
                        response.data.tile,
                        response.data.items
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              } else {
                Curry._1(dispatch, /* SettingError */0);
                barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var permissAJax = function (param) {
    Axiosapi$BtsCore.Form.permiss(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
              return Promise.resolve((Curry._1(dispatch, /* ActionPermissItems */Block.__(2, [
                                  response.data.insert,
                                  response.data.update,
                                  response.data.delete,
                                  response.data.export
                                ])), searchAJax(ReasonReactRouter.dangerouslyGetInitialUrl(undefined).hash)));
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  React.useEffect((function () {
          var match = state.formLoad;
          if (match) {
            return (function (param) {
                      console.log("action");
                      
                    });
          }
          Curry._1(dispatch, /* SettingFormLoad */Block.__(0, [ReasonReactRouter.dangerouslyGetInitialUrl(undefined).hash]));
          Curry._1(dispatch, /* SettingFormWidth */Block.__(1, [
                  window.innerWidth,
                  window.innerHeight
                ]));
          var timeId = permissAJax(undefined);
          return (function (param) {
                    return timeId;
                  });
        }));
  var handleResize = function ($$event) {
    return Curry._1(dispatch, /* SettingFormWidth */Block.__(1, [
                  $$event.currentTarget.innerWidth,
                  $$event.currentTarget.innerHeight
                ]));
  };
  React.useEffect((function () {
          var watchId = ReasonReactRouter.watchUrl((function (param) {
                  Curry._1(dispatch, /* SettingFormLoad */Block.__(0, [ReasonReactRouter.dangerouslyGetInitialUrl(undefined).hash]));
                  return Curry._1(dispatch, /* ActionShowProgress */1);
                }));
          window.addEventListener("resize", handleResize, true);
          return (function (param) {
                    ReasonReactRouter.unwatchUrl(watchId);
                    
                  });
        }), ([]));
  var clickItemTab = React.useCallback((function (i) {
          Curry._1(dispatch, /* ClickItemTab */Block.__(4, [i]));
          if (i === 1) {
            Axiosapi$BtsCore.Default.sFile(Data$BtsCore.dFormData(state.formId, localStorage.getItem("newid"))).then((function (response) {
                      return Promise.resolve(Curry._1(dispatch, /* SettingPhotoItems */Block.__(5, [response.data.items])));
                    })).catch((function (error) {
                    return Promise.resolve((console.log(error), undefined));
                  }));
            return ;
          }
          
        }));
  var clearForm = React.useCallback((function (param) {
          Curry._1(dispatch, /* ActionShowProgress */1);
          Axiosapi$BtsCore.Default.clear(Data$BtsCore.dFormData(state.formId, localStorage.getItem("newid"))).then((function (response) {
                    var match = response.data.status;
                    var tmp;
                    if (match === "istrue") {
                      sessionStorage.setItem("form", "deleteSuccess");
                      tmp = ReasonReactRouter.push(Path$BtsCore.homePath);
                    } else {
                      barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */1);
                    }
                    return Promise.resolve(tmp);
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var insertForm = React.useCallback((function (param) {
          Curry._1(dispatch, /* ActionShowProgress */1);
          Axiosapi$BtsCore.Default.insert(Data$BtsCore.iFormsData(state.formId, state.formTitle, state.items.filter((function (item) {
                              return item.formModify === true;
                            })), state.photoitems.filter((function (photoitem) {
                              if (photoitem.photoInsert === true) {
                                return true;
                              } else {
                                return photoitem.photoDelete === true;
                              }
                            })), localStorage.getItem("newid"))).then((function (response) {
                    var match = response.data.status;
                    var tmp;
                    if (match === "istrue") {
                      sessionStorage.setItem("form", "saveSuccess");
                      tmp = ReasonReactRouter.push(Path$BtsCore.homePath);
                    } else {
                      barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */1);
                    }
                    return Promise.resolve(tmp);
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var sendForm = React.useCallback((function (param) {
          Curry._1(dispatch, /* ActionShowProgress */1);
          Axiosapi$BtsCore.Default.send(Data$BtsCore.iFormsData(state.formId, state.formTitle, state.items.filter((function (item) {
                              return item.formModify === true;
                            })), state.photoitems.filter((function (photoitem) {
                              if (photoitem.photoInsert === true) {
                                return true;
                              } else {
                                return photoitem.photoDelete === true;
                              }
                            })), localStorage.getItem("newid"))).then((function (response) {
                    var match = response.data.status;
                    var tmp;
                    if (match === "istrue") {
                      sessionStorage.setItem("form", "sendSuccess");
                      tmp = ReasonReactRouter.push(Path$BtsCore.homePath);
                    } else {
                      barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */1);
                    }
                    return Promise.resolve(tmp);
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var showFloorMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowFloorMenu */Block.__(6, [i]));
        }));
  var clickFloorMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickFloorMenu */Block.__(7, [
                            value,
                            i
                          ]));
            });
        }));
  var changeWorkno = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeWorkno */Block.__(8, [
                            value,
                            i
                          ]));
            });
        }));
  var keydownWorkno = React.useCallback((function (keyCode) {
          return (function (value, i) {
              if (keyCode === 13) {
                Axiosapi$BtsCore.CreateR.sWorkno(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                          return Promise.resolve(Curry._1(dispatch, /* SettingItemWorkno */Block.__(9, [
                                            Caml_array.caml_array_get(response.data.items, 0).showxps,
                                            Caml_array.caml_array_get(response.data.items, 0).custname,
                                            Caml_array.caml_array_get(response.data.items, 0).pnumber,
                                            Caml_array.caml_array_get(response.data.items, 0).mbname,
                                            Caml_array.caml_array_get(response.data.items, 0).momoitems,
                                            Caml_array.caml_array_get(response.data.items, 0).mb,
                                            Caml_array.caml_array_get(response.data.items, 0).mbitems,
                                            Caml_array.caml_array_get(response.data.items, 0).amount,
                                            i
                                          ])));
                        })).catch((function (error) {
                        return Promise.resolve((console.log(error), undefined));
                      }));
                return ;
              }
              
            });
        }));
  var showXpsFile = React.useCallback((function (value) {
          Curry._1(dispatch, /* ActionShowProgress */1);
          Axiosapi$BtsCore.CreateR.sXps(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                    var match = response.data.status;
                    var tmp;
                    if (match === "istrue") {
                      Curry._1(dispatch, /* SettingAlbumItems */Block.__(56, [
                              response.data.formId,
                              response.data.tile,
                              response.data.items
                            ]));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */1);
                    } else {
                      barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */1);
                    }
                    return Promise.resolve(tmp);
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var changePage1 = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangePage1 */Block.__(10, [
                            value,
                            i
                          ]));
            });
        }));
  var changePnumber = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangePnumber */Block.__(11, [
                            value,
                            i
                          ]));
            });
        }));
  var showMomoMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowMomoMenu */Block.__(12, [i]));
        }));
  var clickMomoMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickMomoMenu */Block.__(13, [
                            value,
                            i
                          ]));
            });
        }));
  var showMbMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowMbMenu */Block.__(14, [i]));
        }));
  var clickMbMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickMbMenu */Block.__(15, [
                            value,
                            i
                          ]));
            });
        }));
  var showObjMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowObjMenu */Block.__(16, [i]));
        }));
  var clickObjMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickObjMenu */Block.__(17, [
                            value,
                            i
                          ]));
            });
        }));
  var changePn = React.useCallback((function (value) {
          return (function (workno, i) {
              Curry._1(dispatch, /* ChangePn */Block.__(20, [
                      value,
                      i
                    ]));
              Axiosapi$BtsCore.CreateR.sPn(Data$BtsCore.sRowsData(workno, value, localStorage.getItem("newid"))).then((function (response) {
                        return Promise.resolve(Curry._1(dispatch, /* SettingItemPn */Block.__(19, [
                                          response.data.items,
                                          i
                                        ])));
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var showPn = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowPn */Block.__(18, [
                        false,
                        i
                      ]));
        }));
  var clickItemPn = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickItemPn */Block.__(21, [
                            value,
                            i
                          ]));
            });
        }));
  var changeAmount = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeAmount */Block.__(22, [
                            value,
                            i
                          ]));
            });
        }));
  var changeInvest = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeInvest */Block.__(23, [
                            value,
                            i
                          ]));
            });
        }));
  var changeFail = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeFail */Block.__(24, [
                            value,
                            i
                          ]));
            });
        }));
  var changeSubject = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeSubject */Block.__(25, [
                            value,
                            i
                          ]));
            });
        }));
  var changeContainment = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeContainment */Block.__(26, [
                            value,
                            i
                          ]));
            });
        }));
  var changeCause = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeCause */Block.__(27, [
                            value,
                            i
                          ]));
            });
        }));
  var showRegroupMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowRegroupMenu */Block.__(28, [i]));
        }));
  var clickRegroupMenu = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickRegroupMenu */Block.__(29, [
                      value,
                      i
                    ]));
              Axiosapi$BtsCore.CreateR.sGroup(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                        return Promise.resolve(Curry._1(dispatch, /* SettingItemReplier */Block.__(31, [
                                          response.data.items,
                                          i
                                        ])));
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var showReplierMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowReplierMenu */Block.__(30, [i]));
        }));
  var clickReplierMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickReplierMenu */Block.__(32, [
                            value,
                            i
                          ]));
            });
        }));
  var showIssueMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowIssueMenu */Block.__(33, [i]));
        }));
  var clickIssueMenu = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickIssueMenu */Block.__(34, [
                      value,
                      i
                    ]));
              Axiosapi$BtsCore.CreateR.sIssus(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                        return Promise.resolve(Curry._1(dispatch, /* SettingItemCause */Block.__(36, [
                                          response.data.items,
                                          i
                                        ])));
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var showCauseMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowCauseMenu */Block.__(35, [i]));
        }));
  var clickCauseMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickCauseMenu */Block.__(37, [
                            value,
                            i
                          ]));
            });
        }));
  var changeDirectPt = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeDirectPt */Block.__(38, [
                            value,
                            i
                          ]));
            });
        }));
  var changeIndirectPt = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeIndirectPt */Block.__(39, [
                            value,
                            i
                          ]));
            });
        }));
  var changeCorrectiveaction1 = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeCorrectiveaction1 */Block.__(40, [
                            value,
                            i
                          ]));
            });
        }));
  var changeCorrectiveaction2 = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeCorrectiveaction2 */Block.__(41, [
                            value,
                            i
                          ]));
            });
        }));
  var changeClosure = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeClosure */Block.__(43, [
                            value,
                            i
                          ]));
            });
        }));
  var switchNotice = React.useCallback((function (i) {
          return Curry._1(dispatch, /* SwitchNotice */Block.__(44, [i]));
        }));
  var switchNonstatistical = React.useCallback((function (i) {
          return Curry._1(dispatch, /* SwitchNonstatistical */Block.__(45, [i]));
        }));
  var changeBody = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeBody */Block.__(46, [
                            value,
                            i
                          ]));
            });
        }));
  var showBelongMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowBelongMenu */Block.__(47, [i]));
        }));
  var clickBelongMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickBelongMenu */Block.__(48, [
                            value,
                            i
                          ]));
            });
        }));
  var changeBelonger = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeBelonger */Block.__(49, [
                            value,
                            i
                          ]));
            });
        }));
  var showStageMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowStageMenu */Block.__(50, [i]));
        }));
  var clickStageMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickStageMenu */Block.__(51, [
                            value,
                            i
                          ]));
            });
        }));
  var dragOverFile = React.useCallback((function ($$event) {
          $$event.preventDefault();
          $$event.stopPropagation();
          return Curry._1(dispatch, /* ShowDrop */Block.__(52, [true]));
        }));
  var dragLeaveFile = React.useCallback((function ($$event) {
          $$event.preventDefault();
          $$event.stopPropagation();
          return Curry._1(dispatch, /* ShowDrop */Block.__(52, [false]));
        }));
  var uploadAJax = function (files) {
    var formData = new FormData();
    formData.append("file", files);
    Axiosapi$BtsCore.Files.upload(formData).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* AddPhotoItem */Block.__(53, [
                        response.data.images,
                        response.data.videos,
                        response.data.audios,
                        response.data.src,
                        response.data.imagePath,
                        response.data.original,
                        response.data.encryption,
                        response.data.extension,
                        response.data.date
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              } else {
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var dropFile = React.useCallback((function ($$event) {
          return (function (value) {
              $$event.preventDefault();
              $$event.stopPropagation();
              Curry._1(dispatch, /* ActionShowProgress */1);
              Curry._1(dispatch, /* ShowDrop */Block.__(52, [false]));
              return uploadAJax(value);
            });
        }));
  var chooseFile = React.useCallback((function (param) {
          var el = fileRef.current;
          if (!(el == null)) {
            el.click();
            return ;
          }
          
        }));
  var changeFile = React.useCallback((function (value) {
          Curry._1(dispatch, /* ActionShowProgress */1);
          return uploadAJax(value);
        }));
  var actionPhoto = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ActionPhotoItem */Block.__(54, [i]));
        }));
  var upOtherAJax = function (files, i) {
    var formData = new FormData();
    formData.append("file", files);
    Axiosapi$BtsCore.Files.upload(formData).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* UploadOtherFile */Block.__(42, [
                        response.data.images,
                        response.data.videos,
                        response.data.audios,
                        response.data.src,
                        response.data.imagePath,
                        response.data.original,
                        response.data.encryption,
                        response.data.extension,
                        response.data.date,
                        i
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              } else {
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var dropOtherFile = React.useCallback((function ($$event) {
          return (function (value, i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              Curry._1(dispatch, /* ActionShowProgress */1);
              Curry._1(dispatch, /* ShowDrop */Block.__(52, [false]));
              return upOtherAJax(value, i);
            });
        }));
  var changeOtherFile = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ActionShowProgress */1);
              return upOtherAJax(value, i);
            });
        }));
  var closeAlbumFull = React.useCallback((function (param) {
          return Curry._1(dispatch, /* CloseAlbumFull */2);
        }));
  var downloadAlbum = React.useCallback((function (param) {
          Curry._1(dispatch, /* ActionShowProgress */1);
          Axiosapi$BtsCore.CreateR.download(Data$BtsCore.dFormData(state.albumId, localStorage.getItem("newid"))).then((function (response) {
                    var match = response.data.status;
                    var tmp;
                    if (match === "istrue") {
                      window.location.assign(response.data.value);
                      tmp = Curry._1(dispatch, /* ActionShowProgress */1);
                    } else {
                      barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */1);
                    }
                    return Promise.resolve(tmp);
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var match$1 = state.index;
  return React.createElement(React.Fragment, undefined, React.createElement(NewFacetube$BtsCore.make, {
                  showProgress: state.showProgress,
                  error: state.error,
                  children: React.createElement(GridItem$BtsCore.make, {
                        style: Together$BtsCore.marginAuto,
                        top: "0",
                        right: "32",
                        bottom: "0",
                        left: "32",
                        xs: "12",
                        maxWidth: "770px",
                        children: React.createElement(GridContainer$BtsCore.make, {
                              direction: "column",
                              justify: "center",
                              alignItem: "stretch",
                              children: null
                            }, React.createElement(GridItem$BtsCore.make, {
                                  style: {
                                    position: "sticky",
                                    top: "0px",
                                    zIndex: "1000"
                                  },
                                  left: "0",
                                  xs: "auto",
                                  children: React.createElement(Typography$BtsCore.make, {
                                        variant: "tile",
                                        fontWeight: "600",
                                        children: state.formTitle
                                      })
                                }), React.createElement(GridItem$BtsCore.make, {
                                  style: {
                                    position: "sticky",
                                    top: "50px",
                                    zIndex: "1000"
                                  },
                                  top: "0",
                                  bottom: "6",
                                  left: "0",
                                  xs: "auto",
                                  children: React.createElement(GridContainer$BtsCore.make, {
                                        direction: "row",
                                        justify: "around",
                                        alignItem: "center",
                                        children: null
                                      }, React.createElement(GridItem$BtsCore.make, {
                                            top: "0",
                                            right: "0",
                                            bottom: "0",
                                            left: "0",
                                            xs: "auto",
                                            children: React.createElement(Tabs$BtsCore.make, {
                                                  id: "report-",
                                                  index: state.index,
                                                  height: "3",
                                                  children: $$Array.of_list(List.mapi((function (i, tabitem) {
                                                              return React.createElement(Tab$BtsCore.make, {
                                                                          showTab: tabitem.showTab,
                                                                          maxWidth: "111.6",
                                                                          borderRadius: "15",
                                                                          id: "report-" + String(i),
                                                                          animationName: "none",
                                                                          onClick: (function (param) {
                                                                              return Curry._1(clickItemTab, i);
                                                                            }),
                                                                          children: React.createElement(IconAction$BtsCore.make, {
                                                                                width: "28",
                                                                                height: "28",
                                                                                animation: "leftRight",
                                                                                src: tabitem.tabImage
                                                                              })
                                                                        });
                                                            }), state.tabitems))
                                                })
                                          }), $$Array.map((function (item) {
                                              return React.createElement(React.Fragment, undefined, item.formDelete ? React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "no",
                                                                children: React.createElement(Button$BtsCore.make, {
                                                                      disabled: state.showProgress,
                                                                      onClick: clearForm,
                                                                      children: React.createElement(ReactIntl.FormattedMessage, {
                                                                            id: "deleted",
                                                                            defaultMessage: "Deleted"
                                                                          })
                                                                    })
                                                              }) : null, item.formEdit || item.formQuality ? React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "no",
                                                                children: React.createElement(Button$BtsCore.make, {
                                                                      disabled: state.showProgress,
                                                                      onClick: insertForm,
                                                                      children: React.createElement(ReactIntl.FormattedMessage, {
                                                                            id: "save",
                                                                            defaultMessage: "Save"
                                                                          })
                                                                    })
                                                              }) : null, item.formSend ? React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "no",
                                                                children: React.createElement(Button$BtsCore.make, {
                                                                      disabled: state.showProgress,
                                                                      onClick: sendForm,
                                                                      children: React.createElement(ReactIntl.FormattedMessage, {
                                                                            id: "send",
                                                                            defaultMessage: "Send"
                                                                          })
                                                                    })
                                                              }) : null);
                                            }), state.items))
                                }), match$1 !== 0 ? React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                        top: "0",
                                        right: "0",
                                        bottom: "0",
                                        left: "0",
                                        xs: "auto",
                                        children: React.createElement(GeneralUpload$BtsCore.make, {
                                              webLoad: state.showProgress,
                                              showDrop: state.showDrop,
                                              fileRef: fileRef,
                                              onDragOver: Curry.__1(dragOverFile),
                                              onDragLeave: Curry.__1(dragLeaveFile),
                                              onDrop: (function ($$event) {
                                                  return Curry._2(dropFile, $$event, Caml_array.caml_array_get($$event.nativeEvent.dataTransfer.files, 0));
                                                }),
                                              disabled: state.showProgress,
                                              onClick: chooseFile,
                                              onChange: (function ($$event) {
                                                  return Curry._1(changeFile, Caml_array.caml_array_get($$event.target.files, 0));
                                                })
                                            })
                                      }), React.createElement(GridItem$BtsCore.make, {
                                        top: "0",
                                        right: "0",
                                        bottom: "0",
                                        left: "0",
                                        xs: "auto",
                                        children: React.createElement(GridContainer$BtsCore.make, {
                                              direction: "columnReverse",
                                              justify: "center",
                                              alignItem: "stretch",
                                              children: $$Array.mapi((function (i, photoitem) {
                                                      var match = photoitem.photoImage;
                                                      var match$1 = photoitem.photoVideo;
                                                      var match$2 = photoitem.photoAudio;
                                                      return React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                                                      enterBorderRadius: "15",
                                                                      borderRadius: "15",
                                                                      enterBackgroundColor: photoitem.photoDelete ? "rgba(255,0,0,1)" : "rgba(255,255,255,1)",
                                                                      backgroundColor: photoitem.photoDelete ? "rgba(255,0,0,0.8)" : "rgba(255,255,255,1)",
                                                                      xs: "auto",
                                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                                            backgroundColor: "transparent",
                                                                            direction: "columnReverse",
                                                                            justify: "center",
                                                                            alignItem: "stretch",
                                                                            children: null
                                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                                top: "0",
                                                                                right: "0",
                                                                                bottom: "0",
                                                                                left: "0",
                                                                                enterBackgroundColor: "transparent",
                                                                                backgroundColor: "transparent",
                                                                                xs: "auto",
                                                                                children: match ? React.createElement(Image$BtsCore.make, {
                                                                                        width: "auto",
                                                                                        height: "300px",
                                                                                        borderRadius: "6",
                                                                                        src: photoitem.photoPath + photoitem.photoSrc
                                                                                      }) : (
                                                                                    match$1 ? React.createElement(Media$BtsCore.make, {
                                                                                            width: "auto",
                                                                                            borderRadius: "6",
                                                                                            controls: true,
                                                                                            src: photoitem.photoPath + photoitem.photoSrc
                                                                                          }) : (
                                                                                        match$2 ? React.createElement(Media$BtsCore.make, {
                                                                                                variant: "audio",
                                                                                                width: "auto",
                                                                                                borderRadius: "6",
                                                                                                controls: true,
                                                                                                src: photoitem.photoPath + photoitem.photoSrc
                                                                                              }) : null
                                                                                      )
                                                                                  )
                                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                                top: "0",
                                                                                right: "0",
                                                                                bottom: "6",
                                                                                left: "0",
                                                                                enterBackgroundColor: "transparent",
                                                                                backgroundColor: "transparent",
                                                                                xs: "auto",
                                                                                children: React.createElement(GridContainer$BtsCore.make, {
                                                                                      backgroundColor: "transparent",
                                                                                      direction: "row",
                                                                                      justify: "between",
                                                                                      alignItem: "center",
                                                                                      children: null
                                                                                    }, React.createElement(GridItem$BtsCore.make, {
                                                                                          top: "0",
                                                                                          right: "0",
                                                                                          bottom: "0",
                                                                                          left: "0",
                                                                                          enterBackgroundColor: "transparent",
                                                                                          backgroundColor: "transparent",
                                                                                          xs: "auto",
                                                                                          children: React.createElement(Typography$BtsCore.make, {
                                                                                                variant: "subheading",
                                                                                                color: photoitem.photoDelete ? "rgba(255,255,255,1)" : "rgba(0,0,0,1)",
                                                                                                noWrap: true,
                                                                                                children: photoitem.photoOriginal + photoitem.photoExtension
                                                                                              })
                                                                                        }), photoitem.showDelete ? React.createElement(GridItem$BtsCore.make, {
                                                                                            top: "0",
                                                                                            right: "0",
                                                                                            bottom: "0",
                                                                                            left: "0",
                                                                                            enterBackgroundColor: "transparent",
                                                                                            backgroundColor: "transparent",
                                                                                            xs: "no",
                                                                                            children: React.createElement(IconButton$BtsCore.make, {
                                                                                                  padding: "6",
                                                                                                  disabled: state.showProgress,
                                                                                                  onClick: (function (param) {
                                                                                                      return Curry._1(actionPhoto, i);
                                                                                                    }),
                                                                                                  children: React.createElement(IconAction$BtsCore.make, {
                                                                                                        animation: "leftRight",
                                                                                                        src: photoitem.photoDelete ? Icons$BtsCore.refreshWhite : Icons$BtsCore.deleteBlack
                                                                                                      })
                                                                                                })
                                                                                          }) : null)
                                                                              }))
                                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                                      right: "24",
                                                                      left: "24",
                                                                      xs: "auto",
                                                                      children: React.createElement(Divider$BtsCore.make, { })
                                                                    }));
                                                    }), state.photoitems)
                                            })
                                      })) : $$Array.mapi((function (i, item) {
                                      return React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                                      top: "18",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(Typography$BtsCore.make, {
                                                            variant: "subheading",
                                                            color: "rgba(0,0,0,0.6)",
                                                            fontWeight: "bolder",
                                                            children: "【Characterize】問題描述"
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "center",
                                                            alignItem: "center",
                                                            children: null
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                top: "20",
                                                                right: "0",
                                                                bottom: "6",
                                                                left: "6",
                                                                xs: "auto",
                                                                children: React.createElement(Typography$BtsCore.make, {
                                                                      variant: "subheading",
                                                                      fontWeight: "bolder",
                                                                      children: item.postdate
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      value: item.postGroup,
                                                                      disabled: true,
                                                                      children: "提出部門"
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      value: item.postName,
                                                                      disabled: true,
                                                                      children: "提出者"
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: null
                                                              }, React.createElement(SelectStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    tile: "生產樓層",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.floor,
                                                                    disabled: state.showProgress || !item.formEdit || !state.update,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showFloorMenu, i);
                                                                      }),
                                                                    children: /* tuple */[
                                                                      item.showFloorMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                              top: "0",
                                                                              transform: "translate(0, 0)",
                                                                              maxHeight: "280",
                                                                              minHeight: "0",
                                                                              topLeft: "12",
                                                                              topRight: "12",
                                                                              bottomRight: "12",
                                                                              bottomLeft: "12",
                                                                              paddingRight: "8",
                                                                              paddingLeft: "8",
                                                                              children: $$Array.map((function (flooritem) {
                                                                                      return React.createElement(MenuItem$BtsCore.make, {
                                                                                                  top: "0",
                                                                                                  right: "8",
                                                                                                  bottom: "0",
                                                                                                  left: "8",
                                                                                                  disablePadding: flooritem.optionPadding,
                                                                                                  topLeft: "12",
                                                                                                  topRight: "12",
                                                                                                  bottomRight: "12",
                                                                                                  bottomLeft: "12",
                                                                                                  onClick: (function (param) {
                                                                                                      return Curry._2(clickFloorMenu, flooritem.value, i);
                                                                                                    }),
                                                                                                  children: flooritem.value
                                                                                                });
                                                                                    }), item.flooritems)
                                                                            }) : null,
                                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                                            animation: IconAnimation$BtsCore.topDownRorate(item.showFloorMenu),
                                                                            src: Icons$BtsCore.arrowDownBlack
                                                                          })
                                                                    ]
                                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                    showBackground: item.showFloorMenu,
                                                                    backgroundColor: "transparent",
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showFloorMenu, i);
                                                                      })
                                                                  })))
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "center",
                                                            alignItem: "center",
                                                            children: null
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(GridContainer$BtsCore.make, {
                                                                      direction: "row",
                                                                      justify: "between",
                                                                      alignItem: "center",
                                                                      children: null
                                                                    }, React.createElement(GridItem$BtsCore.make, {
                                                                          top: "0",
                                                                          right: "0",
                                                                          bottom: "0",
                                                                          left: "0",
                                                                          xs: "auto",
                                                                          children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                                top: "12",
                                                                                right: "0",
                                                                                left: "0",
                                                                                labelColor: "rgba(255,0,0,0.8)",
                                                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                                                borderColor: "rgba(0,0,0,0.2)",
                                                                                value: item.workno,
                                                                                disabled: state.showProgress || !item.formEdit || !state.update,
                                                                                onChange: (function ($$event) {
                                                                                    return Curry._2(changeWorkno, $$event.target.value, i);
                                                                                  }),
                                                                                onKeyDown: (function ($$event) {
                                                                                    return Curry._3(keydownWorkno, $$event.keyCode, $$event.target.value, i);
                                                                                  }),
                                                                                children: "工單"
                                                                              })
                                                                        }), item.showXps ? React.createElement(GridItem$BtsCore.make, {
                                                                            top: "0",
                                                                            right: "0",
                                                                            bottom: "0",
                                                                            left: "0",
                                                                            xs: "no",
                                                                            children: React.createElement(IconButton$BtsCore.make, {
                                                                                  padding: "2",
                                                                                  disabled: state.showProgress,
                                                                                  onClick: (function (param) {
                                                                                      return Curry._1(showXpsFile, item.workno);
                                                                                    }),
                                                                                  children: React.createElement(IconAction$BtsCore.make, {
                                                                                        animation: "circle",
                                                                                        src: Icons$BtsCore.visibilityBlack
                                                                                      })
                                                                                })
                                                                          }) : null)
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      value: item.homepage1,
                                                                      disabled: state.showProgress || !item.formEdit || !state.update,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changePage1, $$event.target.value, i);
                                                                        }),
                                                                      children: "客戶"
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      value: item.pnumber,
                                                                      disabled: state.showProgress || !item.formEdit || !state.update,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changePnumber, $$event.target.value, i);
                                                                        }),
                                                                      children: "產品規格單"
                                                                    })
                                                              }))
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "center",
                                                            alignItem: "center",
                                                            children: null
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: null
                                                              }, React.createElement(SelectStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    tile: "機種",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.homepageMomo,
                                                                    disabled: state.showProgress || !item.formEdit || !state.update,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showMomoMenu, i);
                                                                      }),
                                                                    children: /* tuple */[
                                                                      item.showMomoMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                              top: "0",
                                                                              transform: "translate(0, 0)",
                                                                              maxHeight: "280",
                                                                              minHeight: "0",
                                                                              topLeft: "12",
                                                                              topRight: "12",
                                                                              bottomRight: "12",
                                                                              bottomLeft: "12",
                                                                              paddingRight: "8",
                                                                              paddingLeft: "8",
                                                                              children: $$Array.map((function (momoitem) {
                                                                                      return React.createElement(MenuItem$BtsCore.make, {
                                                                                                  top: "0",
                                                                                                  right: "8",
                                                                                                  bottom: "0",
                                                                                                  left: "8",
                                                                                                  disablePadding: momoitem.optionPadding,
                                                                                                  topLeft: "12",
                                                                                                  topRight: "12",
                                                                                                  bottomRight: "12",
                                                                                                  bottomLeft: "12",
                                                                                                  onClick: (function (param) {
                                                                                                      return Curry._2(clickMomoMenu, momoitem.value, i);
                                                                                                    }),
                                                                                                  children: momoitem.value
                                                                                                });
                                                                                    }), item.momoitems)
                                                                            }) : null,
                                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                                            animation: IconAnimation$BtsCore.topDownRorate(item.showMomoMenu),
                                                                            src: Icons$BtsCore.arrowDownBlack
                                                                          })
                                                                    ]
                                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                    showBackground: item.showMomoMenu,
                                                                    backgroundColor: "transparent",
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showMomoMenu, i);
                                                                      })
                                                                  })), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: null
                                                              }, React.createElement(SelectStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    tile: "M/B",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.mb,
                                                                    disabled: state.showProgress || !item.formEdit || !state.update,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showMbMenu, i);
                                                                      }),
                                                                    children: /* tuple */[
                                                                      item.showMbMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                              top: "0",
                                                                              transform: "translate(0, 0)",
                                                                              maxHeight: "280",
                                                                              minHeight: "0",
                                                                              topLeft: "12",
                                                                              topRight: "12",
                                                                              bottomRight: "12",
                                                                              bottomLeft: "12",
                                                                              paddingRight: "8",
                                                                              paddingLeft: "8",
                                                                              children: $$Array.map((function (mbitem) {
                                                                                      return React.createElement(MenuItem$BtsCore.make, {
                                                                                                  top: "0",
                                                                                                  right: "8",
                                                                                                  bottom: "0",
                                                                                                  left: "8",
                                                                                                  disablePadding: mbitem.optionPadding,
                                                                                                  topLeft: "12",
                                                                                                  topRight: "12",
                                                                                                  bottomRight: "12",
                                                                                                  bottomLeft: "12",
                                                                                                  onClick: (function (param) {
                                                                                                      return Curry._2(clickMbMenu, mbitem.value, i);
                                                                                                    }),
                                                                                                  children: mbitem.value
                                                                                                });
                                                                                    }), item.mbitems)
                                                                            }) : null,
                                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                                            animation: IconAnimation$BtsCore.topDownRorate(item.showMbMenu),
                                                                            src: Icons$BtsCore.arrowDownBlack
                                                                          })
                                                                    ]
                                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                    showBackground: item.showMbMenu,
                                                                    backgroundColor: "transparent",
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showMbMenu, i);
                                                                      })
                                                                  })), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: null
                                                              }, React.createElement(SelectStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    tile: "品異來源",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.obj,
                                                                    disabled: state.showProgress || !item.formEdit || !state.update,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showObjMenu, i);
                                                                      }),
                                                                    children: /* tuple */[
                                                                      item.showObjMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                              top: "0",
                                                                              transform: "translate(0, 0)",
                                                                              maxHeight: "280",
                                                                              minHeight: "0",
                                                                              topLeft: "12",
                                                                              topRight: "12",
                                                                              bottomRight: "12",
                                                                              bottomLeft: "12",
                                                                              paddingRight: "8",
                                                                              paddingLeft: "8",
                                                                              children: $$Array.map((function (objitem) {
                                                                                      return React.createElement(MenuItem$BtsCore.make, {
                                                                                                  top: "0",
                                                                                                  right: "8",
                                                                                                  bottom: "0",
                                                                                                  left: "8",
                                                                                                  disablePadding: objitem.optionPadding,
                                                                                                  topLeft: "12",
                                                                                                  topRight: "12",
                                                                                                  bottomRight: "12",
                                                                                                  bottomLeft: "12",
                                                                                                  onClick: (function (param) {
                                                                                                      return Curry._2(clickObjMenu, objitem.value, i);
                                                                                                    }),
                                                                                                  children: objitem.value
                                                                                                });
                                                                                    }), item.objitems)
                                                                            }) : null,
                                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                                            animation: IconAnimation$BtsCore.topDownRorate(item.showObjMenu),
                                                                            src: Icons$BtsCore.arrowDownBlack
                                                                          })
                                                                    ]
                                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                    showBackground: item.showObjMenu,
                                                                    backgroundColor: "transparent",
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showObjMenu, i);
                                                                      })
                                                                  })))
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      style: {
                                                        position: "relative"
                                                      },
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: null
                                                    }, React.createElement(TextFieldStandard$BtsCore.make, {
                                                          top: "12",
                                                          right: "0",
                                                          left: "0",
                                                          labelColor: "rgba(255,0,0,0.8)",
                                                          enterBorderColor: "rgba(255,0,0,0.8)",
                                                          downBorderColor: "rgba(255,0,0,0.6)",
                                                          borderColor: "rgba(0,0,0,0.2)",
                                                          value: item.pn,
                                                          disabled: state.showProgress || !item.formEdit || !state.update,
                                                          onChange: (function ($$event) {
                                                              return Curry._3(changePn, $$event.target.value, item.workno, i);
                                                            }),
                                                          children: "不良料號"
                                                        }), item.showPn ? React.createElement(React.Fragment, undefined, React.createElement(SelectMenu$BtsCore.make, {
                                                                top: "100%",
                                                                transform: "translate(0, 0)",
                                                                maxHeight: "280",
                                                                minHeight: "0",
                                                                topLeft: "12",
                                                                topRight: "12",
                                                                bottomRight: "12",
                                                                bottomLeft: "12",
                                                                paddingRight: "8",
                                                                paddingLeft: "8",
                                                                children: $$Array.map((function (pnitem) {
                                                                        return React.createElement(MenuItem$BtsCore.make, {
                                                                                    top: "8",
                                                                                    right: "15",
                                                                                    bottom: "8",
                                                                                    left: "6",
                                                                                    enterBackgroundColor: "rgba(0,0,0,0.06)",
                                                                                    downBackgroundColor: "rgba(0,0,0,0.08)",
                                                                                    topLeft: "12",
                                                                                    topRight: "12",
                                                                                    bottomRight: "12",
                                                                                    bottomLeft: "12",
                                                                                    onClick: (function (param) {
                                                                                        return Curry._2(clickItemPn, pnitem.value, i);
                                                                                      }),
                                                                                    children: React.createElement(Typography$BtsCore.make, {
                                                                                          variant: "subheading",
                                                                                          children: pnitem.value
                                                                                        })
                                                                                  });
                                                                      }), item.pnitems)
                                                              }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                showBackground: true,
                                                                backgroundColor: "transparent",
                                                                onClick: (function (param) {
                                                                    return Curry._1(showPn, i);
                                                                  })
                                                              })) : null), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "center",
                                                            alignItem: "center",
                                                            children: null
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      type_: "number",
                                                                      value: item.amount,
                                                                      disabled: state.showProgress || !item.formEdit || !state.update,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changeAmount, $$event.target.value, i);
                                                                        }),
                                                                      children: "工單總數"
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      type_: "number",
                                                                      value: item.invest,
                                                                      disabled: state.showProgress || !item.formEdit || !state.update,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changeInvest, $$event.target.value, i);
                                                                        }),
                                                                      children: "投入數"
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      type_: "number",
                                                                      value: item.fail,
                                                                      disabled: state.showProgress || !item.formEdit || !state.update,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changeFail, $$event.target.value, i);
                                                                        }),
                                                                      children: "不良數量"
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "20",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(Typography$BtsCore.make, {
                                                                      variant: "subheading",
                                                                      fontWeight: "bolder",
                                                                      children: "不良率:" + (Pervasives.string_of_float(Math.round(Caml_format.caml_float_of_string(defaultFloat(item.fail)) / Caml_format.caml_float_of_string(defaultFloat(item.invest)) * 10000.0) / 100.0) + "%")
                                                                    })
                                                              }))
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                            top: "12",
                                                            right: "0",
                                                            left: "0",
                                                            labelColor: "rgba(255,0,0,0.8)",
                                                            enterBorderColor: "rgba(255,0,0,0.8)",
                                                            downBorderColor: "rgba(255,0,0,0.6)",
                                                            borderColor: "rgba(0,0,0,0.2)",
                                                            value: item.subject,
                                                            disabled: state.showProgress || !item.formEdit || !state.update,
                                                            onChange: (function ($$event) {
                                                                return Curry._2(changeSubject, $$event.target.value, i);
                                                              }),
                                                            children: "異常內容"
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "18",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(Typography$BtsCore.make, {
                                                            variant: "subheading",
                                                            color: "rgba(0,0,0,0.6)",
                                                            fontWeight: "bolder",
                                                            children: "【Containment】緊急處置"
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(TextFieldMultiline$BtsCore.make, {
                                                            top: "12",
                                                            right: "0",
                                                            left: "0",
                                                            labelColor: "rgba(255,0,0,0.8)",
                                                            enterBorderColor: "rgba(255,0,0,0.8)",
                                                            downBorderColor: "rgba(255,0,0,0.6)",
                                                            borderColor: "rgba(0,0,0,0.2)",
                                                            rows: 3,
                                                            value: item.containment,
                                                            disabled: state.showProgress || !item.formEdit || !state.update,
                                                            onChange: (function ($$event) {
                                                                return Curry._2(changeContainment, $$event.target.value, i);
                                                              }),
                                                            children: null
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "18",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(Typography$BtsCore.make, {
                                                            variant: "subheading",
                                                            color: "rgba(0,0,0,0.6)",
                                                            fontWeight: "bolder",
                                                            children: "【Cause】真因調查"
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(TextFieldMultiline$BtsCore.make, {
                                                            top: "12",
                                                            right: "0",
                                                            left: "0",
                                                            labelColor: "rgba(255,0,0,0.8)",
                                                            enterBorderColor: "rgba(255,0,0,0.8)",
                                                            downBorderColor: "rgba(255,0,0,0.6)",
                                                            borderColor: "rgba(0,0,0,0.2)",
                                                            rows: 3,
                                                            value: item.cause,
                                                            disabled: state.showProgress || !item.formQuality || !state.update,
                                                            onChange: (function ($$event) {
                                                                return Curry._2(changeCause, $$event.target.value, i);
                                                              }),
                                                            children: null
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "center",
                                                            alignItem: "center",
                                                            children: null
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: null
                                                              }, React.createElement(SelectStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    tile: "處理部門",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.reGroup,
                                                                    disabled: state.showProgress || !item.formQuality || !state.update,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showRegroupMenu, i);
                                                                      }),
                                                                    children: /* tuple */[
                                                                      item.showRegroupMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                              top: "0",
                                                                              transform: "translate(0, 0)",
                                                                              maxHeight: "280",
                                                                              minHeight: "0",
                                                                              topLeft: "12",
                                                                              topRight: "12",
                                                                              bottomRight: "12",
                                                                              bottomLeft: "12",
                                                                              paddingRight: "8",
                                                                              paddingLeft: "8",
                                                                              children: $$Array.map((function (regroupitem) {
                                                                                      return React.createElement(MenuItem$BtsCore.make, {
                                                                                                  top: "0",
                                                                                                  right: "8",
                                                                                                  bottom: "0",
                                                                                                  left: "8",
                                                                                                  disablePadding: regroupitem.optionPadding,
                                                                                                  topLeft: "12",
                                                                                                  topRight: "12",
                                                                                                  bottomRight: "12",
                                                                                                  bottomLeft: "12",
                                                                                                  onClick: (function (param) {
                                                                                                      return Curry._2(clickRegroupMenu, regroupitem.value, i);
                                                                                                    }),
                                                                                                  children: regroupitem.value
                                                                                                });
                                                                                    }), item.regroupitems)
                                                                            }) : null,
                                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                                            animation: IconAnimation$BtsCore.topDownRorate(item.showRegroupMenu),
                                                                            src: Icons$BtsCore.arrowDownBlack
                                                                          })
                                                                    ]
                                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                    showBackground: item.showRegroupMenu,
                                                                    backgroundColor: "transparent",
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showRegroupMenu, i);
                                                                      })
                                                                  })), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: null
                                                              }, React.createElement(SelectStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    tile: "處理者",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.replier,
                                                                    disabled: state.showProgress || !item.formQuality || !state.update,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showReplierMenu, i);
                                                                      }),
                                                                    children: /* tuple */[
                                                                      item.showReplierMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                              top: "0",
                                                                              transform: "translate(0, 0)",
                                                                              maxHeight: "280",
                                                                              minHeight: "0",
                                                                              topLeft: "12",
                                                                              topRight: "12",
                                                                              bottomRight: "12",
                                                                              bottomLeft: "12",
                                                                              paddingRight: "8",
                                                                              paddingLeft: "8",
                                                                              children: $$Array.map((function (replieritem) {
                                                                                      return React.createElement(MenuItem$BtsCore.make, {
                                                                                                  top: "0",
                                                                                                  right: "8",
                                                                                                  bottom: "0",
                                                                                                  left: "8",
                                                                                                  disablePadding: replieritem.optionPadding,
                                                                                                  topLeft: "12",
                                                                                                  topRight: "12",
                                                                                                  bottomRight: "12",
                                                                                                  bottomLeft: "12",
                                                                                                  onClick: (function (param) {
                                                                                                      return Curry._2(clickReplierMenu, replieritem.value, i);
                                                                                                    }),
                                                                                                  children: replieritem.value
                                                                                                });
                                                                                    }), item.replieritems)
                                                                            }) : null,
                                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                                            animation: IconAnimation$BtsCore.topDownRorate(item.showReplierMenu),
                                                                            src: Icons$BtsCore.arrowDownBlack
                                                                          })
                                                                    ]
                                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                    showBackground: item.showReplierMenu,
                                                                    backgroundColor: "transparent",
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showReplierMenu, i);
                                                                      })
                                                                  })))
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "center",
                                                            alignItem: "center",
                                                            children: null
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: null
                                                              }, React.createElement(SelectStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    tile: "原因分類",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.issuesort,
                                                                    disabled: state.showProgress || !item.formQuality || !state.update,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showIssueMenu, i);
                                                                      }),
                                                                    children: /* tuple */[
                                                                      item.showIssueMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                              top: "0",
                                                                              transform: "translate(0, 0)",
                                                                              maxHeight: "280",
                                                                              minHeight: "0",
                                                                              topLeft: "12",
                                                                              topRight: "12",
                                                                              bottomRight: "12",
                                                                              bottomLeft: "12",
                                                                              paddingRight: "8",
                                                                              paddingLeft: "8",
                                                                              children: $$Array.map((function (issueitem) {
                                                                                      return React.createElement(MenuItem$BtsCore.make, {
                                                                                                  top: "0",
                                                                                                  right: "8",
                                                                                                  bottom: "0",
                                                                                                  left: "8",
                                                                                                  disablePadding: issueitem.optionPadding,
                                                                                                  topLeft: "12",
                                                                                                  topRight: "12",
                                                                                                  bottomRight: "12",
                                                                                                  bottomLeft: "12",
                                                                                                  onClick: (function (param) {
                                                                                                      return Curry._2(clickIssueMenu, issueitem.value, i);
                                                                                                    }),
                                                                                                  children: issueitem.value
                                                                                                });
                                                                                    }), item.issueitems)
                                                                            }) : null,
                                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                                            animation: IconAnimation$BtsCore.topDownRorate(item.showIssueMenu),
                                                                            src: Icons$BtsCore.arrowDownBlack
                                                                          })
                                                                    ]
                                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                    showBackground: item.showIssueMenu,
                                                                    backgroundColor: "transparent",
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showIssueMenu, i);
                                                                      })
                                                                  })), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: null
                                                              }, React.createElement(SelectStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    tile: "原因分類",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.causeclass,
                                                                    disabled: state.showProgress || !item.formQuality || !state.update,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showCauseMenu, i);
                                                                      }),
                                                                    children: /* tuple */[
                                                                      item.showCauseMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                              top: "0",
                                                                              transform: "translate(0, 0)",
                                                                              maxHeight: "280",
                                                                              minHeight: "0",
                                                                              topLeft: "12",
                                                                              topRight: "12",
                                                                              bottomRight: "12",
                                                                              bottomLeft: "12",
                                                                              paddingRight: "8",
                                                                              paddingLeft: "8",
                                                                              children: $$Array.map((function (causeitem) {
                                                                                      return React.createElement(MenuItem$BtsCore.make, {
                                                                                                  top: "0",
                                                                                                  right: "8",
                                                                                                  bottom: "0",
                                                                                                  left: "8",
                                                                                                  disablePadding: causeitem.optionPadding,
                                                                                                  topLeft: "12",
                                                                                                  topRight: "12",
                                                                                                  bottomRight: "12",
                                                                                                  bottomLeft: "12",
                                                                                                  onClick: (function (param) {
                                                                                                      return Curry._2(clickCauseMenu, causeitem.value, i);
                                                                                                    }),
                                                                                                  children: causeitem.value
                                                                                                });
                                                                                    }), item.causeitems)
                                                                            }) : null,
                                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                                            animation: IconAnimation$BtsCore.topDownRorate(item.showCauseMenu),
                                                                            src: Icons$BtsCore.arrowDownBlack
                                                                          })
                                                                    ]
                                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                    showBackground: item.showCauseMenu,
                                                                    backgroundColor: "transparent",
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showCauseMenu, i);
                                                                      })
                                                                  })))
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "center",
                                                            alignItem: "center",
                                                            children: null
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      value: item.directPt,
                                                                      disabled: state.showProgress || !item.formEdit || !state.update,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changeDirectPt, $$event.target.value, i);
                                                                        }),
                                                                      children: "直接損耗工時"
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      value: item.indirectPt,
                                                                      disabled: state.showProgress || !item.formEdit || !state.update,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changeIndirectPt, $$event.target.value, i);
                                                                        }),
                                                                      children: "間接損耗工時"
                                                                    })
                                                              }))
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "18",
                                                      bottom: "6",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(Typography$BtsCore.make, {
                                                            variant: "subheading",
                                                            color: "rgba(0,0,0,0.6)",
                                                            fontWeight: "bolder",
                                                            children: "【Corrective Action】改善對策"
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "center",
                                                            alignItem: "center",
                                                            children: null
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldMultiline$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      rows: 3,
                                                                      value: item.correctiveaction1,
                                                                      disabled: state.showProgress || !item.formQuality || !state.update,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changeCorrectiveaction1, $$event.target.value, i);
                                                                        }),
                                                                      children: "Short Term"
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldMultiline$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      rows: 3,
                                                                      value: item.correctiveaction2,
                                                                      disabled: state.showProgress || !item.formQuality || !state.update,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changeCorrectiveaction2, $$event.target.value, i);
                                                                        }),
                                                                      children: "Long Term"
                                                                    })
                                                              }))
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(OtherUpload$BtsCore.make, {
                                                            webLoad: state.showProgress,
                                                            showDrop: state.showDrop,
                                                            showFile: item.showFile,
                                                            showImage: item.showImage,
                                                            showVideo: item.showVideo,
                                                            showAudio: item.showAudio,
                                                            src: item.path + item.src,
                                                            fileRef: fileRef,
                                                            onDragOver: Curry.__1(dragOverFile),
                                                            onDragLeave: Curry.__1(dragLeaveFile),
                                                            onDrop: (function ($$event) {
                                                                return Curry._3(dropOtherFile, $$event, Caml_array.caml_array_get($$event.nativeEvent.dataTransfer.files, 0), i);
                                                              }),
                                                            disabled: state.showProgress || !item.formQuality || !state.update,
                                                            onClick: chooseFile,
                                                            onChange: (function ($$event) {
                                                                return Curry._2(changeOtherFile, Caml_array.caml_array_get($$event.target.files, 0), i);
                                                              })
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "18",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(Typography$BtsCore.make, {
                                                            variant: "subheading",
                                                            color: "rgba(0,0,0,0.6)",
                                                            fontWeight: "bolder",
                                                            children: "【Closure】成效驗證"
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "center",
                                                            alignItem: "center",
                                                            children: null
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(Switch$BtsCore.make, {
                                                                      right: "0",
                                                                      checked: item.notice,
                                                                      circleColor: SwitchColor$BtsCore.circle(item.notice),
                                                                      linearColor: SwitchColor$BtsCore.linear(item.notice),
                                                                      fontColor: SwitchColor$BtsCore.font(item.notice),
                                                                      disabled: state.showProgress || !item.formQuality || !state.update,
                                                                      onClick: (function (param) {
                                                                          return Curry._1(switchNotice, i);
                                                                        }),
                                                                      children: "列入注意事項"
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(Switch$BtsCore.make, {
                                                                      right: "0",
                                                                      checked: item.nonstatistical,
                                                                      circleColor: SwitchColor$BtsCore.circle(item.nonstatistical),
                                                                      linearColor: SwitchColor$BtsCore.linear(item.nonstatistical),
                                                                      fontColor: SwitchColor$BtsCore.font(item.nonstatistical),
                                                                      disabled: state.showProgress || !item.formQuality || !state.update,
                                                                      onClick: (function (param) {
                                                                          return Curry._1(switchNonstatistical, i);
                                                                        }),
                                                                      children: "不列入統計資料"
                                                                    })
                                                              }))
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "center",
                                                            alignItem: "center",
                                                            children: null
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldMultiline$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      rows: 3,
                                                                      value: item.closure,
                                                                      disabled: state.showProgress || !item.formQuality || !state.update,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changeClosure, $$event.target.value, i);
                                                                        }),
                                                                      children: null
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldMultiline$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      rows: 3,
                                                                      value: item.body,
                                                                      disabled: state.showProgress || !item.formQuality || !state.update,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changeBody, $$event.target.value, i);
                                                                        }),
                                                                      children: null
                                                                    })
                                                              }))
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "center",
                                                            alignItem: "center",
                                                            children: null
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: null
                                                              }, React.createElement(SelectStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    tile: "責任單位",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.belong,
                                                                    disabled: state.showProgress || !item.formQuality || !state.update,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showBelongMenu, i);
                                                                      }),
                                                                    children: /* tuple */[
                                                                      item.showBelongMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                              top: "100%",
                                                                              transform: "translate(0, -100%)",
                                                                              maxHeight: "280",
                                                                              minHeight: "0",
                                                                              topLeft: "12",
                                                                              topRight: "12",
                                                                              bottomRight: "12",
                                                                              bottomLeft: "12",
                                                                              paddingRight: "8",
                                                                              paddingLeft: "8",
                                                                              children: $$Array.map((function (belongitem) {
                                                                                      return React.createElement(MenuItem$BtsCore.make, {
                                                                                                  top: "0",
                                                                                                  right: "8",
                                                                                                  bottom: "0",
                                                                                                  left: "8",
                                                                                                  disablePadding: belongitem.optionPadding,
                                                                                                  topLeft: "12",
                                                                                                  topRight: "12",
                                                                                                  bottomRight: "12",
                                                                                                  bottomLeft: "12",
                                                                                                  onClick: (function (param) {
                                                                                                      return Curry._2(clickBelongMenu, belongitem.value, i);
                                                                                                    }),
                                                                                                  children: belongitem.value
                                                                                                });
                                                                                    }), item.belongitems)
                                                                            }) : null,
                                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                                            animation: IconAnimation$BtsCore.topDownRorate(item.showBelongMenu),
                                                                            src: Icons$BtsCore.arrowDownBlack
                                                                          })
                                                                    ]
                                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                    showBackground: item.showBelongMenu,
                                                                    backgroundColor: "transparent",
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showBelongMenu, i);
                                                                      })
                                                                  })), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      value: item.belonger,
                                                                      disabled: state.showProgress || !item.formQuality || !state.update,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changeBelonger, $$event.target.value, i);
                                                                        }),
                                                                      children: "責任人員"
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: null
                                                              }, React.createElement(SelectStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    tile: "處理狀態",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.stage,
                                                                    disabled: state.showProgress || !item.formQuality || !state.update,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showStageMenu, i);
                                                                      }),
                                                                    children: /* tuple */[
                                                                      item.showStageMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                              top: "100%",
                                                                              transform: "translate(0, -100%)",
                                                                              maxHeight: "280",
                                                                              minHeight: "0",
                                                                              topLeft: "12",
                                                                              topRight: "12",
                                                                              bottomRight: "12",
                                                                              bottomLeft: "12",
                                                                              paddingRight: "8",
                                                                              paddingLeft: "8",
                                                                              children: $$Array.map((function (stageitem) {
                                                                                      return React.createElement(MenuItem$BtsCore.make, {
                                                                                                  top: "0",
                                                                                                  right: "8",
                                                                                                  bottom: "0",
                                                                                                  left: "8",
                                                                                                  disablePadding: stageitem.optionPadding,
                                                                                                  topLeft: "12",
                                                                                                  topRight: "12",
                                                                                                  bottomRight: "12",
                                                                                                  bottomLeft: "12",
                                                                                                  onClick: (function (param) {
                                                                                                      return Curry._2(clickStageMenu, stageitem.value, i);
                                                                                                    }),
                                                                                                  children: stageitem.value
                                                                                                });
                                                                                    }), item.stageitems)
                                                                            }) : null,
                                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                                            animation: IconAnimation$BtsCore.topDownRorate(item.showStageMenu),
                                                                            src: Icons$BtsCore.arrowDownBlack
                                                                          })
                                                                    ]
                                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                    showBackground: item.showStageMenu,
                                                                    backgroundColor: "transparent",
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showStageMenu, i);
                                                                      })
                                                                  })), React.createElement(GridItem$BtsCore.make, {
                                                                top: "20",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(Typography$BtsCore.make, {
                                                                      variant: "subheading",
                                                                      fontWeight: "bolder",
                                                                      children: "結案日期:" + item.releasedate
                                                                    })
                                                              }))
                                                    }));
                                    }), state.items))
                      })
                }), React.createElement(DialogFull$BtsCore.make, {
                  showAnimation: state.showAlbumFull,
                  backgroundColor: "rgba(0,0,0,0.8)",
                  children: null
                }, React.createElement(DialogTitle$BtsCore.make, {
                      top: "22",
                      left: "64",
                      backgroundColor: "transparent",
                      children: React.createElement(Typography$BtsCore.make, {
                            variant: "tile",
                            color: "rgba(255,255,255,1)",
                            fontWeight: "600",
                            children: state.albumTile
                          })
                    }), React.createElement(DialogContent$BtsCore.make, {
                      children: React.createElement(DialogContentText$BtsCore.make, {
                            children: React.createElement(GridItem$BtsCore.make, {
                                  style: Together$BtsCore.marginAuto,
                                  top: "0",
                                  right: "0",
                                  bottom: "0",
                                  left: "54",
                                  enterBackgroundColor: "transparent",
                                  backgroundColor: "transparent",
                                  xs: "12",
                                  maxWidth: "770px",
                                  children: React.createElement(GridContainer$BtsCore.make, {
                                        backgroundColor: "transparent",
                                        direction: "column",
                                        justify: "center",
                                        alignItem: "stretch",
                                        children: $$Array.map((function (item) {
                                                return React.createElement(GridItem$BtsCore.make, {
                                                            top: "0",
                                                            right: "0",
                                                            bottom: "0",
                                                            left: "0",
                                                            enterBackgroundColor: "transparent",
                                                            backgroundColor: "transparent",
                                                            xs: "auto",
                                                            children: React.createElement(Image$BtsCore.make, {
                                                                  width: "100%",
                                                                  height: "100%",
                                                                  borderRadius: "6",
                                                                  src: item
                                                                })
                                                          });
                                              }), state.albumitems)
                                      })
                                })
                          })
                    }), React.createElement(DialogActions$BtsCore.make, {
                      children: null
                    }, React.createElement("div", {
                          style: {
                            left: "10px",
                            position: "fixed",
                            top: "10px"
                          }
                        }, React.createElement(IconButton$BtsCore.make, {
                              enterBackgroundColor: "transparent",
                              downBackgroundColor: "transparent",
                              padding: "12",
                              disabled: state.showProgress,
                              onClick: closeAlbumFull,
                              children: React.createElement(IconAction$BtsCore.make, {
                                    animation: "circle",
                                    src: Icons$BtsCore.clearWhite
                                  })
                            })), React.createElement("div", {
                          style: {
                            left: "10px",
                            position: "fixed",
                            top: "64px"
                          }
                        }, React.createElement(IconButton$BtsCore.make, {
                              enterBackgroundColor: "transparent",
                              downBackgroundColor: "transparent",
                              padding: "12",
                              disabled: state.showProgress,
                              onClick: downloadAlbum,
                              children: React.createElement(IconAction$BtsCore.make, {
                                    animation: "circle",
                                    src: Icons$BtsCore.cloudDownloadWhite
                                  })
                            })))), React.createElement(SnackbarYoutube$BtsCore.make, {
                  showYoutube: state.showYoutube,
                  position: "bottomLeft",
                  children: /* tuple */[
                    React.createElement("span", undefined, state.youtubeText),
                    null
                  ]
                }));
}

var make = ModifyR;

export {
  newitem ,
  reducer ,
  initialState ,
  defaultFloat ,
  make ,
  
}
/*  Not a pure module */
