// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Caml_obj from "bs-platform/lib/es6/caml_obj.js";
import * as Caml_array from "bs-platform/lib/es6/caml_array.js";
import * as ReactIntl from "react-intl";
import * as Chip$BtsCore from "../../material-ui/core/Chip/Chip.bs.js";
import * as Data$BtsCore from "../../features/Data.bs.js";
import * as Icons$BtsCore from "../../material-ui/icon/Icons.bs.js";
import * as Button$BtsCore from "../../material-ui/core/Button/Button.bs.js";
import * as Status$BtsCore from "../../features/Status.bs.js";
import * as Divider$BtsCore from "../../material-ui/core/Divider/Divider.bs.js";
import * as Tooltip$BtsCore from "../../material-ui/core/Tooltip/Tooltip.bs.js";
import * as Axiosapi$BtsCore from "../../features/Axiosapi.bs.js";
import * as GridItem$BtsCore from "../../material-ui/core/Grid/GridItem.bs.js";
import * as MenuItem$BtsCore from "../../material-ui/core/MenuItem/MenuItem.bs.js";
import * as Together$BtsCore from "../../styles/Together/Together.bs.js";
import * as DialogFull$BtsCore from "../../material-ui/core/Dialog/DialogFull.bs.js";
import * as IconAction$BtsCore from "../../material-ui/core/IconStyle/IconAction.bs.js";
import * as IconButton$BtsCore from "../../material-ui/core/IconButton/IconButton.bs.js";
import * as SelectMenu$BtsCore from "../../material-ui/core/Menu/SelectMenu.bs.js";
import * as Typography$BtsCore from "../../material-ui/core/Typography/Typography.bs.js";
import * as DialogTitle$BtsCore from "../../material-ui/core/Dialog/DialogTitle.bs.js";
import * as IconGeneral$BtsCore from "../../material-ui/core/IconStyle/IconGeneral.bs.js";
import * as NewFacetube$BtsCore from "../../example/Facebook/NewFacetube.bs.js";
import * as OtherUpload$BtsCore from "../../example/Uploads/OtherUpload.bs.js";
import * as BottomScroll$BtsCore from "../../example/ScrollBar/BottomScroll.bs.js";
import * as ObjectFormat$BtsCore from "../../controls/ObjectFormat.bs.js";
import * as DialogActions$BtsCore from "../../material-ui/core/Dialog/DialogActions.bs.js";
import * as DialogContent$BtsCore from "../../material-ui/core/Dialog/DialogContent.bs.js";
import * as GridContainer$BtsCore from "../../material-ui/core/Grid/GridContainer.bs.js";
import * as IconAnimation$BtsCore from "../../controls/IconAnimation.bs.js";
import * as SelectOutline$BtsCore from "../../material-ui/core/Select/SelectOutline.bs.js";
import * as SelectStandard$BtsCore from "../../material-ui/core/Select/SelectStandard.bs.js";
import * as BackgroundBoard$BtsCore from "../../example/Boards/BackgroundBoard.bs.js";
import * as SnackbarYoutube$BtsCore from "../../material-ui/core/Snackbar/SnackbarYoutube.bs.js";
import * as TextFieldOutline$BtsCore from "../../material-ui/core/TextField/TextFieldOutline.bs.js";
import * as DialogContentText$BtsCore from "../../material-ui/core/Dialog/DialogContentText.bs.js";
import * as TextFieldStandard$BtsCore from "../../material-ui/core/TextField/TextFieldStandard.bs.js";
import * as TextFieldMultiline$BtsCore from "../../material-ui/core/TextField/TextFieldMultiline.bs.js";

((require('../../../scss/pages/Together/together.scss')));

function newmbitem(mbId, mbValue) {
  return [{
            mbId: mbId,
            mbValue: mbValue
          }];
}

function reducer(state, action) {
  if (typeof action === "number") {
    switch (action) {
      case /* SettingError */0 :
          var newrecord = Caml_obj.caml_obj_dup(state);
          newrecord.error = !state.error;
          return newrecord;
      case /* SettingFormLoad */1 :
          var newrecord$1 = Caml_obj.caml_obj_dup(state);
          newrecord$1.formLoad = !state.formLoad;
          return newrecord$1;
      case /* ActionShowProgress */2 :
          var newrecord$2 = Caml_obj.caml_obj_dup(state);
          newrecord$2.showProgress = !state.showProgress;
          return newrecord$2;
      case /* ClearFilterItems */3 :
          var newrecord$3 = Caml_obj.caml_obj_dup(state);
          newrecord$3.filitems = $$Array.map((function (filitem) {
                  return {
                          index: filitem.index,
                          tile: filitem.tile,
                          filtValue: "",
                          showMenu: filitem.showMenu,
                          optionitems: filitem.optionitems
                        };
                }), state.filitems);
          return newrecord$3;
      case /* CloseAnimationFull */4 :
          var newrecord$4 = Caml_obj.caml_obj_dup(state);
          newrecord$4.showFull = !state.showFull;
          return newrecord$4;
      
    }
  } else {
    switch (action.tag | 0) {
      case /* SettingFormWidth */0 :
          var newrecord$5 = Caml_obj.caml_obj_dup(state);
          newrecord$5.formHeight = action[1];
          newrecord$5.formWidth = action[0];
          return newrecord$5;
      case /* ActionPermissItems */1 :
          var newrecord$6 = Caml_obj.caml_obj_dup(state);
          newrecord$6.export = action[3];
          newrecord$6.delete = action[2];
          newrecord$6.update = action[1];
          newrecord$6.insert = action[0];
          return newrecord$6;
      case /* SettingFilItems */2 :
          var newrecord$7 = Caml_obj.caml_obj_dup(state);
          newrecord$7.filitems = action[0];
          return newrecord$7;
      case /* SettingFormItems */3 :
          var newrecord$8 = Caml_obj.caml_obj_dup(state);
          newrecord$8.items = action[2];
          newrecord$8.itemCount = action[1];
          newrecord$8.showItem = action[0];
          return newrecord$8;
      case /* SettingScrollItems */4 :
          var newrecord$9 = Caml_obj.caml_obj_dup(state);
          newrecord$9.items = $$Array.append(state.items, action[1]);
          newrecord$9.showItem = action[0];
          return newrecord$9;
      case /* ShowAnimationFull */5 :
          var newrecord$10 = Caml_obj.caml_obj_dup(state);
          newrecord$10.formitems = action[3];
          newrecord$10.formTitle = action[2];
          newrecord$10.formId = action[1];
          newrecord$10.formIndex = action[0];
          newrecord$10.showFull = !state.showFull;
          return newrecord$10;
      case /* ShowRecord */6 :
          var newrecord$11 = Caml_obj.caml_obj_dup(state);
          newrecord$11.showRecord = action[0];
          return newrecord$11;
      case /* ClickRecordItems */7 :
          var newrecord$12 = Caml_obj.caml_obj_dup(state);
          newrecord$12.recorditems = action[0];
          return newrecord$12;
      case /* ChangeRecord */8 :
          var newrecord$13 = Caml_obj.caml_obj_dup(state);
          newrecord$13.record = action[0];
          return newrecord$13;
      case /* ClickItemRecord */9 :
          var newrecord$14 = Caml_obj.caml_obj_dup(state);
          newrecord$14.showRecord = !state.showRecord;
          newrecord$14.record = action[0];
          return newrecord$14;
      case /* ShowMenu */10 :
          var index = action[0];
          var newrecord$15 = Caml_obj.caml_obj_dup(state);
          newrecord$15.filitems = $$Array.mapi((function (i, filitem) {
                  if (index === i) {
                    return {
                            index: filitem.index,
                            tile: filitem.tile,
                            filtValue: filitem.filtValue,
                            showMenu: !filitem.showMenu,
                            optionitems: filitem.optionitems
                          };
                  } else {
                    return filitem;
                  }
                }), state.filitems);
          return newrecord$15;
      case /* ClickMenu */11 :
          var index$1 = action[1];
          var value = action[0];
          var newrecord$16 = Caml_obj.caml_obj_dup(state);
          newrecord$16.filitems = $$Array.mapi((function (i, filitem) {
                  if (index$1 === i) {
                    return {
                            index: filitem.index,
                            tile: filitem.tile,
                            filtValue: value,
                            showMenu: !filitem.showMenu,
                            optionitems: filitem.optionitems
                          };
                  } else {
                    return filitem;
                  }
                }), state.filitems);
          return newrecord$16;
      case /* ClearItem */12 :
          var id = action[0];
          var newrecord$17 = Caml_obj.caml_obj_dup(state);
          newrecord$17.items = state.items.filter((function (item) {
                  return item.ids !== id;
                }));
          newrecord$17.itemCount = state.itemCount - 1 | 0;
          return newrecord$17;
      case /* ChangeSubject */13 :
          var index$2 = action[1];
          var value$1 = action[0];
          var newrecord$18 = Caml_obj.caml_obj_dup(state);
          newrecord$18.formitems = $$Array.mapi((function (i, item) {
                  if (index$2 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.subject = value$1;
                  return newrecord;
                }), state.formitems);
          return newrecord$18;
      case /* ChangeMomo */14 :
          var index$3 = action[1];
          var value$2 = action[0];
          var newrecord$19 = Caml_obj.caml_obj_dup(state);
          newrecord$19.formitems = $$Array.mapi((function (i, item) {
                  if (index$3 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.homepageMomo = value$2;
                  return newrecord;
                }), state.formitems);
          return newrecord$19;
      case /* ClearMbItem */15 :
          var index$4 = action[1];
          var mbId = action[0];
          var newrecord$20 = Caml_obj.caml_obj_dup(state);
          newrecord$20.formitems = $$Array.mapi((function (i, item) {
                  if (index$4 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.mbitems = item.mbitems.filter((function (mbitem) {
                          return mbitem.mbId !== mbId;
                        }));
                  return newrecord;
                }), state.formitems);
          return newrecord$20;
      case /* ShowMtstMenu */16 :
          var index$5 = action[0];
          var newrecord$21 = Caml_obj.caml_obj_dup(state);
          newrecord$21.formitems = $$Array.mapi((function (i, item) {
                  if (index$5 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showMtstMenu = !item.showMtstMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$21;
      case /* ClickMtstMenu */17 :
          var index$6 = action[1];
          var value$3 = action[0];
          var newrecord$22 = Caml_obj.caml_obj_dup(state);
          newrecord$22.formitems = $$Array.mapi((function (i, item) {
                  if (index$6 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.mtst = value$3;
                  newrecord.showMtstMenu = !item.showMtstMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$22;
      case /* ShowMbstMenu */18 :
          var index$7 = action[0];
          var newrecord$23 = Caml_obj.caml_obj_dup(state);
          newrecord$23.formitems = $$Array.mapi((function (i, item) {
                  if (index$7 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showMbstMenu = !item.showMbstMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$23;
      case /* SettingItemModel */19 :
          var index$8 = action[1];
          var items = action[0];
          var newrecord$24 = Caml_obj.caml_obj_dup(state);
          newrecord$24.formitems = $$Array.mapi((function (i, item) {
                  if (index$8 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.mbstitems = items;
                  return newrecord;
                }), state.formitems);
          return newrecord$24;
      case /* AddMbItem */20 :
          var index$9 = action[1];
          var value$4 = action[0];
          var newrecord$25 = Caml_obj.caml_obj_dup(state);
          newrecord$25.formitems = $$Array.mapi((function (i, item) {
                  if (index$9 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  var mbId = item.mbitems.length === 0 ? 0 : Caml_array.caml_array_get(item.mbitems, item.mbitems.length - 1 | 0).mbId + 1 | 0;
                  newrecord.mbitems = $$Array.append(item.mbitems, [{
                          mbId: mbId,
                          mbValue: value$4
                        }]);
                  return newrecord;
                }), state.formitems);
          return newrecord$25;
      case /* ClickMbstMenu */21 :
          var index$10 = action[1];
          var value$5 = action[0];
          var newrecord$26 = Caml_obj.caml_obj_dup(state);
          newrecord$26.formitems = $$Array.mapi((function (i, item) {
                  if (index$10 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.mbst = value$5;
                  newrecord.showMbstMenu = !item.showMbstMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$26;
      case /* ClearPageItem */22 :
          var index$11 = action[1];
          var mbId$1 = action[0];
          var newrecord$27 = Caml_obj.caml_obj_dup(state);
          newrecord$27.formitems = $$Array.mapi((function (i, item) {
                  if (index$11 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.pageitems = item.pageitems.filter((function (mbitem) {
                          return mbitem.mbId !== mbId$1;
                        }));
                  return newrecord;
                }), state.formitems);
          return newrecord$27;
      case /* ShowCustom */23 :
          var index$12 = action[1];
          var showCustom = action[0];
          var newrecord$28 = Caml_obj.caml_obj_dup(state);
          newrecord$28.formitems = $$Array.mapi((function (i, item) {
                  if (index$12 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showCustom = showCustom;
                  return newrecord;
                }), state.formitems);
          return newrecord$28;
      case /* SettingItemCustom */24 :
          var index$13 = action[1];
          var items$1 = action[0];
          var newrecord$29 = Caml_obj.caml_obj_dup(state);
          newrecord$29.formitems = $$Array.mapi((function (i, item) {
                  if (index$13 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.customitems = items$1;
                  newrecord.showCustom = true;
                  return newrecord;
                }), state.formitems);
          return newrecord$29;
      case /* ChangeCustom */25 :
          var index$14 = action[1];
          var value$6 = action[0];
          var newrecord$30 = Caml_obj.caml_obj_dup(state);
          newrecord$30.formitems = $$Array.mapi((function (i, item) {
                  if (index$14 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.custom = value$6;
                  return newrecord;
                }), state.formitems);
          return newrecord$30;
      case /* ClickItemCustom */26 :
          var index$15 = action[0];
          var newrecord$31 = Caml_obj.caml_obj_dup(state);
          newrecord$31.formitems = $$Array.mapi((function (i, item) {
                  if (index$15 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.showCustom = !item.showCustom;
                  newrecord.custom = "";
                  return newrecord;
                }), state.formitems);
          return newrecord$31;
      case /* AddCustomItem */27 :
          var index$16 = action[1];
          var value$7 = action[0];
          var newrecord$32 = Caml_obj.caml_obj_dup(state);
          newrecord$32.formitems = $$Array.mapi((function (i, item) {
                  if (index$16 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  var mbId = item.pageitems.length === 0 ? 0 : Caml_array.caml_array_get(item.pageitems, item.pageitems.length - 1 | 0).mbId + 1 | 0;
                  newrecord.pageitems = $$Array.append(item.pageitems, [{
                          mbId: mbId,
                          mbValue: value$7
                        }]);
                  return newrecord;
                }), state.formitems);
          return newrecord$32;
      case /* ShowDrop */28 :
          var index$17 = action[1];
          var showDrop = action[0];
          var newrecord$33 = Caml_obj.caml_obj_dup(state);
          newrecord$33.formitems = $$Array.mapi((function (i, item) {
                  if (index$17 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showDrop = showDrop;
                  return newrecord;
                }), state.formitems);
          return newrecord$33;
      case /* ShowFile */29 :
          var index$18 = action[9];
          var date = action[8];
          var extension = action[7];
          var encryption = action[6];
          var original = action[5];
          var path = action[4];
          var src = action[3];
          var showAudio = action[2];
          var showVideo = action[1];
          var showImage = action[0];
          var newrecord$34 = Caml_obj.caml_obj_dup(state);
          newrecord$34.formitems = $$Array.mapi((function (i, item) {
                  if (index$18 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.date = date;
                  newrecord.extension = extension;
                  newrecord.encryption = encryption;
                  newrecord.original = original;
                  newrecord.path = path;
                  newrecord.src = src;
                  newrecord.showAudio = showAudio;
                  newrecord.showVideo = showVideo;
                  newrecord.showImage = showImage;
                  newrecord.showFile = true;
                  return newrecord;
                }), state.formitems);
          return newrecord$34;
      case /* ShowPdfDrop */30 :
          var index$19 = action[1];
          var showDrop$1 = action[0];
          var newrecord$35 = Caml_obj.caml_obj_dup(state);
          newrecord$35.formitems = $$Array.mapi((function (i, item) {
                  if (index$19 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showPdfDrop = showDrop$1;
                  return newrecord;
                }), state.formitems);
          return newrecord$35;
      case /* ShowPdfFile */31 :
          var index$20 = action[9];
          var pdfDate = action[8];
          var pdfExtension = action[7];
          var pdfEncryption = action[6];
          var pdfOriginal = action[5];
          var pdfPath = action[4];
          var pdfSrc = action[3];
          var showPdfAudio = action[2];
          var showPdfVideo = action[1];
          var showPdfImage = action[0];
          var newrecord$36 = Caml_obj.caml_obj_dup(state);
          newrecord$36.formitems = $$Array.mapi((function (i, item) {
                  if (index$20 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.pdfDate = pdfDate;
                  newrecord.pdfExtension = pdfExtension;
                  newrecord.pdfEncryption = pdfEncryption;
                  newrecord.pdfOriginal = pdfOriginal;
                  newrecord.pdfPath = pdfPath;
                  newrecord.pdfSrc = pdfSrc;
                  newrecord.showPdfAudio = showPdfAudio;
                  newrecord.showPdfVideo = showPdfVideo;
                  newrecord.showPdfImage = showPdfImage;
                  newrecord.showPdfFile = true;
                  return newrecord;
                }), state.formitems);
          return newrecord$36;
      case /* ShowTotal */32 :
          var index$21 = action[1];
          var value$8 = action[0];
          var newrecord$37 = Caml_obj.caml_obj_dup(state);
          newrecord$37.formitems = $$Array.mapi((function (i, item) {
                  if (index$21 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.final = value$8;
                  newrecord.showTotal = true;
                  return newrecord;
                }), state.formitems);
          return newrecord$37;
      case /* ChangeFirst */33 :
          var index$22 = action[1];
          var value$9 = action[0];
          var newrecord$38 = Caml_obj.caml_obj_dup(state);
          newrecord$38.formitems = $$Array.mapi((function (i, item) {
                  if (index$22 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.first = value$9;
                  return newrecord;
                }), state.formitems);
          return newrecord$38;
      case /* ChangeFinal */34 :
          var index$23 = action[1];
          var value$10 = action[0];
          var newrecord$39 = Caml_obj.caml_obj_dup(state);
          newrecord$39.formitems = $$Array.mapi((function (i, item) {
                  if (index$23 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.final = value$10;
                  return newrecord;
                }), state.formitems);
          return newrecord$39;
      case /* RemovePage */35 :
          var index$24 = action[1];
          var value$11 = action[0];
          var newrecord$40 = Caml_obj.caml_obj_dup(state);
          newrecord$40.formitems = $$Array.mapi((function (i, item) {
                  if (index$24 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.final = value$11;
                  newrecord.first = "1";
                  return newrecord;
                }), state.formitems);
          return newrecord$40;
      case /* ChangeBody */36 :
          var index$25 = action[1];
          var value$12 = action[0];
          var newrecord$41 = Caml_obj.caml_obj_dup(state);
          newrecord$41.formitems = $$Array.mapi((function (i, item) {
                  if (index$25 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.body = value$12;
                  return newrecord;
                }), state.formitems);
          return newrecord$41;
      case /* ActionSnackBar */37 :
          var newrecord$42 = Caml_obj.caml_obj_dup(state);
          newrecord$42.youtubeText = action[0];
          newrecord$42.showYoutube = action[1];
          return newrecord$42;
      
    }
  }
}

var initialState_recorditems = [];

var initialState_filitems = [];

var initialState_items = [];

var initialState_formitems = [];

var initialState = {
  formLoad: false,
  formWidth: 0,
  formHeight: 0,
  showProgress: true,
  error: false,
  insert: false,
  update: false,
  delete: false,
  export: false,
  record: "",
  showRecord: false,
  recorditems: initialState_recorditems,
  filitems: initialState_filitems,
  showItem: false,
  itemCount: 0,
  items: initialState_items,
  showFull: false,
  formIndex: 0,
  formId: "",
  formTitle: "",
  formitems: initialState_formitems,
  showYoutube: false,
  youtubeText: ""
};

function Product(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var fileRef = React.useRef(null);
  var barShowRestoreAction = function (youtubeText) {
    Curry._1(dispatch, /* ActionSnackBar */Block.__(37, [
            youtubeText,
            true
          ]));
    setTimeout((function (param) {
            return Curry._1(dispatch, /* ActionSnackBar */Block.__(37, [
                          "",
                          false
                        ]));
          }), 5000);
    
  };
  var searchAJax = function (param) {
    Axiosapi$BtsCore.Product.search(Data$BtsCore.otherData(localStorage.getItem("newid"), state.items.length)).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* SettingFormItems */Block.__(3, [
                        response.data.showItem,
                        response.data.itemCount,
                        response.data.items
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              } else {
                Curry._1(dispatch, /* SettingError */0);
                barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var filterAJax = function (param) {
    Axiosapi$BtsCore.Product.filter(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
              return Promise.resolve((Curry._1(dispatch, /* SettingFilItems */Block.__(2, [response.data.items])), searchAJax(undefined)));
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var permissAJax = function (param) {
    Axiosapi$BtsCore.Form.permiss(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
              return Promise.resolve((Curry._1(dispatch, /* ActionPermissItems */Block.__(1, [
                                  response.data.insert,
                                  response.data.update,
                                  response.data.delete,
                                  response.data.export
                                ])), filterAJax(undefined)));
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  React.useEffect((function () {
          var match = state.formLoad;
          if (match) {
            return (function (param) {
                      console.log("action");
                      
                    });
          }
          Curry._1(dispatch, /* SettingFormLoad */1);
          Curry._1(dispatch, /* SettingFormWidth */Block.__(0, [
                  window.innerWidth,
                  window.innerHeight
                ]));
          var match$1 = ObjectFormat$BtsCore.checkObjects(sessionStorage.getItem("form"));
          var testId;
          var exit = 0;
          switch (match$1) {
            case "deleteSuccess" :
            case "saveSuccess" :
            case "sendSuccess" :
                exit = 1;
                break;
            default:
              console.log("action");
              testId = undefined;
          }
          if (exit === 1) {
            barShowRestoreAction(Status$BtsCore.statusModule(ObjectFormat$BtsCore.checkObjects(sessionStorage.getItem("form"))));
            sessionStorage.setItem("form", "");
            testId = undefined;
          }
          var timeId = permissAJax(undefined);
          return (function (param) {
                    return timeId;
                  });
        }));
  var handleResize = function ($$event) {
    return Curry._1(dispatch, /* SettingFormWidth */Block.__(0, [
                  $$event.currentTarget.innerWidth,
                  $$event.currentTarget.innerHeight
                ]));
  };
  React.useEffect((function () {
          window.addEventListener("resize", handleResize, true);
          return (function (param) {
                    
                  });
        }), ([]));
  var clickScrollBar = React.useCallback((function (param) {
          Curry._1(dispatch, /* ActionShowProgress */2);
          var length = state.items.length;
          Axiosapi$BtsCore.Product.scroll(Data$BtsCore.sScroData(state.filitems.filter((function (filitem) {
                              return filitem.filtValue !== "";
                            })), state.record, length, localStorage.getItem("newid"))).then((function (response) {
                    return Promise.resolve((Curry._1(dispatch, /* SettingScrollItems */Block.__(4, [
                                        response.data.showItem,
                                        response.data.items
                                      ])), Curry._1(dispatch, /* ActionShowProgress */2)));
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var clickRecord = React.useCallback((function (param) {
          Curry._1(dispatch, /* ShowRecord */Block.__(6, [true]));
          Axiosapi$BtsCore.Product.sRecord(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
                    return Promise.resolve(Curry._1(dispatch, /* ClickRecordItems */Block.__(7, [response.data.items])));
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var showRecord = React.useCallback((function (param) {
          return Curry._1(dispatch, /* ShowRecord */Block.__(6, [false]));
        }));
  var changeRecord = React.useCallback((function (value) {
          return Curry._1(dispatch, /* ChangeRecord */Block.__(8, [value]));
        }));
  var sFiltCordAJax = function (record) {
    Axiosapi$BtsCore.Product.sFiltCord(Data$BtsCore.otherData(localStorage.getItem("newid"), record)).then((function (response) {
              Curry._1(dispatch, /* ClearFilterItems */3);
              var match = response.data.status;
              var tmp = match === "istrue" ? Curry._1(dispatch, /* SettingFormItems */Block.__(3, [
                        response.data.showItem,
                        response.data.itemCount,
                        response.data.items
                      ])) : barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var keydownRecord = React.useCallback((function (keyCode) {
          if (keyCode === 13) {
            Curry._1(dispatch, /* ShowRecord */Block.__(6, [false]));
            return sFiltCordAJax(state.record);
          }
          
        }));
  var clickItemRecord = React.useCallback((function (value) {
          Curry._1(dispatch, /* ClickItemRecord */Block.__(9, [value]));
          return sFiltCordAJax(value);
        }));
  var showMenu = React.useCallback((function (index) {
          return Curry._1(dispatch, /* ShowMenu */Block.__(10, [index]));
        }));
  var clickMenu = React.useCallback((function (value) {
          return (function (index) {
              Curry._1(dispatch, /* ClickMenu */Block.__(11, [
                      value,
                      index
                    ]));
              Axiosapi$BtsCore.Product.sFilter(Data$BtsCore.sFiltData(state.filitems.filter((function (filitem) {
                                  return filitem.filtValue !== "";
                                })), index, value, state.record, localStorage.getItem("newid"))).then((function (response) {
                        var match = response.data.status;
                        var tmp;
                        if (match === "istrue") {
                          tmp = Curry._1(dispatch, /* SettingFormItems */Block.__(3, [
                                  response.data.showItem,
                                  response.data.itemCount,
                                  response.data.items
                                ]));
                        } else {
                          barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        }
                        return Promise.resolve(tmp);
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var clickFormBoard = React.useCallback((function (i) {
          return (function (id) {
              Curry._1(dispatch, /* ActionShowProgress */2);
              Axiosapi$BtsCore.Product.sItem(Data$BtsCore.dFormData(id, localStorage.getItem("newid"))).then((function (response) {
                        var match = response.data.status;
                        var tmp;
                        if (match === "istrue") {
                          Curry._1(dispatch, /* ShowAnimationFull */Block.__(5, [
                                  i,
                                  id,
                                  response.data.tile,
                                  response.data.items
                                ]));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        } else {
                          barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        }
                        return Promise.resolve(tmp);
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var clearItem = React.useCallback((function (id) {
          return (function ($$event) {
              $$event.preventDefault();
              $$event.stopPropagation();
              Curry._1(dispatch, /* ActionShowProgress */2);
              Axiosapi$BtsCore.Product.clear(Data$BtsCore.dFormData(id, localStorage.getItem("newid"))).then((function (response) {
                        var match = response.data.status;
                        var tmp;
                        if (match === "istrue") {
                          Curry._1(dispatch, /* ClearItem */Block.__(12, [id]));
                          barShowRestoreAction(Status$BtsCore.statusModule("deleteSuccess"));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        } else {
                          barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        }
                        return Promise.resolve(tmp);
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var insertForm = React.useCallback((function (param) {
          Curry._1(dispatch, /* ActionShowProgress */2);
          Axiosapi$BtsCore.Product.insert(Data$BtsCore.iFormData(state.formId, state.formTitle, state.formitems.filter((function (formitem) {
                              return formitem.formModify === true;
                            })), localStorage.getItem("newid"))).then((function (response) {
                    var match = response.data.status;
                    var tmp;
                    if (match === "istrue") {
                      Curry._1(dispatch, /* CloseAnimationFull */4);
                      barShowRestoreAction(Status$BtsCore.statusModule("saveSuccess"));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                    } else {
                      barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                    }
                    return Promise.resolve(tmp);
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var changeSubject = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeSubject */Block.__(13, [
                            value,
                            i
                          ]));
            });
        }));
  var changeMomo = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeMomo */Block.__(14, [
                            value,
                            i
                          ]));
            });
        }));
  var clearMbItem = React.useCallback((function (mbId) {
          return (function (i) {
              return Curry._1(dispatch, /* ClearMbItem */Block.__(15, [
                            mbId,
                            i
                          ]));
            });
        }));
  var showMtstMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowMtstMenu */Block.__(16, [i]));
        }));
  var clickMtstMenu = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickMtstMenu */Block.__(17, [
                      value,
                      i
                    ]));
              Axiosapi$BtsCore.CreateP.sModel(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                        return Promise.resolve(Curry._1(dispatch, /* SettingItemModel */Block.__(19, [
                                          response.data.items,
                                          i
                                        ])));
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var showMbstMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowMbstMenu */Block.__(18, [i]));
        }));
  var clickMbstMenu = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickMbstMenu */Block.__(21, [
                      value,
                      i
                    ]));
              return Curry._1(dispatch, /* AddMbItem */Block.__(20, [
                            value,
                            i
                          ]));
            });
        }));
  var clearPageItem = React.useCallback((function (mbId) {
          return (function (i) {
              return Curry._1(dispatch, /* ClearPageItem */Block.__(22, [
                            mbId,
                            i
                          ]));
            });
        }));
  var changeCustom = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ChangeCustom */Block.__(25, [
                      value,
                      i
                    ]));
              Axiosapi$BtsCore.CreateP.sCustom(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                        return Promise.resolve(Curry._1(dispatch, /* SettingItemCustom */Block.__(24, [
                                          response.data.items,
                                          i
                                        ])));
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var keydownCustom = React.useCallback((function (keyCode) {
          return (function (value, i) {
              if (keyCode === 13) {
                Axiosapi$BtsCore.CreateP.cCustom(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                          var match = response.data.status;
                          var tmp;
                          if (match === "istrue") {
                            Curry._1(dispatch, /* ClickItemCustom */Block.__(26, [i]));
                            tmp = Curry._1(dispatch, /* AddCustomItem */Block.__(27, [
                                    value,
                                    i
                                  ]));
                          } else {
                            tmp = barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                          }
                          return Promise.resolve(tmp);
                        })).catch((function (error) {
                        return Promise.resolve((console.log(error), undefined));
                      }));
                return ;
              }
              
            });
        }));
  var showCustom = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowCustom */Block.__(23, [
                        false,
                        i
                      ]));
        }));
  var clickItemCustom = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickItemCustom */Block.__(26, [i]));
              return Curry._1(dispatch, /* AddCustomItem */Block.__(27, [
                            value,
                            i
                          ]));
            });
        }));
  var dragOverFile = React.useCallback((function ($$event) {
          return (function (i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              return Curry._1(dispatch, /* ShowDrop */Block.__(28, [
                            true,
                            i
                          ]));
            });
        }));
  var dragLeaveFile = React.useCallback((function ($$event) {
          return (function (i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              return Curry._1(dispatch, /* ShowDrop */Block.__(28, [
                            false,
                            i
                          ]));
            });
        }));
  var uploadAJax = function (files, i) {
    var formData = new FormData();
    formData.append("file", files);
    Axiosapi$BtsCore.Files.upload(formData).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* ShowFile */Block.__(29, [
                        response.data.images,
                        response.data.videos,
                        response.data.audios,
                        response.data.src,
                        response.data.imagePath,
                        response.data.original,
                        response.data.encryption,
                        response.data.extension,
                        response.data.date,
                        i
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              } else {
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var dropFile = React.useCallback((function ($$event) {
          return (function (value, i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              Curry._1(dispatch, /* ActionShowProgress */2);
              Curry._1(dispatch, /* ShowDrop */Block.__(28, [
                      false,
                      i
                    ]));
              return uploadAJax(value, i);
            });
        }));
  var chooseFile = React.useCallback((function (param) {
          var el = fileRef.current;
          if (!(el == null)) {
            el.click();
            return ;
          }
          
        }));
  var changeFile = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ActionShowProgress */2);
              return uploadAJax(value, i);
            });
        }));
  var transForm = React.useCallback((function (path) {
          return (function (original, encryption, extension, i) {
              Curry._1(dispatch, /* ActionShowProgress */2);
              Axiosapi$BtsCore.Files.transfer(Data$BtsCore.sFileData(path, original, encryption, extension, localStorage.getItem("newid"))).then((function (response) {
                        var match = response.data.status;
                        var tmp;
                        if (match === "istrue") {
                          Curry._1(dispatch, /* ShowPdfFile */Block.__(31, [
                                  response.data.images,
                                  response.data.videos,
                                  response.data.audios,
                                  response.data.src,
                                  response.data.imagePath,
                                  response.data.original,
                                  response.data.encryption,
                                  response.data.extension,
                                  response.data.date,
                                  i
                                ]));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        } else {
                          barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        }
                        return Promise.resolve(tmp);
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var dragOverPdfFile = React.useCallback((function ($$event) {
          return (function (i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              return Curry._1(dispatch, /* ShowPdfDrop */Block.__(30, [
                            true,
                            i
                          ]));
            });
        }));
  var dragLeavePdfFile = React.useCallback((function ($$event) {
          return (function (i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              return Curry._1(dispatch, /* ShowPdfDrop */Block.__(30, [
                            false,
                            i
                          ]));
            });
        }));
  var upPdfAJax = function (files, i) {
    var formData = new FormData();
    formData.append("file", files);
    Axiosapi$BtsCore.Files.upload(formData).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* ShowPdfFile */Block.__(31, [
                        response.data.images,
                        response.data.videos,
                        response.data.audios,
                        response.data.src,
                        response.data.imagePath,
                        response.data.original,
                        response.data.encryption,
                        response.data.extension,
                        response.data.date,
                        i
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              } else {
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var dropPdfFile = React.useCallback((function ($$event) {
          return (function (value, i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              Curry._1(dispatch, /* ActionShowProgress */2);
              Curry._1(dispatch, /* ShowPdfDrop */Block.__(30, [
                      false,
                      i
                    ]));
              return upPdfAJax(value, i);
            });
        }));
  var changePdfFile = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ActionShowProgress */2);
              return upPdfAJax(value, i);
            });
        }));
  var totalForm = React.useCallback((function (path) {
          return (function (original, encryption, extension, i) {
              Curry._1(dispatch, /* ActionShowProgress */2);
              Axiosapi$BtsCore.Files.total(Data$BtsCore.sFileData(path, original, encryption, extension, localStorage.getItem("newid"))).then((function (response) {
                        var match = response.data.status;
                        var tmp;
                        if (match === "istrue") {
                          Curry._1(dispatch, /* ShowTotal */Block.__(32, [
                                  response.data.value,
                                  i
                                ]));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        } else {
                          barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        }
                        return Promise.resolve(tmp);
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var changeFirst = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeFirst */Block.__(33, [
                            value,
                            i
                          ]));
            });
        }));
  var changeFinal = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeFinal */Block.__(34, [
                            value,
                            i
                          ]));
            });
        }));
  var removeFile = React.useCallback((function (path) {
          return (function (original, encryption, extension, first, $$final, i) {
              Curry._1(dispatch, /* ActionShowProgress */2);
              Axiosapi$BtsCore.Files.remove(Data$BtsCore.rFileData(path, original, encryption, extension, first, $$final, localStorage.getItem("newid"))).then((function (response) {
                        var match = response.data.status;
                        var tmp;
                        if (match === "istrue") {
                          Curry._1(dispatch, /* RemovePage */Block.__(35, [
                                  response.data.value,
                                  i
                                ]));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        } else {
                          barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        }
                        return Promise.resolve(tmp);
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var changeBody = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeBody */Block.__(36, [
                            value,
                            i
                          ]));
            });
        }));
  var closeAnimationFull = React.useCallback((function (param) {
          return Curry._1(dispatch, /* CloseAnimationFull */4);
        }));
  return React.createElement(React.Fragment, undefined, React.createElement(NewFacetube$BtsCore.make, {
                  showProgress: state.showProgress,
                  error: state.error,
                  children: React.createElement(GridItem$BtsCore.make, {
                        style: Together$BtsCore.marginAuto,
                        top: "0",
                        right: "32",
                        bottom: "0",
                        left: "32",
                        xs: "12",
                        maxWidth: "770px",
                        children: null
                      }, React.createElement(GridContainer$BtsCore.make, {
                            direction: "column",
                            justify: "center",
                            alignItem: "stretch",
                            children: null
                          }, React.createElement(GridItem$BtsCore.make, {
                                style: {
                                  position: "sticky",
                                  top: "0px",
                                  zIndex: "2"
                                },
                                top: "6",
                                bottom: "6",
                                left: "6",
                                xs: "auto",
                                children: React.createElement(GridContainer$BtsCore.make, {
                                      direction: "row",
                                      justify: "center",
                                      alignItem: "center",
                                      children: null
                                    }, React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: null
                                        }, React.createElement(TextFieldOutline$BtsCore.make, {
                                              top: "0",
                                              right: "0",
                                              bottom: "0",
                                              left: "0",
                                              borderTop: "12",
                                              borderBottom: "12",
                                              borderRadius: "20",
                                              value: state.record,
                                              disabled: state.showProgress,
                                              onChange: (function ($$event) {
                                                  return Curry._1(changeRecord, $$event.target.value);
                                                }),
                                              onKeyDown: (function ($$event) {
                                                  return Curry._1(keydownRecord, $$event.keyCode);
                                                }),
                                              onClick: clickRecord,
                                              children: null
                                            }), state.showRecord ? React.createElement(React.Fragment, undefined, React.createElement(SelectMenu$BtsCore.make, {
                                                    top: "100%",
                                                    transform: "translate(0, 0)",
                                                    maxHeight: "280",
                                                    minHeight: "0",
                                                    topLeft: "12",
                                                    topRight: "12",
                                                    bottomRight: "12",
                                                    bottomLeft: "12",
                                                    paddingRight: "8",
                                                    paddingLeft: "8",
                                                    children: $$Array.map((function (recorditem) {
                                                            return React.createElement(MenuItem$BtsCore.make, {
                                                                        top: "8",
                                                                        right: "15",
                                                                        bottom: "8",
                                                                        left: "6",
                                                                        enterBackgroundColor: "rgba(0,0,0,0.06)",
                                                                        downBackgroundColor: "rgba(0,0,0,0.08)",
                                                                        topLeft: "12",
                                                                        topRight: "12",
                                                                        bottomRight: "12",
                                                                        bottomLeft: "12",
                                                                        onClick: (function (param) {
                                                                            return Curry._1(clickItemRecord, recorditem.cordValue);
                                                                          }),
                                                                        children: React.createElement(GridContainer$BtsCore.make, {
                                                                              backgroundColor: "transparent",
                                                                              direction: "row",
                                                                              justify: "between",
                                                                              alignItem: "center",
                                                                              children: null
                                                                            }, React.createElement(GridItem$BtsCore.make, {
                                                                                  top: "0",
                                                                                  right: "0",
                                                                                  bottom: "0",
                                                                                  left: "0",
                                                                                  enterBackgroundColor: "transparent",
                                                                                  backgroundColor: "transparent",
                                                                                  xs: "no",
                                                                                  children: React.createElement(IconButton$BtsCore.make, {
                                                                                        enterBackgroundColor: "transparent",
                                                                                        downBackgroundColor: "transparent",
                                                                                        padding: "4",
                                                                                        children: React.createElement(IconAction$BtsCore.make, {
                                                                                              animation: "circle",
                                                                                              src: recorditem.cordIcon
                                                                                            })
                                                                                      })
                                                                                }), React.createElement(GridItem$BtsCore.make, {
                                                                                  top: "0",
                                                                                  right: "6",
                                                                                  bottom: "0",
                                                                                  left: "6",
                                                                                  enterBackgroundColor: "transparent",
                                                                                  backgroundColor: "transparent",
                                                                                  xs: "auto",
                                                                                  children: React.createElement(Typography$BtsCore.make, {
                                                                                        variant: "subheading",
                                                                                        children: recorditem.cordValue
                                                                                      })
                                                                                }))
                                                                      });
                                                          }), state.recorditems)
                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                    showBackground: true,
                                                    backgroundColor: "transparent",
                                                    onClick: showRecord
                                                  })) : null), React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "no",
                                          children: React.createElement(Typography$BtsCore.make, {
                                                variant: "subheading",
                                                fontWeight: "600",
                                                children: "總筆數：" + String(state.itemCount)
                                              })
                                        }))
                              }), React.createElement(GridItem$BtsCore.make, {
                                style: {
                                  position: "sticky",
                                  top: "61px",
                                  zIndex: "1"
                                },
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(GridContainer$BtsCore.make, {
                                      direction: "row",
                                      justify: "center",
                                      alignItem: "center",
                                      children: $$Array.mapi((function (i, filitem) {
                                              return React.createElement(GridItem$BtsCore.make, {
                                                          top: "0",
                                                          right: "0",
                                                          bottom: "0",
                                                          left: "0",
                                                          xs: "auto",
                                                          children: null
                                                        }, React.createElement(SelectOutline$BtsCore.make, {
                                                              labelColor: "rgba(255,0,0,0.8)",
                                                              tile: filitem.tile,
                                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                                              downBorderColor: "rgba(255,0,0,0.6)",
                                                              borderColor: "rgba(0,0,0,0.2)",
                                                              value: filitem.filtValue,
                                                              disabled: state.showProgress,
                                                              onClick: (function (param) {
                                                                  return Curry._1(showMenu, i);
                                                                }),
                                                              children: /* tuple */[
                                                                filitem.showMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                        top: "0%",
                                                                        transform: "translate(0, 0%)",
                                                                        maxHeight: "280",
                                                                        minHeight: "0",
                                                                        topLeft: "12",
                                                                        topRight: "12",
                                                                        bottomRight: "12",
                                                                        bottomLeft: "12",
                                                                        paddingRight: "8",
                                                                        paddingLeft: "8",
                                                                        children: $$Array.map((function (optionitem) {
                                                                                return React.createElement(MenuItem$BtsCore.make, {
                                                                                            top: "0",
                                                                                            right: "8",
                                                                                            bottom: "0",
                                                                                            left: "8",
                                                                                            disablePadding: optionitem.optionPadding,
                                                                                            topLeft: "12",
                                                                                            topRight: "12",
                                                                                            bottomRight: "12",
                                                                                            bottomLeft: "12",
                                                                                            onClick: (function (param) {
                                                                                                return Curry._2(clickMenu, optionitem.value, i);
                                                                                              }),
                                                                                            children: optionitem.value
                                                                                          });
                                                                              }), filitem.optionitems)
                                                                      }) : null,
                                                                React.createElement(IconGeneral$BtsCore.make, {
                                                                      animation: IconAnimation$BtsCore.topDownRorate(filitem.showMenu),
                                                                      src: Icons$BtsCore.arrowDownBlack
                                                                    })
                                                              ]
                                                            }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                              showBackground: filitem.showMenu,
                                                              backgroundColor: "transparent",
                                                              onClick: (function (param) {
                                                                  return Curry._1(showMenu, i);
                                                                })
                                                            }));
                                            }), state.filitems)
                                    })
                              }), $$Array.mapi((function (i, item) {
                                  return React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                                  top: "0",
                                                  right: "0",
                                                  bottom: "0",
                                                  left: "0",
                                                  cursor: "pointer",
                                                  enterBorderRadius: "10",
                                                  borderRadius: "10",
                                                  enterBackgroundColor: "rgba(0,0,0,0.1)",
                                                  xs: "auto",
                                                  onClick: (function (param) {
                                                      return Curry._2(clickFormBoard, i, item.ids);
                                                    }),
                                                  children: React.createElement(GridContainer$BtsCore.make, {
                                                        backgroundColor: "none",
                                                        direction: "column",
                                                        justify: "center",
                                                        alignItem: "stretch",
                                                        children: null
                                                      }, React.createElement(GridItem$BtsCore.make, {
                                                            enterBackgroundColor: "none",
                                                            backgroundColor: "none",
                                                            xs: "auto",
                                                            children: React.createElement(GridContainer$BtsCore.make, {
                                                                  backgroundColor: "none",
                                                                  direction: "row",
                                                                  justify: "between",
                                                                  alignItem: "center",
                                                                  children: null
                                                                }, React.createElement(GridItem$BtsCore.make, {
                                                                      top: "0",
                                                                      right: "0",
                                                                      bottom: "0",
                                                                      left: "0",
                                                                      enterBackgroundColor: "none",
                                                                      backgroundColor: "none",
                                                                      xs: "auto",
                                                                      children: React.createElement(Typography$BtsCore.make, {
                                                                            variant: "tile",
                                                                            fontWeight: "600",
                                                                            children: item.numbers
                                                                          })
                                                                    }), item.itemDelete ? React.createElement(GridItem$BtsCore.make, {
                                                                        top: "0",
                                                                        right: "0",
                                                                        bottom: "0",
                                                                        left: "0",
                                                                        enterBackgroundColor: "none",
                                                                        backgroundColor: "none",
                                                                        xs: "no",
                                                                        children: React.createElement(IconButton$BtsCore.make, {
                                                                              padding: "8",
                                                                              disabled: state.showProgress,
                                                                              onClick: (function ($$event) {
                                                                                  return Curry._2(clearItem, item.ids, $$event);
                                                                                }),
                                                                              children: null
                                                                            }, React.createElement(Tooltip$BtsCore.make, {
                                                                                  location: "bottom",
                                                                                  backgroundColor: "rgba(255,0,0,0.8)",
                                                                                  children: React.createElement(ReactIntl.FormattedMessage, {
                                                                                        id: "deleted",
                                                                                        defaultMessage: "Deleted"
                                                                                      })
                                                                                }), React.createElement(IconAction$BtsCore.make, {
                                                                                  animation: "circle",
                                                                                  src: Icons$BtsCore.deleteBlack
                                                                                }))
                                                                      }) : null)
                                                          }), React.createElement(GridItem$BtsCore.make, {
                                                            top: "3",
                                                            left: "14",
                                                            enterBackgroundColor: "none",
                                                            backgroundColor: "none",
                                                            xs: "auto",
                                                            children: React.createElement(Typography$BtsCore.make, {
                                                                  variant: "subheading",
                                                                  children: item.subjects
                                                                })
                                                          }), React.createElement(GridItem$BtsCore.make, {
                                                            top: "0",
                                                            enterBackgroundColor: "none",
                                                            backgroundColor: "none",
                                                            xs: "auto",
                                                            children: React.createElement(GridContainer$BtsCore.make, {
                                                                  backgroundColor: "none",
                                                                  direction: "row",
                                                                  justify: "center",
                                                                  alignItem: "center",
                                                                  children: null
                                                                }, React.createElement(GridItem$BtsCore.make, {
                                                                      top: "0",
                                                                      bottom: "0",
                                                                      left: "0",
                                                                      enterBackgroundColor: "none",
                                                                      backgroundColor: "none",
                                                                      xs: "no",
                                                                      children: React.createElement(Typography$BtsCore.make, {
                                                                            variant: "subheading",
                                                                            color: "#606060",
                                                                            children: item.postdates
                                                                          })
                                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                                      top: "0",
                                                                      bottom: "0",
                                                                      left: "0",
                                                                      enterBackgroundColor: "none",
                                                                      backgroundColor: "none",
                                                                      xs: "auto",
                                                                      children: React.createElement(Typography$BtsCore.make, {
                                                                            variant: "subheading",
                                                                            color: "#606060",
                                                                            children: item.postGroups
                                                                          })
                                                                    }))
                                                          }), React.createElement(GridItem$BtsCore.make, {
                                                            top: "0",
                                                            enterBackgroundColor: "none",
                                                            backgroundColor: "none",
                                                            xs: "no",
                                                            children: React.createElement(Typography$BtsCore.make, {
                                                                  variant: "subheading",
                                                                  color: "#606060",
                                                                  whiteSpace: "inherit",
                                                                  children: item.homepageMomos
                                                                })
                                                          }), React.createElement(GridItem$BtsCore.make, {
                                                            top: "0",
                                                            enterBackgroundColor: "none",
                                                            backgroundColor: "none",
                                                            xs: "no",
                                                            children: React.createElement(Typography$BtsCore.make, {
                                                                  variant: "subheading",
                                                                  color: "#606060",
                                                                  whiteSpace: "inherit",
                                                                  children: item.mbs
                                                                })
                                                          }), React.createElement(GridItem$BtsCore.make, {
                                                            top: "0",
                                                            enterBackgroundColor: "none",
                                                            backgroundColor: "none",
                                                            xs: "no",
                                                            children: React.createElement(Typography$BtsCore.make, {
                                                                  variant: "subheading",
                                                                  color: "#606060",
                                                                  whiteSpace: "inherit",
                                                                  children: item.homepage1s
                                                                })
                                                          }), React.createElement(GridItem$BtsCore.make, {
                                                            top: "0",
                                                            enterBackgroundColor: "none",
                                                            backgroundColor: "none",
                                                            xs: "no",
                                                            children: React.createElement(Typography$BtsCore.make, {
                                                                  variant: "subheading",
                                                                  color: "#606060",
                                                                  whiteSpace: "inherit",
                                                                  children: item.bodys
                                                                })
                                                          }))
                                                }), React.createElement(GridItem$BtsCore.make, {
                                                  top: "6",
                                                  right: "0",
                                                  bottom: "6",
                                                  left: "0",
                                                  xs: "auto",
                                                  children: React.createElement(Divider$BtsCore.make, { })
                                                }));
                                }), state.items)), React.createElement(BottomScroll$BtsCore.make, {
                            showBar: state.showItem,
                            disabled: state.showProgress,
                            onClick: clickScrollBar
                          }))
                }), React.createElement(DialogFull$BtsCore.make, {
                  showAnimation: state.showFull,
                  children: null
                }, React.createElement(DialogTitle$BtsCore.make, {
                      top: "22",
                      left: "64",
                      children: React.createElement(Typography$BtsCore.make, {
                            variant: "tile",
                            fontWeight: "600",
                            children: state.formTitle
                          })
                    }), React.createElement(DialogContent$BtsCore.make, {
                      children: React.createElement(DialogContentText$BtsCore.make, {
                            children: React.createElement(GridItem$BtsCore.make, {
                                  style: Together$BtsCore.marginAuto,
                                  top: "0",
                                  right: "0",
                                  bottom: "0",
                                  left: "54",
                                  xs: "12",
                                  maxWidth: "770px",
                                  children: React.createElement(GridContainer$BtsCore.make, {
                                        direction: "column",
                                        justify: "center",
                                        alignItem: "stretch",
                                        children: null
                                      }, state.update ? React.createElement(GridItem$BtsCore.make, {
                                              style: {
                                                position: "sticky",
                                                top: "0px",
                                                zIndex: "1000"
                                              },
                                              top: "0",
                                              bottom: "6",
                                              left: "0",
                                              xs: "auto",
                                              children: React.createElement(GridContainer$BtsCore.make, {
                                                    direction: "rowReverse",
                                                    justify: "around",
                                                    alignItem: "center",
                                                    children: null
                                                  }, React.createElement(GridItem$BtsCore.make, {
                                                        top: "0",
                                                        right: "0",
                                                        bottom: "0",
                                                        left: "0",
                                                        xs: "no",
                                                        children: React.createElement(Button$BtsCore.make, {
                                                              disabled: state.showProgress,
                                                              onClick: insertForm,
                                                              children: React.createElement(ReactIntl.FormattedMessage, {
                                                                    id: "save",
                                                                    defaultMessage: "Save"
                                                                  })
                                                            })
                                                      }), React.createElement(GridItem$BtsCore.make, {
                                                        top: "0",
                                                        right: "0",
                                                        bottom: "0",
                                                        left: "0",
                                                        xs: "auto",
                                                        children: null
                                                      }))
                                            }) : null, $$Array.mapi((function (i, item) {
                                              var match = item.showPdfFile;
                                              var match$1 = item.showTotal;
                                              return React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                                              style: {
                                                                height: "50px"
                                                              },
                                                              top: "0",
                                                              right: "6",
                                                              bottom: "0",
                                                              left: "6",
                                                              xs: "auto",
                                                              children: React.createElement(GridContainer$BtsCore.make, {
                                                                    direction: "row",
                                                                    justify: "center",
                                                                    alignItem: "center",
                                                                    children: null
                                                                  }, React.createElement(GridItem$BtsCore.make, {
                                                                        top: "25",
                                                                        right: "0",
                                                                        bottom: "0",
                                                                        left: "0",
                                                                        xs: "auto",
                                                                        children: React.createElement(Typography$BtsCore.make, {
                                                                              variant: "subheading",
                                                                              fontWeight: "bolder",
                                                                              children: item.postdate
                                                                            })
                                                                      }), React.createElement(GridItem$BtsCore.make, {
                                                                        top: "25",
                                                                        right: "0",
                                                                        bottom: "0",
                                                                        left: "0",
                                                                        xs: "auto",
                                                                        children: React.createElement(Typography$BtsCore.make, {
                                                                              variant: "subheading",
                                                                              fontWeight: "bolder",
                                                                              children: item.postinfo
                                                                            })
                                                                      }))
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.subject,
                                                                    disabled: state.showProgress,
                                                                    onChange: (function ($$event) {
                                                                        return Curry._2(changeSubject, $$event.target.value, i);
                                                                      }),
                                                                    children: "文件名稱"
                                                                  })
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.homepageMomo,
                                                                    disabled: state.showProgress,
                                                                    onChange: (function ($$event) {
                                                                        return Curry._2(changeMomo, $$event.target.value, i);
                                                                      }),
                                                                    children: "機種"
                                                                  })
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "6",
                                                              bottom: "6",
                                                              left: "6",
                                                              xs: "auto",
                                                              children: React.createElement(GridContainer$BtsCore.make, {
                                                                    direction: "row",
                                                                    justify: "start",
                                                                    alignItem: "center",
                                                                    children: $$Array.map((function (mbitem) {
                                                                            return React.createElement(GridItem$BtsCore.make, {
                                                                                        top: "0",
                                                                                        bottom: "0",
                                                                                        left: "0",
                                                                                        xs: "no",
                                                                                        children: React.createElement(Chip$BtsCore.make, {
                                                                                              enterBorderWidth: "0",
                                                                                              downBorderWidth: "0",
                                                                                              borderWidth: "0",
                                                                                              showButn: true,
                                                                                              src: Icons$BtsCore.clearBlack,
                                                                                              onButton: (function (param) {
                                                                                                  return Curry._2(clearMbItem, mbitem.mbId, i);
                                                                                                }),
                                                                                              children: /* tuple */[
                                                                                                React.createElement(Typography$BtsCore.make, {
                                                                                                      variant: "subtitle2",
                                                                                                      children: "S"
                                                                                                    }),
                                                                                                React.createElement(Typography$BtsCore.make, {
                                                                                                      variant: "subtitle2",
                                                                                                      children: mbitem.mbValue
                                                                                                    })
                                                                                              ]
                                                                                            })
                                                                                      });
                                                                          }), item.mbitems)
                                                                  })
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: React.createElement(GridContainer$BtsCore.make, {
                                                                    direction: "row",
                                                                    justify: "center",
                                                                    alignItem: "center",
                                                                    children: null
                                                                  }, React.createElement(GridItem$BtsCore.make, {
                                                                        top: "0",
                                                                        right: "0",
                                                                        bottom: "0",
                                                                        left: "0",
                                                                        xs: "auto",
                                                                        children: null
                                                                      }, React.createElement(SelectStandard$BtsCore.make, {
                                                                            top: "12",
                                                                            right: "0",
                                                                            left: "0",
                                                                            labelColor: "rgba(255,0,0,0.8)",
                                                                            tile: "篩選板類",
                                                                            enterBorderColor: "rgba(255,0,0,0.8)",
                                                                            downBorderColor: "rgba(255,0,0,0.6)",
                                                                            borderColor: "rgba(0,0,0,0.2)",
                                                                            value: item.mtst,
                                                                            disabled: state.showProgress,
                                                                            onClick: (function (param) {
                                                                                return Curry._1(showMtstMenu, i);
                                                                              }),
                                                                            children: /* tuple */[
                                                                              item.showMtstMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                                      top: "0",
                                                                                      transform: "translate(0, 0)",
                                                                                      maxHeight: "280",
                                                                                      minHeight: "0",
                                                                                      topLeft: "12",
                                                                                      topRight: "12",
                                                                                      bottomRight: "12",
                                                                                      bottomLeft: "12",
                                                                                      paddingRight: "8",
                                                                                      paddingLeft: "8",
                                                                                      children: $$Array.map((function (mtstitem) {
                                                                                              return React.createElement(MenuItem$BtsCore.make, {
                                                                                                          top: "0",
                                                                                                          right: "8",
                                                                                                          bottom: "0",
                                                                                                          left: "8",
                                                                                                          disablePadding: mtstitem.optionPadding,
                                                                                                          topLeft: "12",
                                                                                                          topRight: "12",
                                                                                                          bottomRight: "12",
                                                                                                          bottomLeft: "12",
                                                                                                          onClick: (function (param) {
                                                                                                              return Curry._2(clickMtstMenu, mtstitem.value, i);
                                                                                                            }),
                                                                                                          children: mtstitem.value
                                                                                                        });
                                                                                            }), item.mtstitems)
                                                                                    }) : null,
                                                                              React.createElement(IconGeneral$BtsCore.make, {
                                                                                    animation: IconAnimation$BtsCore.topDownRorate(item.showMtstMenu),
                                                                                    src: Icons$BtsCore.arrowDownBlack
                                                                                  })
                                                                            ]
                                                                          }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                            showBackground: item.showMtstMenu,
                                                                            backgroundColor: "transparent",
                                                                            onClick: (function (param) {
                                                                                return Curry._1(showMtstMenu, i);
                                                                              })
                                                                          })), React.createElement(GridItem$BtsCore.make, {
                                                                        top: "0",
                                                                        right: "0",
                                                                        bottom: "0",
                                                                        left: "0",
                                                                        xs: "auto",
                                                                        children: null
                                                                      }, React.createElement(SelectStandard$BtsCore.make, {
                                                                            top: "12",
                                                                            right: "0",
                                                                            left: "0",
                                                                            labelColor: "rgba(255,0,0,0.8)",
                                                                            tile: "板類",
                                                                            enterBorderColor: "rgba(255,0,0,0.8)",
                                                                            downBorderColor: "rgba(255,0,0,0.6)",
                                                                            borderColor: "rgba(0,0,0,0.2)",
                                                                            value: item.mbst,
                                                                            disabled: state.showProgress,
                                                                            onClick: (function (param) {
                                                                                return Curry._1(showMbstMenu, i);
                                                                              }),
                                                                            children: /* tuple */[
                                                                              item.showMbstMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                                      top: "0",
                                                                                      transform: "translate(0, 0)",
                                                                                      maxHeight: "280",
                                                                                      minHeight: "0",
                                                                                      topLeft: "12",
                                                                                      topRight: "12",
                                                                                      bottomRight: "12",
                                                                                      bottomLeft: "12",
                                                                                      paddingRight: "8",
                                                                                      paddingLeft: "8",
                                                                                      children: $$Array.map((function (mbstitem) {
                                                                                              return React.createElement(MenuItem$BtsCore.make, {
                                                                                                          top: "0",
                                                                                                          right: "8",
                                                                                                          bottom: "0",
                                                                                                          left: "8",
                                                                                                          disablePadding: mbstitem.optionPadding,
                                                                                                          topLeft: "12",
                                                                                                          topRight: "12",
                                                                                                          bottomRight: "12",
                                                                                                          bottomLeft: "12",
                                                                                                          onClick: (function (param) {
                                                                                                              return Curry._2(clickMbstMenu, mbstitem.value, i);
                                                                                                            }),
                                                                                                          children: mbstitem.value
                                                                                                        });
                                                                                            }), item.mbstitems)
                                                                                    }) : null,
                                                                              React.createElement(IconGeneral$BtsCore.make, {
                                                                                    animation: IconAnimation$BtsCore.topDownRorate(item.showMbstMenu),
                                                                                    src: Icons$BtsCore.arrowDownBlack
                                                                                  })
                                                                            ]
                                                                          }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                            showBackground: item.showMbstMenu,
                                                                            backgroundColor: "transparent",
                                                                            onClick: (function (param) {
                                                                                return Curry._1(showMbstMenu, i);
                                                                              })
                                                                          })))
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "6",
                                                              bottom: "6",
                                                              left: "6",
                                                              xs: "auto",
                                                              children: React.createElement(GridContainer$BtsCore.make, {
                                                                    direction: "row",
                                                                    justify: "start",
                                                                    alignItem: "center",
                                                                    children: $$Array.map((function (pageitem) {
                                                                            return React.createElement(GridItem$BtsCore.make, {
                                                                                        top: "0",
                                                                                        bottom: "0",
                                                                                        left: "0",
                                                                                        xs: "no",
                                                                                        children: React.createElement(Chip$BtsCore.make, {
                                                                                              enterBorderWidth: "0",
                                                                                              downBorderWidth: "0",
                                                                                              borderWidth: "0",
                                                                                              showButn: true,
                                                                                              src: Icons$BtsCore.clearBlack,
                                                                                              onButton: (function (param) {
                                                                                                  return Curry._2(clearPageItem, pageitem.mbId, i);
                                                                                                }),
                                                                                              children: /* tuple */[
                                                                                                React.createElement(Typography$BtsCore.make, {
                                                                                                      variant: "subtitle2",
                                                                                                      children: "S"
                                                                                                    }),
                                                                                                React.createElement(Typography$BtsCore.make, {
                                                                                                      variant: "subtitle2",
                                                                                                      children: pageitem.mbValue
                                                                                                    })
                                                                                              ]
                                                                                            })
                                                                                      });
                                                                          }), item.pageitems)
                                                                  })
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              style: {
                                                                position: "relative"
                                                              },
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: null
                                                            }, React.createElement(TextFieldStandard$BtsCore.make, {
                                                                  top: "12",
                                                                  right: "0",
                                                                  left: "0",
                                                                  labelColor: "rgba(255,0,0,0.8)",
                                                                  enterBorderColor: "rgba(255,0,0,0.8)",
                                                                  downBorderColor: "rgba(255,0,0,0.6)",
                                                                  borderColor: "rgba(0,0,0,0.2)",
                                                                  value: item.custom,
                                                                  disabled: state.showProgress,
                                                                  onChange: (function ($$event) {
                                                                      return Curry._2(changeCustom, $$event.target.value, i);
                                                                    }),
                                                                  onKeyDown: (function ($$event) {
                                                                      return Curry._3(keydownCustom, $$event.keyCode, item.custom, i);
                                                                    }),
                                                                  children: "客戶"
                                                                }), item.showCustom ? React.createElement(React.Fragment, undefined, React.createElement(SelectMenu$BtsCore.make, {
                                                                        top: "100%",
                                                                        transform: "translate(0, 0)",
                                                                        maxHeight: "280",
                                                                        minHeight: "0",
                                                                        topLeft: "12",
                                                                        topRight: "12",
                                                                        bottomRight: "12",
                                                                        bottomLeft: "12",
                                                                        paddingRight: "8",
                                                                        paddingLeft: "8",
                                                                        children: $$Array.map((function (customitems) {
                                                                                return React.createElement(MenuItem$BtsCore.make, {
                                                                                            top: "8",
                                                                                            right: "15",
                                                                                            bottom: "8",
                                                                                            left: "6",
                                                                                            enterBackgroundColor: "rgba(0,0,0,0.06)",
                                                                                            downBackgroundColor: "rgba(0,0,0,0.08)",
                                                                                            topLeft: "12",
                                                                                            topRight: "12",
                                                                                            bottomRight: "12",
                                                                                            bottomLeft: "12",
                                                                                            onClick: (function (param) {
                                                                                                return Curry._2(clickItemCustom, customitems.value, i);
                                                                                              }),
                                                                                            children: React.createElement(Typography$BtsCore.make, {
                                                                                                  variant: "subheading",
                                                                                                  children: customitems.value
                                                                                                })
                                                                                          });
                                                                              }), item.customitems)
                                                                      }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                        showBackground: true,
                                                                        backgroundColor: "transparent",
                                                                        onClick: (function (param) {
                                                                            return Curry._1(showCustom, i);
                                                                          })
                                                                      })) : null), React.createElement(GridItem$BtsCore.make, {
                                                              right: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: React.createElement(GridContainer$BtsCore.make, {
                                                                    direction: "row",
                                                                    justify: "center",
                                                                    alignItem: "center",
                                                                    children: null
                                                                  }, React.createElement(GridItem$BtsCore.make, {
                                                                        top: "0",
                                                                        right: "0",
                                                                        bottom: "0",
                                                                        left: "0",
                                                                        xs: "auto",
                                                                        children: React.createElement(OtherUpload$BtsCore.make, {
                                                                              webLoad: state.showProgress,
                                                                              showDrop: item.showDrop,
                                                                              showFile: item.showFile,
                                                                              showImage: item.showImage,
                                                                              showVideo: item.showVideo,
                                                                              showAudio: item.showAudio,
                                                                              src: item.path + item.src,
                                                                              fileRef: fileRef,
                                                                              onDragOver: (function ($$event) {
                                                                                  return Curry._2(dragOverFile, $$event, i);
                                                                                }),
                                                                              onDragLeave: (function ($$event) {
                                                                                  return Curry._2(dragLeaveFile, $$event, i);
                                                                                }),
                                                                              onDrop: (function ($$event) {
                                                                                  return Curry._3(dropFile, $$event, Caml_array.caml_array_get($$event.nativeEvent.dataTransfer.files, 0), i);
                                                                                }),
                                                                              disabled: state.showProgress,
                                                                              onClick: chooseFile,
                                                                              onChange: (function ($$event) {
                                                                                  return Curry._2(changeFile, Caml_array.caml_array_get($$event.target.files, 0), i);
                                                                                })
                                                                            })
                                                                      }), React.createElement(GridItem$BtsCore.make, {
                                                                        top: "0",
                                                                        right: "4",
                                                                        bottom: "0",
                                                                        left: "0",
                                                                        xs: "no",
                                                                        children: React.createElement(IconButton$BtsCore.make, {
                                                                              padding: "2",
                                                                              disabled: state.showProgress || !item.showFile,
                                                                              onClick: (function (param) {
                                                                                  return Curry._5(transForm, item.path, item.original, item.encryption, item.extension, i);
                                                                                }),
                                                                              children: React.createElement(IconAction$BtsCore.make, {
                                                                                    animation: "leftRight",
                                                                                    src: Icons$BtsCore.cachedBlack
                                                                                  })
                                                                            })
                                                                      }), React.createElement(GridItem$BtsCore.make, {
                                                                        top: "0",
                                                                        right: "0",
                                                                        bottom: "0",
                                                                        left: "0",
                                                                        xs: "auto",
                                                                        children: React.createElement(OtherUpload$BtsCore.make, {
                                                                              webLoad: state.showProgress,
                                                                              showDrop: item.showPdfDrop,
                                                                              showFile: item.showPdfFile,
                                                                              showImage: item.showPdfImage,
                                                                              showVideo: item.showPdfVideo,
                                                                              showAudio: item.showPdfAudio,
                                                                              src: item.pdfPath + item.pdfSrc,
                                                                              fileRef: fileRef,
                                                                              onDragOver: (function ($$event) {
                                                                                  return Curry._2(dragOverPdfFile, $$event, i);
                                                                                }),
                                                                              onDragLeave: (function ($$event) {
                                                                                  return Curry._2(dragLeavePdfFile, $$event, i);
                                                                                }),
                                                                              onDrop: (function ($$event) {
                                                                                  return Curry._3(dropPdfFile, $$event, Caml_array.caml_array_get($$event.nativeEvent.dataTransfer.files, 0), i);
                                                                                }),
                                                                              disabled: state.showProgress,
                                                                              onClick: chooseFile,
                                                                              onChange: (function ($$event) {
                                                                                  return Curry._2(changePdfFile, Caml_array.caml_array_get($$event.target.files, 0), i);
                                                                                })
                                                                            })
                                                                      }))
                                                            }), match ? (
                                                            match$1 ? React.createElement(GridItem$BtsCore.make, {
                                                                    top: "0",
                                                                    bottom: "0",
                                                                    xs: "auto",
                                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                                          direction: "rowReverse",
                                                                          justify: "center",
                                                                          alignItem: "center",
                                                                          children: null
                                                                        }, React.createElement(GridItem$BtsCore.make, {
                                                                              top: "0",
                                                                              right: "0",
                                                                              bottom: "0",
                                                                              left: "0",
                                                                              xs: "auto",
                                                                              children: React.createElement(GridContainer$BtsCore.make, {
                                                                                    direction: "row",
                                                                                    justify: "center",
                                                                                    alignItem: "center",
                                                                                    children: null
                                                                                  }, React.createElement(GridItem$BtsCore.make, {
                                                                                        top: "0",
                                                                                        right: "0",
                                                                                        bottom: "0",
                                                                                        left: "0",
                                                                                        xs: "auto",
                                                                                        children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                                              top: "0",
                                                                                              right: "0",
                                                                                              bottom: "0",
                                                                                              left: "0",
                                                                                              labelColor: "rgba(255,0,0,0.8)",
                                                                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                                                                              downBorderColor: "rgba(255,0,0,0.6)",
                                                                                              borderColor: "rgba(0,0,0,0.2)",
                                                                                              type_: "number",
                                                                                              value: item.first,
                                                                                              disabled: state.showProgress,
                                                                                              onChange: (function ($$event) {
                                                                                                  return Curry._2(changeFirst, $$event.target.value, i);
                                                                                                }),
                                                                                              children: "起始頁"
                                                                                            })
                                                                                      }), React.createElement(GridItem$BtsCore.make, {
                                                                                        top: "0",
                                                                                        right: "0",
                                                                                        bottom: "0",
                                                                                        left: "0",
                                                                                        xs: "auto",
                                                                                        children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                                              top: "0",
                                                                                              right: "0",
                                                                                              bottom: "0",
                                                                                              left: "0",
                                                                                              labelColor: "rgba(255,0,0,0.8)",
                                                                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                                                                              downBorderColor: "rgba(255,0,0,0.6)",
                                                                                              borderColor: "rgba(0,0,0,0.2)",
                                                                                              type_: "number",
                                                                                              value: item.final,
                                                                                              disabled: state.showProgress,
                                                                                              onChange: (function ($$event) {
                                                                                                  return Curry._2(changeFinal, $$event.target.value, i);
                                                                                                }),
                                                                                              children: "最終頁"
                                                                                            })
                                                                                      }), React.createElement(GridItem$BtsCore.make, {
                                                                                        top: "0",
                                                                                        right: "0",
                                                                                        bottom: "0",
                                                                                        left: "0",
                                                                                        xs: "no",
                                                                                        children: React.createElement(Button$BtsCore.make, {
                                                                                              disabled: state.showProgress,
                                                                                              onClick: (function (param) {
                                                                                                  return Curry._7(removeFile, item.pdfPath, item.pdfOriginal, item.pdfEncryption, item.pdfExtension, item.first, item.final, i);
                                                                                                }),
                                                                                              children: React.createElement(ReactIntl.FormattedMessage, {
                                                                                                    id: "save",
                                                                                                    defaultMessage: "Save"
                                                                                                  })
                                                                                            })
                                                                                      }))
                                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                                              top: "0",
                                                                              right: "0",
                                                                              bottom: "0",
                                                                              left: "0",
                                                                              width: "34px",
                                                                              xs: "no",
                                                                              children: null
                                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                                              top: "0",
                                                                              right: "0",
                                                                              bottom: "0",
                                                                              left: "0",
                                                                              xs: "auto",
                                                                              children: null
                                                                            }))
                                                                  }) : React.createElement(GridItem$BtsCore.make, {
                                                                    top: "0",
                                                                    bottom: "0",
                                                                    xs: "auto",
                                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                                          direction: "rowReverse",
                                                                          justify: "center",
                                                                          alignItem: "center",
                                                                          children: null
                                                                        }, React.createElement(GridItem$BtsCore.make, {
                                                                              top: "0",
                                                                              right: "0",
                                                                              bottom: "0",
                                                                              left: "0",
                                                                              xs: "no",
                                                                              children: React.createElement(Button$BtsCore.make, {
                                                                                    disabled: state.showProgress,
                                                                                    onClick: (function (param) {
                                                                                        return Curry._5(totalForm, item.pdfPath, item.pdfOriginal, item.pdfEncryption, item.pdfExtension, i);
                                                                                      }),
                                                                                    children: React.createElement(ReactIntl.FormattedMessage, {
                                                                                          id: "save",
                                                                                          defaultMessage: "Save"
                                                                                        })
                                                                                  })
                                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                                              top: "0",
                                                                              right: "0",
                                                                              bottom: "0",
                                                                              left: "0",
                                                                              xs: "auto",
                                                                              children: null
                                                                            }))
                                                                  })
                                                          ) : null, React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: React.createElement(TextFieldMultiline$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    rows: 3,
                                                                    value: item.body,
                                                                    disabled: state.showProgress,
                                                                    onChange: (function ($$event) {
                                                                        return Curry._2(changeBody, $$event.target.value, i);
                                                                      }),
                                                                    children: "備註"
                                                                  })
                                                            }));
                                            }), state.formitems))
                                })
                          })
                    }), React.createElement(DialogActions$BtsCore.make, {
                      children: React.createElement("div", {
                            style: {
                              left: "10px",
                              position: "fixed",
                              top: "10px"
                            }
                          }, React.createElement(IconButton$BtsCore.make, {
                                padding: "12",
                                disabled: state.showProgress,
                                onClick: closeAnimationFull,
                                children: null
                              }, React.createElement(Tooltip$BtsCore.make, {
                                    location: "bottom",
                                    backgroundColor: "rgba(255,0,0,0.8)",
                                    children: React.createElement(ReactIntl.FormattedMessage, {
                                          id: "closed",
                                          defaultMessage: "Closed"
                                        })
                                  }), React.createElement(IconAction$BtsCore.make, {
                                    animation: "circle",
                                    src: Icons$BtsCore.clearBlack
                                  })))
                    })), React.createElement(SnackbarYoutube$BtsCore.make, {
                  showYoutube: state.showYoutube,
                  position: "bottomLeft",
                  children: /* tuple */[
                    React.createElement("span", undefined, state.youtubeText),
                    null
                  ]
                }));
}

var make = Product;

export {
  newmbitem ,
  reducer ,
  initialState ,
  make ,
  
}
/*  Not a pure module */
