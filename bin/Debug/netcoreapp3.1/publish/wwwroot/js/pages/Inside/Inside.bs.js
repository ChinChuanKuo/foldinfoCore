// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as List from "bs-platform/lib/es6/list.js";
import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Caml_obj from "bs-platform/lib/es6/caml_obj.js";
import * as Caml_array from "bs-platform/lib/es6/caml_array.js";
import * as ReactIntl from "react-intl";
import * as Tab$BtsCore from "../../material-ui/core/Tabs/Tab.bs.js";
import * as Chip$BtsCore from "../../material-ui/core/Chip/Chip.bs.js";
import * as Data$BtsCore from "../../features/Data.bs.js";
import * as Tabs$BtsCore from "../../material-ui/core/Tabs/Tabs.bs.js";
import * as Icons$BtsCore from "../../material-ui/icon/Icons.bs.js";
import * as Image$BtsCore from "../../example/Medias/Image.bs.js";
import * as Media$BtsCore from "../../example/Medias/Media.bs.js";
import * as Avatar$BtsCore from "../../material-ui/core/Avatar/Avatar.bs.js";
import * as Button$BtsCore from "../../material-ui/core/Button/Button.bs.js";
import * as Iframe$BtsCore from "../../material-ui/core/Iframe/Iframe.bs.js";
import * as Status$BtsCore from "../../features/Status.bs.js";
import * as Divider$BtsCore from "../../material-ui/core/Divider/Divider.bs.js";
import * as ToolBar$BtsCore from "../../example/ToolBar/ToolBar.bs.js";
import * as Tooltip$BtsCore from "../../material-ui/core/Tooltip/Tooltip.bs.js";
import * as Axiosapi$BtsCore from "../../features/Axiosapi.bs.js";
import * as GridItem$BtsCore from "../../material-ui/core/Grid/GridItem.bs.js";
import * as MenuItem$BtsCore from "../../material-ui/core/MenuItem/MenuItem.bs.js";
import * as Together$BtsCore from "../../styles/Together/Together.bs.js";
import * as DialogFull$BtsCore from "../../material-ui/core/Dialog/DialogFull.bs.js";
import * as IconAction$BtsCore from "../../material-ui/core/IconStyle/IconAction.bs.js";
import * as IconButton$BtsCore from "../../material-ui/core/IconButton/IconButton.bs.js";
import * as SelectMenu$BtsCore from "../../material-ui/core/Menu/SelectMenu.bs.js";
import * as Typography$BtsCore from "../../material-ui/core/Typography/Typography.bs.js";
import * as DialogTitle$BtsCore from "../../material-ui/core/Dialog/DialogTitle.bs.js";
import * as IconGeneral$BtsCore from "../../material-ui/core/IconStyle/IconGeneral.bs.js";
import * as NewFacetube$BtsCore from "../../example/Facebook/NewFacetube.bs.js";
import * as BottomScroll$BtsCore from "../../example/ScrollBar/BottomScroll.bs.js";
import * as ObjectFormat$BtsCore from "../../controls/ObjectFormat.bs.js";
import * as DialogActions$BtsCore from "../../material-ui/core/Dialog/DialogActions.bs.js";
import * as DialogContent$BtsCore from "../../material-ui/core/Dialog/DialogContent.bs.js";
import * as GeneralUpload$BtsCore from "../../example/Uploads/GeneralUpload.bs.js";
import * as GridContainer$BtsCore from "../../material-ui/core/Grid/GridContainer.bs.js";
import * as IconAnimation$BtsCore from "../../controls/IconAnimation.bs.js";
import * as SelectOutline$BtsCore from "../../material-ui/core/Select/SelectOutline.bs.js";
import * as SelectStandard$BtsCore from "../../material-ui/core/Select/SelectStandard.bs.js";
import * as BackgroundBoard$BtsCore from "../../example/Boards/BackgroundBoard.bs.js";
import * as SnackbarYoutube$BtsCore from "../../material-ui/core/Snackbar/SnackbarYoutube.bs.js";
import * as TextFieldArticle$BtsCore from "../../material-ui/core/TextField/TextFieldArticle.bs.js";
import * as TextFieldOutline$BtsCore from "../../material-ui/core/TextField/TextFieldOutline.bs.js";
import * as DialogContentText$BtsCore from "../../material-ui/core/Dialog/DialogContentText.bs.js";
import * as TextFieldStandard$BtsCore from "../../material-ui/core/TextField/TextFieldStandard.bs.js";
import * as TextFieldMultiline$BtsCore from "../../material-ui/core/TextField/TextFieldMultiline.bs.js";

((require('../../../scss/pages/Together/together.scss')));

function newmbitem(mbId, mbValue) {
  return [{
            mbId: mbId,
            mbValue: mbValue
          }];
}

function newphotoitem(id, images, videos, audios, src, imagePath, original, encryption, extension, date) {
  return [{
            photoId: id,
            photoImage: images,
            photoVideo: videos,
            photoAudio: audios,
            photoSrc: src,
            photoPath: imagePath,
            photoOriginal: original,
            photoEncryption: encryption,
            photoExtension: extension,
            photoDate: date,
            photoInsert: true,
            showDelete: true,
            photoDelete: false
          }];
}

function newgrotoitem(id, images, videos, audios, src, imagePath, original, encryption, extension, date, name) {
  return [{
            grotoId: id,
            grotoImage: images,
            grotoVideo: videos,
            grotoAudio: audios,
            grotoSrc: src,
            grotoPath: imagePath,
            grotoOriginal: original,
            grotoEncryption: encryption,
            grotoExtension: extension,
            grotoName: name,
            grotoDate: date,
            grotoInsert: true,
            showDelete: true,
            grotoDelete: false
          }];
}

function reducer(state, action) {
  if (typeof action === "number") {
    switch (action) {
      case /* SettingError */0 :
          var newrecord = Caml_obj.caml_obj_dup(state);
          newrecord.error = !state.error;
          return newrecord;
      case /* SettingFormLoad */1 :
          var newrecord$1 = Caml_obj.caml_obj_dup(state);
          newrecord$1.formLoad = !state.formLoad;
          return newrecord$1;
      case /* ActionShowProgress */2 :
          var newrecord$2 = Caml_obj.caml_obj_dup(state);
          newrecord$2.showProgress = !state.showProgress;
          return newrecord$2;
      case /* ClearFilterItems */3 :
          var newrecord$3 = Caml_obj.caml_obj_dup(state);
          newrecord$3.filitems = $$Array.map((function (filitem) {
                  return {
                          index: filitem.index,
                          tile: filitem.tile,
                          filtValue: "",
                          showMenu: filitem.showMenu,
                          optionitems: filitem.optionitems
                        };
                }), state.filitems);
          return newrecord$3;
      case /* CloseAnimationFull */4 :
          var newrecord$4 = Caml_obj.caml_obj_dup(state);
          newrecord$4.showFull = !state.showFull;
          return newrecord$4;
      case /* CloseFileFull */5 :
          var newrecord$5 = Caml_obj.caml_obj_dup(state);
          newrecord$5.showFileFull = !state.showFileFull;
          return newrecord$5;
      
    }
  } else {
    switch (action.tag | 0) {
      case /* SettingFormWidth */0 :
          var newrecord$6 = Caml_obj.caml_obj_dup(state);
          newrecord$6.formHeight = action[1];
          newrecord$6.formWidth = action[0];
          return newrecord$6;
      case /* ActionPermissItems */1 :
          var newrecord$7 = Caml_obj.caml_obj_dup(state);
          newrecord$7.export = action[3];
          newrecord$7.delete = action[2];
          newrecord$7.update = action[1];
          newrecord$7.insert = action[0];
          return newrecord$7;
      case /* SettingFilItems */2 :
          var newrecord$8 = Caml_obj.caml_obj_dup(state);
          newrecord$8.filitems = action[0];
          return newrecord$8;
      case /* SettingFormItems */3 :
          var newrecord$9 = Caml_obj.caml_obj_dup(state);
          newrecord$9.items = action[2];
          newrecord$9.itemCount = action[1];
          newrecord$9.showItem = action[0];
          return newrecord$9;
      case /* SettingScrollItems */4 :
          var newrecord$10 = Caml_obj.caml_obj_dup(state);
          newrecord$10.items = $$Array.append(state.items, action[1]);
          newrecord$10.showItem = action[0];
          return newrecord$10;
      case /* RefreshFormItem */5 :
          var status = action[1];
          var color = action[0];
          var newrecord$11 = Caml_obj.caml_obj_dup(state);
          newrecord$11.items = $$Array.mapi((function (i, item) {
                  if (state.formIndex !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.status = status;
                  newrecord.colors = color;
                  return newrecord;
                }), state.items);
          return newrecord$11;
      case /* ShowAnimationFull */6 :
          var newrecord$12 = Caml_obj.caml_obj_dup(state);
          newrecord$12.formitems = action[3];
          newrecord$12.index = 0;
          newrecord$12.formTitle = action[2];
          newrecord$12.formId = action[1];
          newrecord$12.formIndex = action[0];
          newrecord$12.showFull = !state.showFull;
          return newrecord$12;
      case /* ShowRecord */7 :
          var newrecord$13 = Caml_obj.caml_obj_dup(state);
          newrecord$13.showRecord = action[0];
          return newrecord$13;
      case /* ClickRecordItems */8 :
          var newrecord$14 = Caml_obj.caml_obj_dup(state);
          newrecord$14.recorditems = action[0];
          return newrecord$14;
      case /* ChangeRecord */9 :
          var newrecord$15 = Caml_obj.caml_obj_dup(state);
          newrecord$15.record = action[0];
          return newrecord$15;
      case /* ClickItemRecord */10 :
          var newrecord$16 = Caml_obj.caml_obj_dup(state);
          newrecord$16.showRecord = !state.showRecord;
          newrecord$16.record = action[0];
          return newrecord$16;
      case /* ShowMenu */11 :
          var index = action[0];
          var newrecord$17 = Caml_obj.caml_obj_dup(state);
          newrecord$17.filitems = $$Array.mapi((function (i, filitem) {
                  if (index === i) {
                    return {
                            index: filitem.index,
                            tile: filitem.tile,
                            filtValue: filitem.filtValue,
                            showMenu: !filitem.showMenu,
                            optionitems: filitem.optionitems
                          };
                  } else {
                    return filitem;
                  }
                }), state.filitems);
          return newrecord$17;
      case /* ClickMenu */12 :
          var index$1 = action[1];
          var value = action[0];
          var newrecord$18 = Caml_obj.caml_obj_dup(state);
          newrecord$18.filitems = $$Array.mapi((function (i, filitem) {
                  if (index$1 === i) {
                    return {
                            index: filitem.index,
                            tile: filitem.tile,
                            filtValue: value,
                            showMenu: !filitem.showMenu,
                            optionitems: filitem.optionitems
                          };
                  } else {
                    return filitem;
                  }
                }), state.filitems);
          return newrecord$18;
      case /* ClearItem */13 :
          var id = action[0];
          var newrecord$19 = Caml_obj.caml_obj_dup(state);
          newrecord$19.items = state.items.filter((function (item) {
                  return item.ids !== id;
                }));
          newrecord$19.itemCount = state.itemCount - 1 | 0;
          return newrecord$19;
      case /* ClickItemTabs */14 :
          var index$2 = action[1];
          var tindex = action[0];
          var newrecord$20 = Caml_obj.caml_obj_dup(state);
          newrecord$20.tabsitems = List.mapi((function (i, tabitem) {
                  return {
                          showTab: tindex === i,
                          tabImage: tabitem.tabImage
                        };
                }), state.tabsitems);
          newrecord$20.items = $$Array.mapi((function (i, item) {
                  if (index$2 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.indexs = tindex;
                  return newrecord;
                }), state.items);
          return newrecord$20;
      case /* ClickItemTab */15 :
          var index$3 = action[0];
          var newrecord$21 = Caml_obj.caml_obj_dup(state);
          newrecord$21.index = index$3;
          newrecord$21.tabitems = List.mapi((function (i, tabitem) {
                  return {
                          showTab: index$3 === i,
                          tabImage: tabitem.tabImage
                        };
                }), state.tabitems);
          return newrecord$21;
      case /* SettingPhotoItems */16 :
          var newrecord$22 = Caml_obj.caml_obj_dup(state);
          newrecord$22.photoitems = action[0];
          return newrecord$22;
      case /* SettingGrotoItems */17 :
          var newrecord$23 = Caml_obj.caml_obj_dup(state);
          newrecord$23.grotoitems = action[0];
          return newrecord$23;
      case /* SettingActionItems */18 :
          var newrecord$24 = Caml_obj.caml_obj_dup(state);
          newrecord$24.actionitems = $$Array.append(state.actionitems, action[0]);
          return newrecord$24;
      case /* ShowGroupMenu */19 :
          var index$4 = action[0];
          var newrecord$25 = Caml_obj.caml_obj_dup(state);
          newrecord$25.formitems = $$Array.mapi((function (i, item) {
                  if (index$4 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showGroupMenu = !item.showGroupMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$25;
      case /* ClickGroupMenu */20 :
          var index$5 = action[1];
          var value$1 = action[0];
          var newrecord$26 = Caml_obj.caml_obj_dup(state);
          newrecord$26.formitems = $$Array.mapi((function (i, item) {
                  if (index$5 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.postGroup = value$1;
                  newrecord.showGroupMenu = !item.showGroupMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$26;
      case /* ShowNameMenu */21 :
          var index$6 = action[0];
          var newrecord$27 = Caml_obj.caml_obj_dup(state);
          newrecord$27.formitems = $$Array.mapi((function (i, item) {
                  if (index$6 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showNameMenu = !item.showNameMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$27;
      case /* SettingItemName */22 :
          var index$7 = action[1];
          var items = action[0];
          var newrecord$28 = Caml_obj.caml_obj_dup(state);
          newrecord$28.formitems = $$Array.mapi((function (i, item) {
                  if (index$7 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.nameitems = items;
                  return newrecord;
                }), state.formitems);
          return newrecord$28;
      case /* ClickNameMenu */23 :
          var index$8 = action[1];
          var value$2 = action[0];
          var newrecord$29 = Caml_obj.caml_obj_dup(state);
          newrecord$29.formitems = $$Array.mapi((function (i, item) {
                  if (index$8 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.postName = value$2;
                  newrecord.showNameMenu = !item.showNameMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$29;
      case /* ShowCaseMenu */24 :
          var index$9 = action[0];
          var newrecord$30 = Caml_obj.caml_obj_dup(state);
          newrecord$30.formitems = $$Array.mapi((function (i, item) {
                  if (index$9 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showCaseMenu = !item.showCaseMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$30;
      case /* ClickCaseMenu */25 :
          var index$10 = action[1];
          var value$3 = action[0];
          var newrecord$31 = Caml_obj.caml_obj_dup(state);
          newrecord$31.formitems = $$Array.mapi((function (i, item) {
                  if (index$10 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.case = value$3;
                  newrecord.showCaseMenu = !item.showCaseMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$31;
      case /* ChangePage1 */26 :
          var index$11 = action[1];
          var value$4 = action[0];
          var newrecord$32 = Caml_obj.caml_obj_dup(state);
          newrecord$32.formitems = $$Array.mapi((function (i, item) {
                  if (index$11 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.homepage1 = value$4;
                  return newrecord;
                }), state.formitems);
          return newrecord$32;
      case /* ChangePnumber */27 :
          var index$12 = action[1];
          var value$5 = action[0];
          var newrecord$33 = Caml_obj.caml_obj_dup(state);
          newrecord$33.formitems = $$Array.mapi((function (i, item) {
                  if (index$12 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.pnumber = value$5;
                  return newrecord;
                }), state.formitems);
          return newrecord$33;
      case /* ChangeEndDate */28 :
          var index$13 = action[1];
          var value$6 = action[0];
          var newrecord$34 = Caml_obj.caml_obj_dup(state);
          newrecord$34.formitems = $$Array.mapi((function (i, item) {
                  if (index$13 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.endDate = value$6;
                  return newrecord;
                }), state.formitems);
          return newrecord$34;
      case /* ShowObjMenu */29 :
          var index$14 = action[0];
          var newrecord$35 = Caml_obj.caml_obj_dup(state);
          newrecord$35.formitems = $$Array.mapi((function (i, item) {
                  if (index$14 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showObjMenu = !item.showObjMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$35;
      case /* ClickObjMenu */30 :
          var index$15 = action[1];
          var value$7 = action[0];
          var newrecord$36 = Caml_obj.caml_obj_dup(state);
          newrecord$36.formitems = $$Array.mapi((function (i, item) {
                  if (index$15 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.obj = value$7;
                  newrecord.showObjMenu = !item.showObjMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$36;
      case /* ChangeMomo */31 :
          var index$16 = action[1];
          var value$8 = action[0];
          var newrecord$37 = Caml_obj.caml_obj_dup(state);
          newrecord$37.formitems = $$Array.mapi((function (i, item) {
                  if (index$16 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.homepageMomo = value$8;
                  return newrecord;
                }), state.formitems);
          return newrecord$37;
      case /* ChangeMb */32 :
          var index$17 = action[1];
          var value$9 = action[0];
          var newrecord$38 = Caml_obj.caml_obj_dup(state);
          newrecord$38.formitems = $$Array.mapi((function (i, item) {
                  if (index$17 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.mb = value$9;
                  return newrecord;
                }), state.formitems);
          return newrecord$38;
      case /* ChangeAmount */33 :
          var index$18 = action[1];
          var value$10 = action[0];
          var newrecord$39 = Caml_obj.caml_obj_dup(state);
          newrecord$39.formitems = $$Array.mapi((function (i, item) {
                  if (index$18 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.amount = value$10;
                  return newrecord;
                }), state.formitems);
          return newrecord$39;
      case /* ChangeSubject */34 :
          var index$19 = action[1];
          var value$11 = action[0];
          var newrecord$40 = Caml_obj.caml_obj_dup(state);
          newrecord$40.formitems = $$Array.mapi((function (i, item) {
                  if (index$19 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.subject = value$11;
                  return newrecord;
                }), state.formitems);
          return newrecord$40;
      case /* ChangeEcr */35 :
          var index$20 = action[1];
          var value$12 = action[0];
          var newrecord$41 = Caml_obj.caml_obj_dup(state);
          newrecord$41.formitems = $$Array.mapi((function (i, item) {
                  if (index$20 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.ecr = value$12;
                  return newrecord;
                }), state.formitems);
          return newrecord$41;
      case /* ChangeEcn */36 :
          var index$21 = action[1];
          var value$13 = action[0];
          var newrecord$42 = Caml_obj.caml_obj_dup(state);
          newrecord$42.formitems = $$Array.mapi((function (i, item) {
                  if (index$21 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.ecn = value$13;
                  return newrecord;
                }), state.formitems);
          return newrecord$42;
      case /* ChangeEn */37 :
          var index$22 = action[1];
          var value$14 = action[0];
          var newrecord$43 = Caml_obj.caml_obj_dup(state);
          newrecord$43.formitems = $$Array.mapi((function (i, item) {
                  if (index$22 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.en = value$14;
                  return newrecord;
                }), state.formitems);
          return newrecord$43;
      case /* ShowTypeMenu */38 :
          var index$23 = action[0];
          var newrecord$44 = Caml_obj.caml_obj_dup(state);
          newrecord$44.formitems = $$Array.mapi((function (i, item) {
                  if (index$23 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showTypeMenu = !item.showTypeMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$44;
      case /* ClickTypeMenu */39 :
          var index$24 = action[1];
          var value$15 = action[0];
          var newrecord$45 = Caml_obj.caml_obj_dup(state);
          newrecord$45.formitems = $$Array.mapi((function (i, item) {
                  if (index$24 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.type_ = value$15;
                  newrecord.showTypeMenu = !item.showTypeMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$45;
      case /* InputBody */40 :
          var index$25 = action[1];
          var value$16 = action[0];
          var newrecord$46 = Caml_obj.caml_obj_dup(state);
          newrecord$46.formitems = $$Array.mapi((function (i, item) {
                  if (index$25 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.body = value$16;
                  return newrecord;
                }), state.formitems);
          return newrecord$46;
      case /* ClearMailItem */41 :
          var index$26 = action[1];
          var mbId = action[0];
          var newrecord$47 = Caml_obj.caml_obj_dup(state);
          newrecord$47.formitems = $$Array.mapi((function (i, item) {
                  if (index$26 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.mailitems = item.mailitems.filter((function (mbitem) {
                          return mbitem.mbId !== mbId;
                        }));
                  return newrecord;
                }), state.formitems);
          return newrecord$47;
      case /* ShowMagroupMenu */42 :
          var index$27 = action[0];
          var newrecord$48 = Caml_obj.caml_obj_dup(state);
          newrecord$48.formitems = $$Array.mapi((function (i, item) {
                  if (index$27 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showMagroupMenu = !item.showMagroupMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$48;
      case /* ClickMagroupMenu */43 :
          var index$28 = action[1];
          var value$17 = action[0];
          var newrecord$49 = Caml_obj.caml_obj_dup(state);
          newrecord$49.formitems = $$Array.mapi((function (i, item) {
                  if (index$28 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.maGroup = value$17;
                  newrecord.showMagroupMenu = !item.showMagroupMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$49;
      case /* ShowManameMenu */44 :
          var index$29 = action[0];
          var newrecord$50 = Caml_obj.caml_obj_dup(state);
          newrecord$50.formitems = $$Array.mapi((function (i, item) {
                  if (index$29 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showManameMenu = !item.showManameMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$50;
      case /* SettingItemManame */45 :
          var index$30 = action[1];
          var items$1 = action[0];
          var newrecord$51 = Caml_obj.caml_obj_dup(state);
          newrecord$51.formitems = $$Array.mapi((function (i, item) {
                  if (index$30 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.manameitems = items$1;
                  return newrecord;
                }), state.formitems);
          return newrecord$51;
      case /* AddMailItem */46 :
          var index$31 = action[1];
          var value$18 = action[0];
          var newrecord$52 = Caml_obj.caml_obj_dup(state);
          newrecord$52.formitems = $$Array.mapi((function (i, item) {
                  if (index$31 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  var mbId = item.mailitems.length === 0 ? 0 : Caml_array.caml_array_get(item.mailitems, item.mailitems.length - 1 | 0).mbId + 1 | 0;
                  newrecord.mailitems = $$Array.append(item.mailitems, [{
                          mbId: mbId,
                          mbValue: value$18
                        }]);
                  return newrecord;
                }), state.formitems);
          return newrecord$52;
      case /* ClickManameMenu */47 :
          var index$32 = action[1];
          var value$19 = action[0];
          var newrecord$53 = Caml_obj.caml_obj_dup(state);
          newrecord$53.formitems = $$Array.mapi((function (i, item) {
                  if (index$32 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.maName = value$19;
                  newrecord.showManameMenu = !item.showManameMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$53;
      case /* ChangeAction1 */48 :
          var index$33 = action[1];
          var value$20 = action[0];
          var newrecord$54 = Caml_obj.caml_obj_dup(state);
          newrecord$54.formitems = $$Array.mapi((function (i, item) {
                  if (index$33 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.action1 = value$20;
                  return newrecord;
                }), state.formitems);
          return newrecord$54;
      case /* ClearWorkItem */49 :
          var index$34 = action[1];
          var mbId$1 = action[0];
          var newrecord$55 = Caml_obj.caml_obj_dup(state);
          newrecord$55.formitems = $$Array.mapi((function (i, item) {
                  if (index$34 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.workitems = item.workitems.filter((function (mbitem) {
                          return mbitem.mbId !== mbId$1;
                        }));
                  return newrecord;
                }), state.formitems);
          return newrecord$55;
      case /* ShowWork */50 :
          var index$35 = action[1];
          var showWork = action[0];
          var newrecord$56 = Caml_obj.caml_obj_dup(state);
          newrecord$56.formitems = $$Array.mapi((function (i, item) {
                  if (index$35 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showWork = showWork;
                  return newrecord;
                }), state.formitems);
          return newrecord$56;
      case /* SettingItemWork */51 :
          var index$36 = action[1];
          var items$2 = action[0];
          var newrecord$57 = Caml_obj.caml_obj_dup(state);
          newrecord$57.formitems = $$Array.mapi((function (i, item) {
                  if (index$36 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.worknoitems = items$2;
                  newrecord.showWork = true;
                  return newrecord;
                }), state.formitems);
          return newrecord$57;
      case /* ChangeWork */52 :
          var index$37 = action[1];
          var value$21 = action[0];
          var newrecord$58 = Caml_obj.caml_obj_dup(state);
          newrecord$58.formitems = $$Array.mapi((function (i, item) {
                  if (index$37 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.work = value$21;
                  return newrecord;
                }), state.formitems);
          return newrecord$58;
      case /* ClickItemWork */53 :
          var index$38 = action[0];
          var newrecord$59 = Caml_obj.caml_obj_dup(state);
          newrecord$59.formitems = $$Array.mapi((function (i, item) {
                  if (index$38 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showWork = !item.showWork;
                  newrecord.work = "";
                  return newrecord;
                }), state.formitems);
          return newrecord$59;
      case /* AddWorkItem */54 :
          var index$39 = action[1];
          var value$22 = action[0];
          var newrecord$60 = Caml_obj.caml_obj_dup(state);
          newrecord$60.formitems = $$Array.mapi((function (i, item) {
                  if (index$39 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  var mbId = item.workitems.length === 0 ? 0 : Caml_array.caml_array_get(item.workitems, item.workitems.length - 1 | 0).mbId + 1 | 0;
                  newrecord.workitems = $$Array.append(item.workitems, [{
                          mbId: mbId,
                          mbValue: value$22
                        }]);
                  return newrecord;
                }), state.formitems);
          return newrecord$60;
      case /* ChangeAction2 */55 :
          var index$40 = action[1];
          var value$23 = action[0];
          var newrecord$61 = Caml_obj.caml_obj_dup(state);
          newrecord$61.formitems = $$Array.mapi((function (i, item) {
                  if (index$40 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.action2 = value$23;
                  return newrecord;
                }), state.formitems);
          return newrecord$61;
      case /* ClearMbItem */56 :
          var index$41 = action[1];
          var mbId$2 = action[0];
          var newrecord$62 = Caml_obj.caml_obj_dup(state);
          newrecord$62.formitems = $$Array.mapi((function (i, item) {
                  if (index$41 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.mbitems = item.mbitems.filter((function (mbitem) {
                          return mbitem.mbId !== mbId$2;
                        }));
                  return newrecord;
                }), state.formitems);
          return newrecord$62;
      case /* SettingItemMtst */57 :
          var index$42 = action[1];
          var items$3 = action[0];
          var newrecord$63 = Caml_obj.caml_obj_dup(state);
          newrecord$63.formitems = $$Array.mapi((function (i, item) {
                  if (index$42 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.mtstitems = items$3;
                  return newrecord;
                }), state.formitems);
          return newrecord$63;
      case /* ShowMtstMenu */58 :
          var index$43 = action[0];
          var newrecord$64 = Caml_obj.caml_obj_dup(state);
          newrecord$64.formitems = $$Array.mapi((function (i, item) {
                  if (index$43 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showMtstMenu = !item.showMtstMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$64;
      case /* ClickMtstMenu */59 :
          var index$44 = action[1];
          var value$24 = action[0];
          var newrecord$65 = Caml_obj.caml_obj_dup(state);
          newrecord$65.formitems = $$Array.mapi((function (i, item) {
                  if (index$44 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.mtst = value$24;
                  newrecord.showMtstMenu = !item.showMtstMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$65;
      case /* ShowMbstMenu */60 :
          var index$45 = action[0];
          var newrecord$66 = Caml_obj.caml_obj_dup(state);
          newrecord$66.formitems = $$Array.mapi((function (i, item) {
                  if (index$45 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.showMbstMenu = !item.showMbstMenu;
                  return newrecord;
                }), state.formitems);
          return newrecord$66;
      case /* SettingItemModel */61 :
          var index$46 = action[1];
          var items$4 = action[0];
          var newrecord$67 = Caml_obj.caml_obj_dup(state);
          newrecord$67.formitems = $$Array.mapi((function (i, item) {
                  if (index$46 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.mbstitems = items$4;
                  return newrecord;
                }), state.formitems);
          return newrecord$67;
      case /* AddMbItem */62 :
          var index$47 = action[1];
          var value$25 = action[0];
          var newrecord$68 = Caml_obj.caml_obj_dup(state);
          newrecord$68.formitems = $$Array.mapi((function (i, item) {
                  if (index$47 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  var mbId = item.mbitems.length === 0 ? 0 : Caml_array.caml_array_get(item.mbitems, item.mbitems.length - 1 | 0).mbId + 1 | 0;
                  newrecord.mbitems = $$Array.append(item.mbitems, [{
                          mbId: mbId,
                          mbValue: value$25
                        }]);
                  return newrecord;
                }), state.formitems);
          return newrecord$68;
      case /* ClickMbstMenu */63 :
          var index$48 = action[1];
          var value$26 = action[0];
          var newrecord$69 = Caml_obj.caml_obj_dup(state);
          newrecord$69.formitems = $$Array.mapi((function (i, item) {
                  if (index$48 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.mbst = value$26;
                  return newrecord;
                }), state.formitems);
          return newrecord$69;
      case /* ChangeOldno */64 :
          var index$49 = action[1];
          var value$27 = action[0];
          var newrecord$70 = Caml_obj.caml_obj_dup(state);
          newrecord$70.formitems = $$Array.mapi((function (i, item) {
                  if (index$49 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.oldno = value$27;
                  return newrecord;
                }), state.formitems);
          return newrecord$70;
      case /* ChangeNewno */65 :
          var index$50 = action[1];
          var value$28 = action[0];
          var newrecord$71 = Caml_obj.caml_obj_dup(state);
          newrecord$71.formitems = $$Array.mapi((function (i, item) {
                  if (index$50 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.newno = value$28;
                  return newrecord;
                }), state.formitems);
          return newrecord$71;
      case /* ChangeSopno */66 :
          var index$51 = action[1];
          var value$29 = action[0];
          var newrecord$72 = Caml_obj.caml_obj_dup(state);
          newrecord$72.formitems = $$Array.mapi((function (i, item) {
                  if (index$51 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.sopno = value$29;
                  return newrecord;
                }), state.formitems);
          return newrecord$72;
      case /* ChangeAction3 */67 :
          var index$52 = action[1];
          var value$30 = action[0];
          var newrecord$73 = Caml_obj.caml_obj_dup(state);
          newrecord$73.formitems = $$Array.mapi((function (i, item) {
                  if (index$52 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.action3 = value$30;
                  return newrecord;
                }), state.formitems);
          return newrecord$73;
      case /* ChangeSipno */68 :
          var index$53 = action[1];
          var value$31 = action[0];
          var newrecord$74 = Caml_obj.caml_obj_dup(state);
          newrecord$74.formitems = $$Array.mapi((function (i, item) {
                  if (index$53 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.sipno = value$31;
                  return newrecord;
                }), state.formitems);
          return newrecord$74;
      case /* ChangeAction4 */69 :
          var index$54 = action[1];
          var value$32 = action[0];
          var newrecord$75 = Caml_obj.caml_obj_dup(state);
          newrecord$75.formitems = $$Array.mapi((function (i, item) {
                  if (index$54 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.action4 = value$32;
                  return newrecord;
                }), state.formitems);
          return newrecord$75;
      case /* ChangeAction5 */70 :
          var index$55 = action[1];
          var value$33 = action[0];
          var newrecord$76 = Caml_obj.caml_obj_dup(state);
          newrecord$76.formitems = $$Array.mapi((function (i, item) {
                  if (index$55 !== i) {
                    return item;
                  }
                  var newrecord = Caml_obj.caml_obj_dup(item);
                  newrecord.formModify = true;
                  newrecord.action5 = value$33;
                  return newrecord;
                }), state.formitems);
          return newrecord$76;
      case /* ShowDrop */71 :
          var newrecord$77 = Caml_obj.caml_obj_dup(state);
          newrecord$77.showDrop = action[0];
          return newrecord$77;
      case /* AddPhotoItem */72 :
          var newrecord$78 = Caml_obj.caml_obj_dup(state);
          newrecord$78.photoitems = $$Array.append(state.photoitems, newphotoitem(state.photoitems.length + 1 | 0, action[0], action[1], action[2], action[3], action[4], action[5], action[6], action[7], action[8]));
          return newrecord$78;
      case /* ActionPhotoItem */73 :
          var index$56 = action[0];
          var newrecord$79 = Caml_obj.caml_obj_dup(state);
          newrecord$79.photoitems = $$Array.mapi((function (i, photoitem) {
                  if (index$56 === i) {
                    return {
                            photoId: photoitem.photoId,
                            photoImage: photoitem.photoImage,
                            photoVideo: photoitem.photoVideo,
                            photoAudio: photoitem.photoAudio,
                            photoSrc: photoitem.photoSrc,
                            photoPath: photoitem.photoPath,
                            photoOriginal: photoitem.photoOriginal,
                            photoEncryption: photoitem.photoEncryption,
                            photoExtension: photoitem.photoExtension,
                            photoDate: photoitem.photoDate,
                            photoInsert: photoitem.photoInsert,
                            showDelete: photoitem.showDelete,
                            photoDelete: !photoitem.photoDelete
                          };
                  } else {
                    return photoitem;
                  }
                }), state.photoitems);
          return newrecord$79;
      case /* AddGrotoItem */74 :
          var newrecord$80 = Caml_obj.caml_obj_dup(state);
          newrecord$80.grotoitems = $$Array.append(state.grotoitems, newgrotoitem(state.grotoitems.length + 1 | 0, action[0], action[1], action[2], action[3], action[4], action[5], action[6], action[7], action[8], action[9]));
          return newrecord$80;
      case /* ActionGrotoItem */75 :
          var index$57 = action[0];
          var newrecord$81 = Caml_obj.caml_obj_dup(state);
          newrecord$81.grotoitems = $$Array.mapi((function (i, grotoitem) {
                  if (index$57 === i) {
                    return {
                            grotoId: grotoitem.grotoId,
                            grotoImage: grotoitem.grotoImage,
                            grotoVideo: grotoitem.grotoVideo,
                            grotoAudio: grotoitem.grotoAudio,
                            grotoSrc: grotoitem.grotoSrc,
                            grotoPath: grotoitem.grotoPath,
                            grotoOriginal: grotoitem.grotoOriginal,
                            grotoEncryption: grotoitem.grotoEncryption,
                            grotoExtension: grotoitem.grotoExtension,
                            grotoName: grotoitem.grotoName,
                            grotoDate: grotoitem.grotoDate,
                            grotoInsert: grotoitem.grotoInsert,
                            showDelete: grotoitem.showDelete,
                            grotoDelete: !grotoitem.grotoDelete
                          };
                  } else {
                    return grotoitem;
                  }
                }), state.grotoitems);
          return newrecord$81;
      case /* SettingFileItem */76 :
          var newrecord$82 = Caml_obj.caml_obj_dup(state);
          newrecord$82.fileSrc = action[3];
          newrecord$82.filePath = action[2];
          newrecord$82.fileTile = action[1];
          newrecord$82.fileId = action[0];
          newrecord$82.showFileFull = !state.showFileFull;
          newrecord$82.showFull = !state.showFull;
          return newrecord$82;
      case /* ActionSnackBar */77 :
          var newrecord$83 = Caml_obj.caml_obj_dup(state);
          newrecord$83.youtubeText = action[0];
          newrecord$83.showYoutube = action[1];
          return newrecord$83;
      
    }
  }
}

var initialState_recorditems = [];

var initialState_filitems = [];

var initialState_items = [];

var initialState_tabsitems = /* :: */[
  {
    showTab: true,
    tabImage: Icons$BtsCore.descriptionBlack
  },
  /* :: */[
    {
      showTab: false,
      tabImage: Icons$BtsCore.collectionsBlack
    },
    /* [] */0
  ]
];

var initialState_tabitems = /* :: */[
  {
    showTab: true,
    tabImage: Icons$BtsCore.descriptionBlack
  },
  /* :: */[
    {
      showTab: false,
      tabImage: Icons$BtsCore.collectionsBlack
    },
    /* :: */[
      {
        showTab: false,
        tabImage: Icons$BtsCore.groupBlack
      },
      /* :: */[
        {
          showTab: false,
          tabImage: Icons$BtsCore.listBlack
        },
        /* [] */0
      ]
    ]
  ]
];

var initialState_formitems = [];

var initialState_photoitems = [];

var initialState_grotoitems = [];

var initialState_actionitems = [];

var initialState = {
  formLoad: false,
  formWidth: 0,
  formHeight: 0,
  showProgress: true,
  error: false,
  insert: false,
  update: false,
  delete: false,
  export: false,
  record: "",
  showRecord: false,
  recorditems: initialState_recorditems,
  filitems: initialState_filitems,
  showItem: false,
  itemCount: 0,
  items: initialState_items,
  tabsitems: initialState_tabsitems,
  showFull: false,
  formIndex: 0,
  formId: "",
  formTitle: "",
  tabitems: initialState_tabitems,
  index: 0,
  formitems: initialState_formitems,
  showDrop: false,
  photoitems: initialState_photoitems,
  grotoitems: initialState_grotoitems,
  actionitems: initialState_actionitems,
  showFileFull: false,
  fileId: "",
  fileTile: "",
  filePath: "",
  fileSrc: "",
  showYoutube: false,
  youtubeText: ""
};

function Inside(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var fileRef = React.useRef(null);
  var textRef = React.useRef(null);
  var barShowRestoreAction = function (youtubeText) {
    Curry._1(dispatch, /* ActionSnackBar */Block.__(77, [
            youtubeText,
            true
          ]));
    setTimeout((function (param) {
            return Curry._1(dispatch, /* ActionSnackBar */Block.__(77, [
                          "",
                          false
                        ]));
          }), 5000);
    
  };
  var searchAJax = function (param) {
    Axiosapi$BtsCore.Inside.search(Data$BtsCore.otherData(localStorage.getItem("newid"), state.items.length)).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* SettingFormItems */Block.__(3, [
                        response.data.showItem,
                        response.data.itemCount,
                        response.data.items
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              } else {
                Curry._1(dispatch, /* SettingError */0);
                barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var filterAJax = function (param) {
    Axiosapi$BtsCore.Inside.filter(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
              return Promise.resolve((Curry._1(dispatch, /* SettingFilItems */Block.__(2, [response.data.items])), searchAJax(undefined)));
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var permissAJax = function (param) {
    Axiosapi$BtsCore.Form.permiss(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
              return Promise.resolve((Curry._1(dispatch, /* ActionPermissItems */Block.__(1, [
                                  response.data.insert,
                                  response.data.update,
                                  response.data.delete,
                                  response.data.export
                                ])), filterAJax(undefined)));
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  React.useEffect((function () {
          var match = state.formLoad;
          if (match) {
            return (function (param) {
                      console.log("action");
                      
                    });
          }
          Curry._1(dispatch, /* SettingFormLoad */1);
          Curry._1(dispatch, /* SettingFormWidth */Block.__(0, [
                  window.innerWidth,
                  window.innerHeight
                ]));
          var match$1 = ObjectFormat$BtsCore.checkObjects(sessionStorage.getItem("form"));
          var testId;
          var exit = 0;
          switch (match$1) {
            case "deleteSuccess" :
            case "saveSuccess" :
            case "sendSuccess" :
                exit = 1;
                break;
            default:
              console.log("action");
              testId = undefined;
          }
          if (exit === 1) {
            barShowRestoreAction(Status$BtsCore.statusModule(ObjectFormat$BtsCore.checkObjects(sessionStorage.getItem("form"))));
            sessionStorage.setItem("form", "");
            testId = undefined;
          }
          var timeId = permissAJax(undefined);
          return (function (param) {
                    return timeId;
                  });
        }));
  var handleResize = function ($$event) {
    return Curry._1(dispatch, /* SettingFormWidth */Block.__(0, [
                  $$event.currentTarget.innerWidth,
                  $$event.currentTarget.innerHeight
                ]));
  };
  React.useEffect((function () {
          window.addEventListener("resize", handleResize, true);
          return (function (param) {
                    
                  });
        }), ([]));
  var clickScrollBar = React.useCallback((function (param) {
          Curry._1(dispatch, /* ActionShowProgress */2);
          var length = state.items.length;
          Axiosapi$BtsCore.Inside.scroll(Data$BtsCore.sScroData(state.filitems.filter((function (filitem) {
                              return filitem.filtValue !== "";
                            })), state.record, length, localStorage.getItem("newid"))).then((function (response) {
                    return Promise.resolve((Curry._1(dispatch, /* SettingScrollItems */Block.__(4, [
                                        response.data.showItem,
                                        response.data.items
                                      ])), Curry._1(dispatch, /* ActionShowProgress */2)));
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var clickRecord = React.useCallback((function (param) {
          Curry._1(dispatch, /* ShowRecord */Block.__(7, [true]));
          Axiosapi$BtsCore.Inside.sRecord(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
                    return Promise.resolve(Curry._1(dispatch, /* ClickRecordItems */Block.__(8, [response.data.items])));
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var showRecord = React.useCallback((function (param) {
          return Curry._1(dispatch, /* ShowRecord */Block.__(7, [false]));
        }));
  var changeRecord = React.useCallback((function (value) {
          return Curry._1(dispatch, /* ChangeRecord */Block.__(9, [value]));
        }));
  var sFiltCordAJax = function (record) {
    Axiosapi$BtsCore.Inside.sFiltCord(Data$BtsCore.otherData(localStorage.getItem("newid"), record)).then((function (response) {
              Curry._1(dispatch, /* ClearFilterItems */3);
              var match = response.data.status;
              var tmp = match === "istrue" ? Curry._1(dispatch, /* SettingFormItems */Block.__(3, [
                        response.data.showItem,
                        response.data.itemCount,
                        response.data.items
                      ])) : barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var keydownRecord = React.useCallback((function (keyCode) {
          if (keyCode === 13) {
            Curry._1(dispatch, /* ShowRecord */Block.__(7, [false]));
            return sFiltCordAJax(state.record);
          }
          
        }));
  var clickItemRecord = React.useCallback((function (value) {
          Curry._1(dispatch, /* ClickItemRecord */Block.__(10, [value]));
          return sFiltCordAJax(value);
        }));
  var showMenu = React.useCallback((function (index) {
          return Curry._1(dispatch, /* ShowMenu */Block.__(11, [index]));
        }));
  var clickMenu = React.useCallback((function (value) {
          return (function (index) {
              Curry._1(dispatch, /* ClickMenu */Block.__(12, [
                      value,
                      index
                    ]));
              Axiosapi$BtsCore.Inside.sFilter(Data$BtsCore.sFiltData(state.filitems.filter((function (filitem) {
                                  return filitem.filtValue !== "";
                                })), index, value, state.record, localStorage.getItem("newid"))).then((function (response) {
                        var match = response.data.status;
                        var tmp;
                        if (match === "istrue") {
                          tmp = Curry._1(dispatch, /* SettingFormItems */Block.__(3, [
                                  response.data.showItem,
                                  response.data.itemCount,
                                  response.data.items
                                ]));
                        } else {
                          barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        }
                        return Promise.resolve(tmp);
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var setTextRef = function (element,value){ element.current.innerHTML = value; };
  var clickFormBoard = React.useCallback((function (i) {
          return (function (id) {
              Curry._1(dispatch, /* ActionShowProgress */2);
              Axiosapi$BtsCore.Inside.sItem(Data$BtsCore.dFormData(id, localStorage.getItem("newid"))).then((function (response) {
                        var match = response.data.status;
                        var tmp;
                        if (match === "istrue") {
                          Curry._1(dispatch, /* ShowAnimationFull */Block.__(6, [
                                  i,
                                  id,
                                  response.data.tile,
                                  response.data.items
                                ]));
                          setTextRef(textRef, Caml_array.caml_array_get(response.data.items, 0).body);
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        } else {
                          barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        }
                        return Promise.resolve(tmp);
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var clearItem = React.useCallback((function (id) {
          return (function ($$event) {
              $$event.preventDefault();
              $$event.stopPropagation();
              Curry._1(dispatch, /* ActionShowProgress */2);
              Axiosapi$BtsCore.Inside.clear(Data$BtsCore.dFormData(id, localStorage.getItem("newid"))).then((function (response) {
                        var match = response.data.status;
                        var tmp;
                        if (match === "istrue") {
                          Curry._1(dispatch, /* ClearItem */Block.__(13, [id]));
                          barShowRestoreAction(Status$BtsCore.statusModule("deleteSuccess"));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        } else {
                          barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        }
                        return Promise.resolve(tmp);
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var clickItemTabs = React.useCallback((function (ti) {
          return (function (i, $$event) {
              $$event.preventDefault();
              $$event.stopPropagation();
              return Curry._1(dispatch, /* ClickItemTabs */Block.__(14, [
                            ti,
                            i
                          ]));
            });
        }));
  var clickItemTab = React.useCallback((function (i) {
          Curry._1(dispatch, /* ClickItemTab */Block.__(15, [i]));
          if (i === 1) {
            Axiosapi$BtsCore.Inside.sFile(Data$BtsCore.dFormData(state.formId, localStorage.getItem("newid"))).then((function (response) {
                      return Promise.resolve(Curry._1(dispatch, /* SettingPhotoItems */Block.__(16, [response.data.items])));
                    })).catch((function (error) {
                    return Promise.resolve((console.log(error), undefined));
                  }));
            return ;
          } else if (i === 2) {
            Axiosapi$BtsCore.Inside.sGroto(Data$BtsCore.dFormData(state.formId, localStorage.getItem("newid"))).then((function (response) {
                      return Promise.resolve(Curry._1(dispatch, /* SettingGrotoItems */Block.__(17, [response.data.items])));
                    })).catch((function (error) {
                    return Promise.resolve((console.log(error), undefined));
                  }));
            return ;
          } else if (i === 3) {
            Axiosapi$BtsCore.Inside.sAction(Data$BtsCore.sRowsData(state.formId, state.actionitems.length, localStorage.getItem("newid"))).then((function (response) {
                      return Promise.resolve(Curry._1(dispatch, /* SettingActionItems */Block.__(18, [response.data.items])));
                    })).catch((function (error) {
                    return Promise.resolve((console.log(error), undefined));
                  }));
            return ;
          } else {
            return ;
          }
        }));
  var insertForm = React.useCallback((function (param) {
          Curry._1(dispatch, /* ActionShowProgress */2);
          Axiosapi$BtsCore.Inside.insert(Data$BtsCore.iSirmsData(state.formId, state.formTitle, state.formitems.filter((function (formitem) {
                              return formitem.formModify === true;
                            })), state.photoitems.filter((function (photoitem) {
                              if (photoitem.photoInsert === true) {
                                return true;
                              } else {
                                return photoitem.photoDelete === true;
                              }
                            })), state.grotoitems.filter((function (grotoitem) {
                              if (grotoitem.grotoInsert === true) {
                                return true;
                              } else {
                                return grotoitem.grotoDelete === true;
                              }
                            })), localStorage.getItem("newid"))).then((function (response) {
                    var match = response.data.status;
                    var tmp;
                    if (match === "istrue") {
                      Curry._1(dispatch, /* RefreshFormItem */Block.__(5, [
                              "rgba(255,0,0,0.8)",
                              "文件建立中"
                            ]));
                      Curry._1(dispatch, /* CloseAnimationFull */4);
                      barShowRestoreAction(Status$BtsCore.statusModule("saveSuccess"));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                    } else {
                      barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                    }
                    return Promise.resolve(tmp);
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var sendForm = React.useCallback((function (param) {
          Curry._1(dispatch, /* ActionShowProgress */2);
          Axiosapi$BtsCore.Inside.send(Data$BtsCore.iSirmsData(state.formId, state.formTitle, state.formitems.filter((function (formitem) {
                              return formitem.formModify === true;
                            })), state.photoitems.filter((function (photoitem) {
                              if (photoitem.photoInsert === true) {
                                return true;
                              } else {
                                return photoitem.photoDelete === true;
                              }
                            })), state.grotoitems.filter((function (grotoitem) {
                              if (grotoitem.grotoInsert === true) {
                                return true;
                              } else {
                                return grotoitem.grotoDelete === true;
                              }
                            })), localStorage.getItem("newid"))).then((function (response) {
                    var match = response.data.status;
                    var tmp;
                    if (match === "istrue") {
                      Curry._1(dispatch, /* RefreshFormItem */Block.__(5, [
                              "#E36C0A",
                              "等待工程處簽核"
                            ]));
                      Curry._1(dispatch, /* CloseAnimationFull */4);
                      barShowRestoreAction(Status$BtsCore.statusModule("sendSuccess"));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                    } else {
                      barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                    }
                    return Promise.resolve(tmp);
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var showGroupMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowGroupMenu */Block.__(19, [i]));
        }));
  var clickGroupMenu = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickGroupMenu */Block.__(20, [
                      value,
                      i
                    ]));
              Axiosapi$BtsCore.CreateF.sGroup(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                        return Promise.resolve(Curry._1(dispatch, /* SettingItemName */Block.__(22, [
                                          response.data.items,
                                          i
                                        ])));
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var showNameMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowNameMenu */Block.__(21, [i]));
        }));
  var clickNameMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickNameMenu */Block.__(23, [
                            value,
                            i
                          ]));
            });
        }));
  var showCaseMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowCaseMenu */Block.__(24, [i]));
        }));
  var clickCaseMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickCaseMenu */Block.__(25, [
                            value,
                            i
                          ]));
            });
        }));
  var changePage1 = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangePage1 */Block.__(26, [
                            value,
                            i
                          ]));
            });
        }));
  var changePnumber = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangePnumber */Block.__(27, [
                            value,
                            i
                          ]));
            });
        }));
  var changeEndDate = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeEndDate */Block.__(28, [
                            value,
                            i
                          ]));
            });
        }));
  var showObjMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowObjMenu */Block.__(29, [i]));
        }));
  var clickObjMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickObjMenu */Block.__(30, [
                            value,
                            i
                          ]));
            });
        }));
  var changeMomo = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeMomo */Block.__(31, [
                            value,
                            i
                          ]));
            });
        }));
  var changeMb = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeMb */Block.__(32, [
                            value,
                            i
                          ]));
            });
        }));
  var changeAmount = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeAmount */Block.__(33, [
                            value,
                            i
                          ]));
            });
        }));
  var changeSubject = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeSubject */Block.__(34, [
                            value,
                            i
                          ]));
            });
        }));
  var changeEcr = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeEcr */Block.__(35, [
                            value,
                            i
                          ]));
            });
        }));
  var keydownEcr = React.useCallback((function (keyCode) {
          return (function (value, i) {
              if (keyCode === 13) {
                Axiosapi$BtsCore.CreateF.sEcrno(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                          return Promise.resolve(Curry._1(dispatch, /* SettingItemMtst */Block.__(57, [
                                            response.data.items,
                                            i
                                          ])));
                        })).catch((function (error) {
                        return Promise.resolve((console.log(error), undefined));
                      }));
                return ;
              }
              
            });
        }));
  var showXpsFile = React.useCallback((function (value) {
          Curry._1(dispatch, /* ActionShowProgress */2);
          Axiosapi$BtsCore.CreateF.sXps(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                    var match = response.data.status;
                    var tmp;
                    if (match === "istrue") {
                      Curry._1(dispatch, /* SettingFileItem */Block.__(76, [
                              response.data.formId,
                              response.data.tile,
                              Caml_array.caml_array_get(response.data.items, 0).filePath,
                              Caml_array.caml_array_get(response.data.items, 0).fileSrc
                            ]));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                    } else {
                      barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                    }
                    return Promise.resolve(tmp);
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var changeEcn = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeEcn */Block.__(36, [
                            value,
                            i
                          ]));
            });
        }));
  var changeEn = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeEn */Block.__(37, [
                            value,
                            i
                          ]));
            });
        }));
  var showTypeMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowTypeMenu */Block.__(38, [i]));
        }));
  var clickTypeMenu = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickTypeMenu */Block.__(39, [
                      value,
                      i
                    ]));
              Axiosapi$BtsCore.CreateF.sType(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                        var match = response.data.status;
                        var tmp;
                        if (match === "istrue") {
                          Curry._1(dispatch, /* InputBody */Block.__(40, [
                                  response.data.value,
                                  i
                                ]));
                          tmp = setTextRef(textRef, response.data.value);
                        } else {
                          tmp = barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                        }
                        return Promise.resolve(tmp);
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var inputBody = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* InputBody */Block.__(40, [
                            value,
                            i
                          ]));
            });
        }));
  var clearMailItem = React.useCallback((function (mbId) {
          return (function (i) {
              return Curry._1(dispatch, /* ClearMailItem */Block.__(41, [
                            mbId,
                            i
                          ]));
            });
        }));
  var showMagroupMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowMagroupMenu */Block.__(42, [i]));
        }));
  var clickMagroupMenu = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickMagroupMenu */Block.__(43, [
                      value,
                      i
                    ]));
              Axiosapi$BtsCore.CreateF.sGroup(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                        return Promise.resolve(Curry._1(dispatch, /* SettingItemManame */Block.__(45, [
                                          response.data.items,
                                          i
                                        ])));
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var showManameMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowManameMenu */Block.__(44, [i]));
        }));
  var clickManameMenu = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickManameMenu */Block.__(47, [
                      value,
                      i
                    ]));
              return Curry._1(dispatch, /* AddMailItem */Block.__(46, [
                            value,
                            i
                          ]));
            });
        }));
  var changeAction1 = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeAction1 */Block.__(48, [
                            value,
                            i
                          ]));
            });
        }));
  var clearWorkItem = React.useCallback((function (mbId) {
          return (function (i) {
              return Curry._1(dispatch, /* ClearWorkItem */Block.__(49, [
                            mbId,
                            i
                          ]));
            });
        }));
  var changeWork = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ChangeWork */Block.__(52, [
                      value,
                      i
                    ]));
              Axiosapi$BtsCore.CreateF.sWorkno(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                        return Promise.resolve(Curry._1(dispatch, /* SettingItemWork */Block.__(51, [
                                          response.data.items,
                                          i
                                        ])));
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var keydownWork = React.useCallback((function (keyCode) {
          return (function (value, i) {
              if (keyCode === 13) {
                Axiosapi$BtsCore.CreateF.cWorkno(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                          var match = response.data.status;
                          var tmp;
                          if (match === "istrue") {
                            Curry._1(dispatch, /* ClickItemWork */Block.__(53, [i]));
                            tmp = Curry._1(dispatch, /* AddWorkItem */Block.__(54, [
                                    value,
                                    i
                                  ]));
                          } else {
                            tmp = barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                          }
                          return Promise.resolve(tmp);
                        })).catch((function (error) {
                        return Promise.resolve((console.log(error), undefined));
                      }));
                return ;
              }
              
            });
        }));
  var showWork = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowWork */Block.__(50, [
                        false,
                        i
                      ]));
        }));
  var clickItemWork = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickItemWork */Block.__(53, [i]));
              return Curry._1(dispatch, /* AddWorkItem */Block.__(54, [
                            value,
                            i
                          ]));
            });
        }));
  var changeAction2 = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeAction2 */Block.__(55, [
                            value,
                            i
                          ]));
            });
        }));
  var clearMbItem = React.useCallback((function (mbId) {
          return (function (i) {
              return Curry._1(dispatch, /* ClearMbItem */Block.__(56, [
                            mbId,
                            i
                          ]));
            });
        }));
  var showMtstMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowMtstMenu */Block.__(58, [i]));
        }));
  var clickMtstMenu = React.useCallback((function (ecr) {
          return (function (value, i) {
              Curry._1(dispatch, /* ClickMtstMenu */Block.__(59, [
                      value,
                      i
                    ]));
              Axiosapi$BtsCore.CreateF.sModel(Data$BtsCore.sRowsData(ecr, value, localStorage.getItem("newid"))).then((function (response) {
                        return Promise.resolve(Curry._1(dispatch, /* SettingItemModel */Block.__(61, [
                                          response.data.items,
                                          i
                                        ])));
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var showMbstMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowMbstMenu */Block.__(60, [i]));
        }));
  var clickMbstMenu = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickMbstMenu */Block.__(63, [
                      value,
                      i
                    ]));
              return Curry._1(dispatch, /* AddMbItem */Block.__(62, [
                            value,
                            i
                          ]));
            });
        }));
  var changeOldno = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeOldno */Block.__(64, [
                            value,
                            i
                          ]));
            });
        }));
  var changeNewno = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeNewno */Block.__(65, [
                            value,
                            i
                          ]));
            });
        }));
  var changeSopno = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeSopno */Block.__(66, [
                            value,
                            i
                          ]));
            });
        }));
  var changeAction3 = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeAction3 */Block.__(67, [
                            value,
                            i
                          ]));
            });
        }));
  var changeSipno = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeSipno */Block.__(68, [
                            value,
                            i
                          ]));
            });
        }));
  var changeAction4 = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeAction4 */Block.__(69, [
                            value,
                            i
                          ]));
            });
        }));
  var changeAction5 = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeAction5 */Block.__(70, [
                            value,
                            i
                          ]));
            });
        }));
  var dragOverFile = React.useCallback((function ($$event) {
          $$event.preventDefault();
          $$event.stopPropagation();
          return Curry._1(dispatch, /* ShowDrop */Block.__(71, [true]));
        }));
  var dragLeaveFile = React.useCallback((function ($$event) {
          $$event.preventDefault();
          $$event.stopPropagation();
          return Curry._1(dispatch, /* ShowDrop */Block.__(71, [false]));
        }));
  var uploadAJax = function (files) {
    var formData = new FormData();
    formData.append("file", files);
    Axiosapi$BtsCore.Files.upload(formData).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* AddPhotoItem */Block.__(72, [
                        response.data.images,
                        response.data.videos,
                        response.data.audios,
                        response.data.src,
                        response.data.imagePath,
                        response.data.original,
                        response.data.encryption,
                        response.data.extension,
                        response.data.date
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              } else {
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var dropFile = React.useCallback((function ($$event) {
          return (function (value) {
              $$event.preventDefault();
              $$event.stopPropagation();
              Curry._1(dispatch, /* ActionShowProgress */2);
              Curry._1(dispatch, /* ShowDrop */Block.__(71, [false]));
              return uploadAJax(value);
            });
        }));
  var chooseFile = React.useCallback((function (param) {
          var el = fileRef.current;
          if (!(el == null)) {
            el.click();
            return ;
          }
          
        }));
  var changeFile = React.useCallback((function (value) {
          Curry._1(dispatch, /* ActionShowProgress */2);
          return uploadAJax(value);
        }));
  var actionPhoto = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ActionPhotoItem */Block.__(73, [i]));
        }));
  var cGrotoAJax = function (images, videos, audios, src, imagePath, original, encryption, extension, date) {
    Axiosapi$BtsCore.CreateF.cGroto(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* AddGrotoItem */Block.__(74, [
                        images,
                        videos,
                        audios,
                        src,
                        imagePath,
                        original,
                        encryption,
                        extension,
                        date,
                        response.data.newid
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              } else {
                tmp = barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var upGrotoAJax = function (files) {
    var formData = new FormData();
    formData.append("file", files);
    Axiosapi$BtsCore.Files.upload(formData).then((function (response) {
              var match = response.data.status;
              var tmp = match === "istrue" ? cGrotoAJax(response.data.images, response.data.videos, response.data.audios, response.data.src, response.data.imagePath, response.data.original, response.data.encryption, response.data.extension, response.data.date) : Curry._1(dispatch, /* ActionShowProgress */2);
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var dropGrotoFile = React.useCallback((function ($$event) {
          return (function (value) {
              $$event.preventDefault();
              $$event.stopPropagation();
              Curry._1(dispatch, /* ActionShowProgress */2);
              Curry._1(dispatch, /* ShowDrop */Block.__(71, [false]));
              return upGrotoAJax(value);
            });
        }));
  var changeGrotoFile = React.useCallback((function (value) {
          Curry._1(dispatch, /* ActionShowProgress */2);
          return upGrotoAJax(value);
        }));
  var actionGroto = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ActionGrotoItem */Block.__(75, [i]));
        }));
  var closeAnimationFull = React.useCallback((function (param) {
          return Curry._1(dispatch, /* CloseAnimationFull */4);
        }));
  var closeFileFull = React.useCallback((function (param) {
          Curry._1(dispatch, /* CloseAnimationFull */4);
          return Curry._1(dispatch, /* CloseFileFull */5);
        }));
  var downloadFile = React.useCallback((function (param) {
          Curry._1(dispatch, /* ActionShowProgress */2);
          Axiosapi$BtsCore.CreateF.download(Data$BtsCore.otherData(localStorage.getItem("newid"), state.fileId)).then((function (response) {
                    var match = response.data.status;
                    var tmp;
                    if (match === "istrue") {
                      window.location.assign(response.data.value);
                      tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                    } else {
                      barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                    }
                    return Promise.resolve(tmp);
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var match$1 = state.index;
  var tmp;
  switch (match$1) {
    case 0 :
        tmp = $$Array.mapi((function (i, item) {
                return React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(GridContainer$BtsCore.make, {
                                      direction: "row",
                                      justify: "center",
                                      alignItem: "center",
                                      children: null
                                    }, React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: null
                                        }), React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                top: "12",
                                                right: "0",
                                                left: "0",
                                                labelColor: "rgba(255,0,0,0.8)",
                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                borderColor: "rgba(0,0,0,0.2)",
                                                value: item.snno,
                                                disabled: true,
                                                children: "SN編號"
                                              })
                                        }))
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(Typography$BtsCore.make, {
                                      variant: "subheading",
                                      color: "rgba(0,0,0,0.6)",
                                      fontWeight: "bolder",
                                      children: "【工廠內部通告】"
                                    })
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(GridContainer$BtsCore.make, {
                                      direction: "row",
                                      justify: "center",
                                      alignItem: "center",
                                      children: null
                                    }, React.createElement(GridItem$BtsCore.make, {
                                          top: "20",
                                          right: "0",
                                          bottom: "6",
                                          left: "6",
                                          xs: "auto",
                                          children: React.createElement(Typography$BtsCore.make, {
                                                variant: "subheading",
                                                fontWeight: "bolder",
                                                children: item.postdate
                                              })
                                        }), React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: null
                                        }, React.createElement(SelectStandard$BtsCore.make, {
                                              top: "12",
                                              right: "0",
                                              left: "0",
                                              labelColor: "rgba(255,0,0,0.8)",
                                              tile: "發文部門",
                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                              downBorderColor: "rgba(255,0,0,0.6)",
                                              borderColor: "rgba(0,0,0,0.2)",
                                              value: item.postGroup,
                                              disabled: state.showProgress || !item.formSend,
                                              onClick: (function (param) {
                                                  return Curry._1(showGroupMenu, i);
                                                }),
                                              children: /* tuple */[
                                                item.showGroupMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                        top: "0",
                                                        transform: "translate(0, 0)",
                                                        maxHeight: "280",
                                                        minHeight: "0",
                                                        topLeft: "12",
                                                        topRight: "12",
                                                        bottomRight: "12",
                                                        bottomLeft: "12",
                                                        paddingRight: "8",
                                                        paddingLeft: "8",
                                                        children: $$Array.map((function (groupitem) {
                                                                return React.createElement(MenuItem$BtsCore.make, {
                                                                            top: "0",
                                                                            right: "8",
                                                                            bottom: "0",
                                                                            left: "8",
                                                                            disablePadding: groupitem.optionPadding,
                                                                            topLeft: "12",
                                                                            topRight: "12",
                                                                            bottomRight: "12",
                                                                            bottomLeft: "12",
                                                                            onClick: (function (param) {
                                                                                return Curry._2(clickGroupMenu, groupitem.value, i);
                                                                              }),
                                                                            children: groupitem.value
                                                                          });
                                                              }), item.groupitems)
                                                      }) : null,
                                                React.createElement(IconGeneral$BtsCore.make, {
                                                      animation: IconAnimation$BtsCore.topDownRorate(item.showGroupMenu),
                                                      src: Icons$BtsCore.arrowDownBlack
                                                    })
                                              ]
                                            }), React.createElement(BackgroundBoard$BtsCore.make, {
                                              showBackground: item.showGroupMenu,
                                              backgroundColor: "transparent",
                                              onClick: (function (param) {
                                                  return Curry._1(showGroupMenu, i);
                                                })
                                            })), React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: null
                                        }, React.createElement(SelectStandard$BtsCore.make, {
                                              top: "12",
                                              right: "0",
                                              left: "0",
                                              labelColor: "rgba(255,0,0,0.8)",
                                              tile: "發文者",
                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                              downBorderColor: "rgba(255,0,0,0.6)",
                                              borderColor: "rgba(0,0,0,0.2)",
                                              value: item.postName,
                                              disabled: state.showProgress || !item.formSend,
                                              onClick: (function (param) {
                                                  return Curry._1(showNameMenu, i);
                                                }),
                                              children: /* tuple */[
                                                item.showNameMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                        top: "0",
                                                        transform: "translate(0, 0)",
                                                        maxHeight: "280",
                                                        minHeight: "0",
                                                        topLeft: "12",
                                                        topRight: "12",
                                                        bottomRight: "12",
                                                        bottomLeft: "12",
                                                        paddingRight: "8",
                                                        paddingLeft: "8",
                                                        children: $$Array.map((function (nameitem) {
                                                                return React.createElement(MenuItem$BtsCore.make, {
                                                                            top: "0",
                                                                            right: "8",
                                                                            bottom: "0",
                                                                            left: "8",
                                                                            disablePadding: nameitem.optionPadding,
                                                                            topLeft: "12",
                                                                            topRight: "12",
                                                                            bottomRight: "12",
                                                                            bottomLeft: "12",
                                                                            onClick: (function (param) {
                                                                                return Curry._2(clickNameMenu, nameitem.value, i);
                                                                              }),
                                                                            children: nameitem.value
                                                                          });
                                                              }), item.nameitems)
                                                      }) : null,
                                                React.createElement(IconGeneral$BtsCore.make, {
                                                      animation: IconAnimation$BtsCore.topDownRorate(item.showNameMenu),
                                                      src: Icons$BtsCore.arrowDownBlack
                                                    })
                                              ]
                                            }), React.createElement(BackgroundBoard$BtsCore.make, {
                                              showBackground: item.showNameMenu,
                                              backgroundColor: "transparent",
                                              onClick: (function (param) {
                                                  return Curry._1(showNameMenu, i);
                                                })
                                            })), React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: null
                                        }, React.createElement(SelectStandard$BtsCore.make, {
                                              top: "12",
                                              right: "0",
                                              left: "0",
                                              labelColor: "rgba(255,0,0,0.8)",
                                              tile: "變更內容",
                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                              downBorderColor: "rgba(255,0,0,0.6)",
                                              borderColor: "rgba(0,0,0,0.2)",
                                              value: item.case,
                                              disabled: state.showProgress,
                                              onClick: (function (param) {
                                                  return Curry._1(showCaseMenu, i);
                                                }),
                                              children: /* tuple */[
                                                item.showCaseMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                        top: "0",
                                                        transform: "translate(0, 0)",
                                                        maxHeight: "280",
                                                        minHeight: "0",
                                                        topLeft: "12",
                                                        topRight: "12",
                                                        bottomRight: "12",
                                                        bottomLeft: "12",
                                                        paddingRight: "8",
                                                        paddingLeft: "8",
                                                        children: $$Array.map((function (caseitem) {
                                                                return React.createElement(MenuItem$BtsCore.make, {
                                                                            top: "0",
                                                                            right: "8",
                                                                            bottom: "0",
                                                                            left: "8",
                                                                            disablePadding: caseitem.optionPadding,
                                                                            topLeft: "12",
                                                                            topRight: "12",
                                                                            bottomRight: "12",
                                                                            bottomLeft: "12",
                                                                            onClick: (function (param) {
                                                                                return Curry._2(clickCaseMenu, caseitem.value, i);
                                                                              }),
                                                                            children: caseitem.value
                                                                          });
                                                              }), item.caseitems)
                                                      }) : null,
                                                React.createElement(IconGeneral$BtsCore.make, {
                                                      animation: IconAnimation$BtsCore.topDownRorate(item.showCaseMenu),
                                                      src: Icons$BtsCore.arrowDownBlack
                                                    })
                                              ]
                                            }), React.createElement(BackgroundBoard$BtsCore.make, {
                                              showBackground: item.showCaseMenu,
                                              backgroundColor: "transparent",
                                              onClick: (function (param) {
                                                  return Curry._1(showCaseMenu, i);
                                                })
                                            })))
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(GridContainer$BtsCore.make, {
                                      direction: "row",
                                      justify: "center",
                                      alignItem: "center",
                                      children: null
                                    }, React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                top: "12",
                                                right: "0",
                                                left: "0",
                                                labelColor: "rgba(255,0,0,0.8)",
                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                borderColor: "rgba(0,0,0,0.2)",
                                                value: item.homepage1,
                                                disabled: state.showProgress,
                                                onChange: (function ($$event) {
                                                    return Curry._2(changePage1, $$event.target.value, i);
                                                  }),
                                                children: "客戶"
                                              })
                                        }), React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                top: "12",
                                                right: "0",
                                                left: "0",
                                                labelColor: "rgba(255,0,0,0.8)",
                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                borderColor: "rgba(0,0,0,0.2)",
                                                value: item.pnumber,
                                                disabled: state.showProgress,
                                                onChange: (function ($$event) {
                                                    return Curry._2(changePnumber, $$event.target.value, i);
                                                  }),
                                                children: "訂單號碼"
                                              })
                                        }), React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                top: "12",
                                                right: "0",
                                                left: "0",
                                                labelColor: "rgba(255,0,0,0.8)",
                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                borderColor: "rgba(0,0,0,0.2)",
                                                type_: "date",
                                                value: item.endDate,
                                                disabled: state.showProgress,
                                                onChange: (function ($$event) {
                                                    return Curry._2(changeEndDate, $$event.target.value, i);
                                                  }),
                                                children: "文件有效期限"
                                              })
                                        }))
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(GridContainer$BtsCore.make, {
                                      direction: "row",
                                      justify: "center",
                                      alignItem: "center",
                                      children: null
                                    }, React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: null
                                        }, React.createElement(SelectStandard$BtsCore.make, {
                                              top: "12",
                                              right: "0",
                                              left: "0",
                                              labelColor: "rgba(255,0,0,0.8)",
                                              tile: "影響站別",
                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                              downBorderColor: "rgba(255,0,0,0.6)",
                                              borderColor: "rgba(0,0,0,0.2)",
                                              value: item.obj,
                                              disabled: state.showProgress,
                                              onClick: (function (param) {
                                                  return Curry._1(showObjMenu, i);
                                                }),
                                              children: /* tuple */[
                                                item.showObjMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                        top: "0",
                                                        transform: "translate(0, 0)",
                                                        maxHeight: "280",
                                                        minHeight: "0",
                                                        topLeft: "12",
                                                        topRight: "12",
                                                        bottomRight: "12",
                                                        bottomLeft: "12",
                                                        paddingRight: "8",
                                                        paddingLeft: "8",
                                                        children: $$Array.map((function (objitem) {
                                                                return React.createElement(MenuItem$BtsCore.make, {
                                                                            top: "0",
                                                                            right: "8",
                                                                            bottom: "0",
                                                                            left: "8",
                                                                            disablePadding: objitem.optionPadding,
                                                                            topLeft: "12",
                                                                            topRight: "12",
                                                                            bottomRight: "12",
                                                                            bottomLeft: "12",
                                                                            onClick: (function (param) {
                                                                                return Curry._2(clickObjMenu, objitem.value, i);
                                                                              }),
                                                                            children: objitem.value
                                                                          });
                                                              }), item.objitems)
                                                      }) : null,
                                                React.createElement(IconGeneral$BtsCore.make, {
                                                      animation: IconAnimation$BtsCore.topDownRorate(item.showObjMenu),
                                                      src: Icons$BtsCore.arrowDownBlack
                                                    })
                                              ]
                                            }), React.createElement(BackgroundBoard$BtsCore.make, {
                                              showBackground: item.showObjMenu,
                                              backgroundColor: "transparent",
                                              onClick: (function (param) {
                                                  return Curry._1(showObjMenu, i);
                                                })
                                            })), React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                top: "12",
                                                right: "0",
                                                left: "0",
                                                labelColor: "rgba(255,0,0,0.8)",
                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                borderColor: "rgba(0,0,0,0.2)",
                                                value: item.homepageMomo,
                                                disabled: state.showProgress,
                                                onChange: (function ($$event) {
                                                    return Curry._2(changeMomo, $$event.target.value, i);
                                                  }),
                                                children: "機種"
                                              })
                                        }), React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                top: "12",
                                                right: "0",
                                                left: "0",
                                                labelColor: "rgba(255,0,0,0.8)",
                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                borderColor: "rgba(0,0,0,0.2)",
                                                value: item.mb,
                                                disabled: state.showProgress,
                                                onChange: (function ($$event) {
                                                    return Curry._2(changeMb, $$event.target.value, i);
                                                  }),
                                                children: "M/B"
                                              })
                                        }), React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                top: "12",
                                                right: "0",
                                                left: "0",
                                                labelColor: "rgba(255,0,0,0.8)",
                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                borderColor: "rgba(0,0,0,0.2)",
                                                type_: "number",
                                                value: item.amount,
                                                disabled: state.showProgress,
                                                onChange: (function ($$event) {
                                                    return Curry._2(changeAmount, $$event.target.value, i);
                                                  }),
                                                children: "生產數量"
                                              })
                                        }))
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                      top: "12",
                                      right: "0",
                                      left: "0",
                                      labelColor: "rgba(255,0,0,0.8)",
                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                      downBorderColor: "rgba(255,0,0,0.6)",
                                      borderColor: "rgba(0,0,0,0.2)",
                                      value: item.subject,
                                      disabled: state.showProgress,
                                      onChange: (function ($$event) {
                                          return Curry._2(changeSubject, $$event.target.value, i);
                                        }),
                                      children: "主旨"
                                    })
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(GridContainer$BtsCore.make, {
                                      direction: "row",
                                      justify: "center",
                                      alignItem: "center",
                                      children: null
                                    }, React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                top: "12",
                                                right: "0",
                                                left: "0",
                                                labelColor: "rgba(255,0,0,0.8)",
                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                borderColor: "rgba(0,0,0,0.2)",
                                                value: item.ecr,
                                                disabled: state.showProgress || !item.formTrans || !item.formSend,
                                                onChange: (function ($$event) {
                                                    return Curry._2(changeEcr, $$event.target.value, i);
                                                  }),
                                                onKeyDown: (function ($$event) {
                                                    return Curry._3(keydownEcr, $$event.keyCode, item.ecr, i);
                                                  }),
                                                children: "ECR"
                                              })
                                        }), item.showXps ? React.createElement(GridItem$BtsCore.make, {
                                            top: "0",
                                            right: "0",
                                            bottom: "0",
                                            left: "0",
                                            xs: "no",
                                            children: React.createElement(IconButton$BtsCore.make, {
                                                  padding: "2",
                                                  disabled: state.showProgress,
                                                  onClick: (function (param) {
                                                      return Curry._1(showXpsFile, item.ecr);
                                                    }),
                                                  children: React.createElement(IconAction$BtsCore.make, {
                                                        animation: "circle",
                                                        src: Icons$BtsCore.visibilityBlack
                                                      })
                                                })
                                          }) : null, React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                top: "12",
                                                right: "0",
                                                left: "0",
                                                labelColor: "rgba(255,0,0,0.8)",
                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                borderColor: "rgba(0,0,0,0.2)",
                                                value: item.ecn,
                                                disabled: state.showProgress || !item.formTrans || !item.formSend,
                                                onChange: (function ($$event) {
                                                    return Curry._2(changeEcn, $$event.target.value, i);
                                                  }),
                                                children: "ECN"
                                              })
                                        }), React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                top: "12",
                                                right: "0",
                                                left: "0",
                                                labelColor: "rgba(255,0,0,0.8)",
                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                borderColor: "rgba(0,0,0,0.2)",
                                                value: item.en,
                                                disabled: state.showProgress || !item.formTrans || !item.formSend,
                                                onChange: (function ($$event) {
                                                    return Curry._2(changeEn, $$event.target.value, i);
                                                  }),
                                                children: "EN"
                                              })
                                        }), React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: null
                                        }, React.createElement(SelectStandard$BtsCore.make, {
                                              top: "12",
                                              right: "0",
                                              left: "0",
                                              labelColor: "rgba(255,0,0,0.8)",
                                              tile: "類型",
                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                              downBorderColor: "rgba(255,0,0,0.6)",
                                              borderColor: "rgba(0,0,0,0.2)",
                                              value: item.type_,
                                              disabled: state.showProgress || !item.formSend,
                                              onClick: (function (param) {
                                                  return Curry._1(showTypeMenu, i);
                                                }),
                                              children: /* tuple */[
                                                item.showTypeMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                        top: "0",
                                                        transform: "translate(0, 0)",
                                                        maxHeight: "280",
                                                        minHeight: "0",
                                                        topLeft: "12",
                                                        topRight: "12",
                                                        bottomRight: "12",
                                                        bottomLeft: "12",
                                                        paddingRight: "8",
                                                        paddingLeft: "8",
                                                        children: $$Array.map((function (typeitem) {
                                                                return React.createElement(MenuItem$BtsCore.make, {
                                                                            top: "0",
                                                                            right: "8",
                                                                            bottom: "0",
                                                                            left: "8",
                                                                            disablePadding: typeitem.optionPadding,
                                                                            topLeft: "12",
                                                                            topRight: "12",
                                                                            bottomRight: "12",
                                                                            bottomLeft: "12",
                                                                            onClick: (function (param) {
                                                                                return Curry._2(clickTypeMenu, typeitem.value, i);
                                                                              }),
                                                                            children: typeitem.value
                                                                          });
                                                              }), item.typeitems)
                                                      }) : null,
                                                React.createElement(IconGeneral$BtsCore.make, {
                                                      animation: IconAnimation$BtsCore.topDownRorate(item.showTypeMenu),
                                                      src: Icons$BtsCore.arrowDownBlack
                                                    })
                                              ]
                                            }), React.createElement(BackgroundBoard$BtsCore.make, {
                                              showBackground: item.showTypeMenu,
                                              backgroundColor: "transparent",
                                              onClick: (function (param) {
                                                  return Curry._1(showTypeMenu, i);
                                                })
                                            })))
                              }), React.createElement(GridItem$BtsCore.make, {
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(ToolBar$BtsCore.make, {
                                      disabled: state.showProgress,
                                      width: state.formWidth
                                    })
                              }), React.createElement(GridItem$BtsCore.make, {
                                left: "0",
                                xs: "auto",
                                children: React.createElement(TextFieldArticle$BtsCore.make, {
                                      textRef: textRef,
                                      disabled: state.showProgress,
                                      onInput: (function ($$event) {
                                          return Curry._2(inputBody, $$event.target.innerHTML, i);
                                        })
                                    })
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "6",
                                bottom: "6",
                                left: "6",
                                xs: "auto",
                                children: React.createElement(GridContainer$BtsCore.make, {
                                      direction: "row",
                                      justify: "start",
                                      alignItem: "center",
                                      children: $$Array.map((function (mailitem) {
                                              return React.createElement(GridItem$BtsCore.make, {
                                                          top: "0",
                                                          bottom: "0",
                                                          left: "0",
                                                          xs: "no",
                                                          children: React.createElement(Chip$BtsCore.make, {
                                                                enterBorderWidth: "0",
                                                                downBorderWidth: "0",
                                                                borderWidth: "0",
                                                                showButn: true,
                                                                src: Icons$BtsCore.clearBlack,
                                                                onButton: (function (param) {
                                                                    return Curry._2(clearMailItem, mailitem.mbId, i);
                                                                  }),
                                                                children: /* tuple */[
                                                                  React.createElement(Typography$BtsCore.make, {
                                                                        variant: "subtitle2",
                                                                        children: mailitem.mbValue.substring(0, 1)
                                                                      }),
                                                                  React.createElement(Typography$BtsCore.make, {
                                                                        variant: "subtitle2",
                                                                        children: mailitem.mbValue
                                                                      })
                                                                ]
                                                              })
                                                        });
                                            }), item.mailitems)
                                    })
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(GridContainer$BtsCore.make, {
                                      direction: "row",
                                      justify: "center",
                                      alignItem: "center",
                                      children: null
                                    }, React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: null
                                        }, React.createElement(SelectStandard$BtsCore.make, {
                                              top: "12",
                                              right: "0",
                                              left: "0",
                                              labelColor: "rgba(255,0,0,0.8)",
                                              tile: "相關部門",
                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                              downBorderColor: "rgba(255,0,0,0.6)",
                                              borderColor: "rgba(0,0,0,0.2)",
                                              value: item.maGroup,
                                              disabled: state.showProgress,
                                              onClick: (function (param) {
                                                  return Curry._1(showMagroupMenu, i);
                                                }),
                                              children: /* tuple */[
                                                item.showMagroupMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                        top: "0",
                                                        transform: "translate(0, 0)",
                                                        maxHeight: "280",
                                                        minHeight: "0",
                                                        topLeft: "12",
                                                        topRight: "12",
                                                        bottomRight: "12",
                                                        bottomLeft: "12",
                                                        paddingRight: "8",
                                                        paddingLeft: "8",
                                                        children: $$Array.map((function (magroupitem) {
                                                                return React.createElement(MenuItem$BtsCore.make, {
                                                                            top: "0",
                                                                            right: "8",
                                                                            bottom: "0",
                                                                            left: "8",
                                                                            disablePadding: magroupitem.optionPadding,
                                                                            topLeft: "12",
                                                                            topRight: "12",
                                                                            bottomRight: "12",
                                                                            bottomLeft: "12",
                                                                            onClick: (function (param) {
                                                                                return Curry._2(clickMagroupMenu, magroupitem.value, i);
                                                                              }),
                                                                            children: magroupitem.value
                                                                          });
                                                              }), item.magroupitems)
                                                      }) : null,
                                                React.createElement(IconGeneral$BtsCore.make, {
                                                      animation: IconAnimation$BtsCore.topDownRorate(item.showMagroupMenu),
                                                      src: Icons$BtsCore.arrowDownBlack
                                                    })
                                              ]
                                            }), React.createElement(BackgroundBoard$BtsCore.make, {
                                              showBackground: item.showMagroupMenu,
                                              backgroundColor: "transparent",
                                              onClick: (function (param) {
                                                  return Curry._1(showMagroupMenu, i);
                                                })
                                            })), React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: null
                                        }, React.createElement(SelectStandard$BtsCore.make, {
                                              top: "12",
                                              right: "0",
                                              left: "0",
                                              labelColor: "rgba(255,0,0,0.8)",
                                              tile: "相關人員",
                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                              downBorderColor: "rgba(255,0,0,0.6)",
                                              borderColor: "rgba(0,0,0,0.2)",
                                              value: item.maName,
                                              disabled: state.showProgress,
                                              onClick: (function (param) {
                                                  return Curry._1(showManameMenu, i);
                                                }),
                                              children: /* tuple */[
                                                item.showManameMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                        top: "0",
                                                        transform: "translate(0, 0)",
                                                        maxHeight: "280",
                                                        minHeight: "0",
                                                        topLeft: "12",
                                                        topRight: "12",
                                                        bottomRight: "12",
                                                        bottomLeft: "12",
                                                        paddingRight: "8",
                                                        paddingLeft: "8",
                                                        children: $$Array.map((function (manameitem) {
                                                                return React.createElement(MenuItem$BtsCore.make, {
                                                                            top: "0",
                                                                            right: "8",
                                                                            bottom: "0",
                                                                            left: "8",
                                                                            disablePadding: manameitem.optionPadding,
                                                                            topLeft: "12",
                                                                            topRight: "12",
                                                                            bottomRight: "12",
                                                                            bottomLeft: "12",
                                                                            onClick: (function (param) {
                                                                                return Curry._2(clickManameMenu, manameitem.value, i);
                                                                              }),
                                                                            children: manameitem.value
                                                                          });
                                                              }), item.manameitems)
                                                      }) : null,
                                                React.createElement(IconGeneral$BtsCore.make, {
                                                      animation: IconAnimation$BtsCore.topDownRorate(item.showManameMenu),
                                                      src: Icons$BtsCore.arrowDownBlack
                                                    })
                                              ]
                                            }), React.createElement(BackgroundBoard$BtsCore.make, {
                                              showBackground: item.showManameMenu,
                                              backgroundColor: "transparent",
                                              onClick: (function (param) {
                                                  return Curry._1(showManameMenu, i);
                                                })
                                            })))
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(Typography$BtsCore.make, {
                                      variant: "subheading",
                                      color: "rgba(0,0,0,0.6)",
                                      fontWeight: "bolder",
                                      children: "【作法說明及執行確認】"
                                    })
                              }), React.createElement(GridItem$BtsCore.make, {
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(Typography$BtsCore.make, {
                                      variant: "subheading",
                                      color: "rgba(0,0,0,0.6)",
                                      fontWeight: "bolder",
                                      children: "【資材處】"
                                    })
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(TextFieldMultiline$BtsCore.make, {
                                      top: "12",
                                      right: "0",
                                      left: "0",
                                      labelColor: "rgba(255,0,0,0.8)",
                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                      downBorderColor: "rgba(255,0,0,0.6)",
                                      borderColor: "rgba(0,0,0,0.2)",
                                      rows: 3,
                                      value: item.action1,
                                      disabled: state.showProgress,
                                      onChange: (function ($$event) {
                                          return Curry._2(changeAction1, $$event.target.value, i);
                                        }),
                                      children: null
                                    })
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "6",
                                bottom: "6",
                                left: "6",
                                xs: "auto",
                                children: React.createElement(GridContainer$BtsCore.make, {
                                      direction: "row",
                                      justify: "start",
                                      alignItem: "center",
                                      children: $$Array.map((function (workitem) {
                                              return React.createElement(GridItem$BtsCore.make, {
                                                          top: "0",
                                                          bottom: "0",
                                                          left: "0",
                                                          xs: "no",
                                                          children: React.createElement(Chip$BtsCore.make, {
                                                                enterBorderWidth: "0",
                                                                downBorderWidth: "0",
                                                                borderWidth: "0",
                                                                showButn: true,
                                                                src: Icons$BtsCore.clearBlack,
                                                                onButton: (function (param) {
                                                                    return Curry._2(clearWorkItem, workitem.mbId, i);
                                                                  }),
                                                                children: /* tuple */[
                                                                  React.createElement(Typography$BtsCore.make, {
                                                                        variant: "subtitle2",
                                                                        children: workitem.mbValue.substring(0, 1)
                                                                      }),
                                                                  React.createElement(Typography$BtsCore.make, {
                                                                        variant: "subtitle2",
                                                                        children: workitem.mbValue
                                                                      })
                                                                ]
                                                              })
                                                        });
                                            }), item.workitems)
                                    })
                              }), React.createElement(GridItem$BtsCore.make, {
                                style: {
                                  position: "relative"
                                },
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: null
                              }, React.createElement(TextFieldStandard$BtsCore.make, {
                                    top: "12",
                                    right: "0",
                                    left: "0",
                                    labelColor: "rgba(255,0,0,0.8)",
                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                    downBorderColor: "rgba(255,0,0,0.6)",
                                    borderColor: "rgba(0,0,0,0.2)",
                                    value: item.work,
                                    disabled: state.showProgress,
                                    onChange: (function ($$event) {
                                        return Curry._2(changeWork, $$event.target.value, i);
                                      }),
                                    onKeyDown: (function ($$event) {
                                        return Curry._3(keydownWork, $$event.keyCode, $$event.target.value, i);
                                      }),
                                    children: "生產工單"
                                  }), item.showWork ? React.createElement(React.Fragment, undefined, React.createElement(SelectMenu$BtsCore.make, {
                                          top: "100%",
                                          transform: "translate(0, 0)",
                                          maxHeight: "280",
                                          minHeight: "0",
                                          topLeft: "12",
                                          topRight: "12",
                                          bottomRight: "12",
                                          bottomLeft: "12",
                                          paddingRight: "8",
                                          paddingLeft: "8",
                                          children: $$Array.map((function (worknoitem) {
                                                  return React.createElement(MenuItem$BtsCore.make, {
                                                              top: "8",
                                                              right: "15",
                                                              bottom: "8",
                                                              left: "6",
                                                              enterBackgroundColor: "rgba(0,0,0,0.06)",
                                                              downBackgroundColor: "rgba(0,0,0,0.08)",
                                                              topLeft: "12",
                                                              topRight: "12",
                                                              bottomRight: "12",
                                                              bottomLeft: "12",
                                                              onClick: (function (param) {
                                                                  return Curry._2(clickItemWork, worknoitem.value, i);
                                                                }),
                                                              children: React.createElement(Typography$BtsCore.make, {
                                                                    variant: "subheading",
                                                                    children: worknoitem.value
                                                                  })
                                                            });
                                                }), item.worknoitems)
                                        }), React.createElement(BackgroundBoard$BtsCore.make, {
                                          showBackground: true,
                                          backgroundColor: "transparent",
                                          onClick: (function (param) {
                                              return Curry._1(showWork, i);
                                            })
                                        })) : null), React.createElement(GridItem$BtsCore.make, {
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(Typography$BtsCore.make, {
                                      variant: "subheading",
                                      color: "rgba(0,0,0,0.6)",
                                      fontWeight: "bolder",
                                      children: "【工程處】"
                                    })
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(TextFieldMultiline$BtsCore.make, {
                                      top: "12",
                                      right: "0",
                                      left: "0",
                                      labelColor: "rgba(255,0,0,0.8)",
                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                      downBorderColor: "rgba(255,0,0,0.6)",
                                      borderColor: "rgba(0,0,0,0.2)",
                                      rows: 3,
                                      value: item.action2,
                                      disabled: state.showProgress,
                                      onChange: (function ($$event) {
                                          return Curry._2(changeAction2, $$event.target.value, i);
                                        }),
                                      children: null
                                    })
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "6",
                                bottom: "6",
                                left: "6",
                                xs: "auto",
                                children: React.createElement(GridContainer$BtsCore.make, {
                                      direction: "row",
                                      justify: "start",
                                      alignItem: "center",
                                      children: $$Array.map((function (mbitem) {
                                              return React.createElement(GridItem$BtsCore.make, {
                                                          top: "0",
                                                          bottom: "0",
                                                          left: "0",
                                                          xs: "no",
                                                          children: React.createElement(Chip$BtsCore.make, {
                                                                enterBorderWidth: "0",
                                                                downBorderWidth: "0",
                                                                borderWidth: "0",
                                                                showButn: true,
                                                                src: Icons$BtsCore.clearBlack,
                                                                onButton: (function (param) {
                                                                    return Curry._2(clearMbItem, mbitem.mbId, i);
                                                                  }),
                                                                children: /* tuple */[
                                                                  React.createElement(Typography$BtsCore.make, {
                                                                        variant: "subtitle2",
                                                                        children: mbitem.mbValue.substring(0, 1)
                                                                      }),
                                                                  React.createElement(Typography$BtsCore.make, {
                                                                        variant: "subtitle2",
                                                                        children: mbitem.mbValue
                                                                      })
                                                                ]
                                                              })
                                                        });
                                            }), item.mbitems)
                                    })
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(GridContainer$BtsCore.make, {
                                      direction: "row",
                                      justify: "center",
                                      alignItem: "center",
                                      children: null
                                    }, React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: null
                                        }, React.createElement(SelectStandard$BtsCore.make, {
                                              top: "12",
                                              right: "0",
                                              left: "0",
                                              labelColor: "rgba(255,0,0,0.8)",
                                              tile: "篩選M/B",
                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                              downBorderColor: "rgba(255,0,0,0.6)",
                                              borderColor: "rgba(0,0,0,0.2)",
                                              value: item.mtst,
                                              disabled: state.showProgress,
                                              onClick: (function (param) {
                                                  return Curry._1(showMtstMenu, i);
                                                }),
                                              children: /* tuple */[
                                                item.showMtstMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                        top: "0",
                                                        transform: "translate(0, 0)",
                                                        maxHeight: "280",
                                                        minHeight: "0",
                                                        topLeft: "12",
                                                        topRight: "12",
                                                        bottomRight: "12",
                                                        bottomLeft: "12",
                                                        paddingRight: "8",
                                                        paddingLeft: "8",
                                                        children: $$Array.map((function (mtstitem) {
                                                                return React.createElement(MenuItem$BtsCore.make, {
                                                                            top: "0",
                                                                            right: "8",
                                                                            bottom: "0",
                                                                            left: "8",
                                                                            disablePadding: mtstitem.optionPadding,
                                                                            topLeft: "12",
                                                                            topRight: "12",
                                                                            bottomRight: "12",
                                                                            bottomLeft: "12",
                                                                            onClick: (function (param) {
                                                                                return Curry._3(clickMtstMenu, item.ecr, mtstitem.value, i);
                                                                              }),
                                                                            children: mtstitem.value
                                                                          });
                                                              }), item.mtstitems)
                                                      }) : null,
                                                React.createElement(IconGeneral$BtsCore.make, {
                                                      animation: IconAnimation$BtsCore.topDownRorate(item.showMtstMenu),
                                                      src: Icons$BtsCore.arrowDownBlack
                                                    })
                                              ]
                                            }), React.createElement(BackgroundBoard$BtsCore.make, {
                                              showBackground: item.showMtstMenu,
                                              backgroundColor: "transparent",
                                              onClick: (function (param) {
                                                  return Curry._1(showMtstMenu, i);
                                                })
                                            })), React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: null
                                        }, React.createElement(SelectStandard$BtsCore.make, {
                                              top: "12",
                                              right: "0",
                                              left: "0",
                                              labelColor: "rgba(255,0,0,0.8)",
                                              tile: "M/B",
                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                              downBorderColor: "rgba(255,0,0,0.6)",
                                              borderColor: "rgba(0,0,0,0.2)",
                                              value: item.mbst,
                                              disabled: state.showProgress,
                                              onClick: (function (param) {
                                                  return Curry._1(showMbstMenu, i);
                                                }),
                                              children: /* tuple */[
                                                item.showMbstMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                        top: "0",
                                                        transform: "translate(0, 0)",
                                                        maxHeight: "280",
                                                        minHeight: "0",
                                                        topLeft: "12",
                                                        topRight: "12",
                                                        bottomRight: "12",
                                                        bottomLeft: "12",
                                                        paddingRight: "8",
                                                        paddingLeft: "8",
                                                        children: $$Array.map((function (mbstitem) {
                                                                return React.createElement(MenuItem$BtsCore.make, {
                                                                            top: "0",
                                                                            right: "8",
                                                                            bottom: "0",
                                                                            left: "8",
                                                                            disablePadding: mbstitem.optionPadding,
                                                                            topLeft: "12",
                                                                            topRight: "12",
                                                                            bottomRight: "12",
                                                                            bottomLeft: "12",
                                                                            onClick: (function (param) {
                                                                                return Curry._2(clickMbstMenu, mbstitem.value, i);
                                                                              }),
                                                                            children: mbstitem.value
                                                                          });
                                                              }), item.mbstitems)
                                                      }) : null,
                                                React.createElement(IconGeneral$BtsCore.make, {
                                                      animation: IconAnimation$BtsCore.topDownRorate(item.showMbstMenu),
                                                      src: Icons$BtsCore.arrowDownBlack
                                                    })
                                              ]
                                            }), React.createElement(BackgroundBoard$BtsCore.make, {
                                              showBackground: item.showMbstMenu,
                                              backgroundColor: "transparent",
                                              onClick: (function (param) {
                                                  return Curry._1(showMbstMenu, i);
                                                })
                                            })), React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                top: "12",
                                                right: "0",
                                                left: "0",
                                                labelColor: "rgba(255,0,0,0.8)",
                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                borderColor: "rgba(0,0,0,0.2)",
                                                value: item.code,
                                                disabled: true,
                                                children: "Change Code"
                                              })
                                        }))
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(GridContainer$BtsCore.make, {
                                      direction: "row",
                                      justify: "center",
                                      alignItem: "center",
                                      children: null
                                    }, React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                top: "12",
                                                right: "0",
                                                left: "0",
                                                labelColor: "rgba(255,0,0,0.8)",
                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                borderColor: "rgba(0,0,0,0.2)",
                                                value: item.oldno,
                                                disabled: state.showProgress,
                                                onChange: (function ($$event) {
                                                    return Curry._2(changeOldno, $$event.target.value, i);
                                                  }),
                                                children: "舊料號"
                                              })
                                        }), React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                top: "12",
                                                right: "0",
                                                left: "0",
                                                labelColor: "rgba(255,0,0,0.8)",
                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                borderColor: "rgba(0,0,0,0.2)",
                                                value: item.newno,
                                                disabled: state.showProgress,
                                                onChange: (function ($$event) {
                                                    return Curry._2(changeNewno, $$event.target.value, i);
                                                  }),
                                                children: "新料號"
                                              })
                                        }), React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                top: "12",
                                                right: "0",
                                                left: "0",
                                                labelColor: "rgba(255,0,0,0.8)",
                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                borderColor: "rgba(0,0,0,0.2)",
                                                value: item.sopno,
                                                disabled: state.showProgress,
                                                onChange: (function ($$event) {
                                                    return Curry._2(changeSopno, $$event.target.value, i);
                                                  }),
                                                children: "SOP文件編號"
                                              })
                                        }))
                              }), React.createElement(GridItem$BtsCore.make, {
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(Typography$BtsCore.make, {
                                      variant: "subheading",
                                      color: "rgba(0,0,0,0.6)",
                                      fontWeight: "bolder",
                                      children: "【品保處】"
                                    })
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(TextFieldMultiline$BtsCore.make, {
                                      top: "12",
                                      right: "0",
                                      left: "0",
                                      labelColor: "rgba(255,0,0,0.8)",
                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                      downBorderColor: "rgba(255,0,0,0.6)",
                                      borderColor: "rgba(0,0,0,0.2)",
                                      rows: 3,
                                      value: item.action3,
                                      disabled: state.showProgress,
                                      onChange: (function ($$event) {
                                          return Curry._2(changeAction3, $$event.target.value, i);
                                        }),
                                      children: null
                                    })
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                      top: "12",
                                      right: "0",
                                      left: "0",
                                      labelColor: "rgba(255,0,0,0.8)",
                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                      downBorderColor: "rgba(255,0,0,0.6)",
                                      borderColor: "rgba(0,0,0,0.2)",
                                      value: item.sipno,
                                      disabled: state.showProgress,
                                      onChange: (function ($$event) {
                                          return Curry._2(changeSipno, $$event.target.value, i);
                                        }),
                                      children: "SIP文件編號"
                                    })
                              }), React.createElement(GridItem$BtsCore.make, {
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(Typography$BtsCore.make, {
                                      variant: "subheading",
                                      color: "rgba(0,0,0,0.6)",
                                      fontWeight: "bolder",
                                      children: "【生產處】"
                                    })
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(TextFieldMultiline$BtsCore.make, {
                                      top: "12",
                                      right: "0",
                                      left: "0",
                                      labelColor: "rgba(255,0,0,0.8)",
                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                      downBorderColor: "rgba(255,0,0,0.6)",
                                      borderColor: "rgba(0,0,0,0.2)",
                                      rows: 3,
                                      value: item.action4,
                                      disabled: state.showProgress,
                                      onChange: (function ($$event) {
                                          return Curry._2(changeAction4, $$event.target.value, i);
                                        }),
                                      children: null
                                    })
                              }), React.createElement(GridItem$BtsCore.make, {
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(Typography$BtsCore.make, {
                                      variant: "subheading",
                                      color: "rgba(0,0,0,0.6)",
                                      fontWeight: "bolder",
                                      children: "【不知道】"
                                    })
                              }), React.createElement(GridItem$BtsCore.make, {
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(TextFieldMultiline$BtsCore.make, {
                                      top: "12",
                                      right: "0",
                                      left: "0",
                                      labelColor: "rgba(255,0,0,0.8)",
                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                      downBorderColor: "rgba(255,0,0,0.6)",
                                      borderColor: "rgba(0,0,0,0.2)",
                                      rows: 3,
                                      value: item.action5,
                                      disabled: state.showProgress,
                                      onChange: (function ($$event) {
                                          return Curry._2(changeAction5, $$event.target.value, i);
                                        }),
                                      children: null
                                    })
                              }));
              }), state.formitems);
        break;
    case 1 :
        tmp = React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                  top: "0",
                  right: "0",
                  bottom: "0",
                  left: "0",
                  xs: "auto",
                  children: React.createElement(GeneralUpload$BtsCore.make, {
                        webLoad: state.showProgress,
                        showDrop: state.showDrop,
                        fileRef: fileRef,
                        onDragOver: Curry.__1(dragOverFile),
                        onDragLeave: Curry.__1(dragLeaveFile),
                        onDrop: (function ($$event) {
                            return Curry._2(dropFile, $$event, Caml_array.caml_array_get($$event.nativeEvent.dataTransfer.files, 0));
                          }),
                        disabled: state.showProgress,
                        onClick: chooseFile,
                        onChange: (function ($$event) {
                            return Curry._1(changeFile, Caml_array.caml_array_get($$event.target.files, 0));
                          })
                      })
                }), React.createElement(GridItem$BtsCore.make, {
                  top: "0",
                  right: "0",
                  bottom: "0",
                  left: "0",
                  xs: "auto",
                  children: React.createElement(GridContainer$BtsCore.make, {
                        direction: "columnReverse",
                        justify: "center",
                        alignItem: "stretch",
                        children: $$Array.mapi((function (i, photoitem) {
                                var match = photoitem.photoImage;
                                var match$1 = photoitem.photoVideo;
                                var match$2 = photoitem.photoAudio;
                                return React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                                enterBorderRadius: "15",
                                                borderRadius: "15",
                                                enterBackgroundColor: photoitem.photoDelete ? "rgba(255,0,0,1)" : "rgba(255,255,255,1)",
                                                backgroundColor: photoitem.photoDelete ? "rgba(255,0,0,0.8)" : "rgba(255,255,255,1)",
                                                xs: "auto",
                                                children: React.createElement(GridContainer$BtsCore.make, {
                                                      backgroundColor: "transparent",
                                                      direction: "columnReverse",
                                                      justify: "center",
                                                      alignItem: "stretch",
                                                      children: null
                                                    }, React.createElement(GridItem$BtsCore.make, {
                                                          top: "0",
                                                          right: "0",
                                                          bottom: "0",
                                                          left: "0",
                                                          enterBackgroundColor: "transparent",
                                                          backgroundColor: "transparent",
                                                          xs: "auto",
                                                          children: match ? React.createElement(Image$BtsCore.make, {
                                                                  width: "auto",
                                                                  height: "300px",
                                                                  borderRadius: "6",
                                                                  src: photoitem.photoPath + photoitem.photoSrc
                                                                }) : (
                                                              match$1 ? React.createElement(Media$BtsCore.make, {
                                                                      width: "auto",
                                                                      borderRadius: "6",
                                                                      controls: true,
                                                                      src: photoitem.photoPath + photoitem.photoSrc
                                                                    }) : (
                                                                  match$2 ? React.createElement(Media$BtsCore.make, {
                                                                          variant: "audio",
                                                                          width: "auto",
                                                                          borderRadius: "6",
                                                                          controls: true,
                                                                          src: photoitem.photoPath + photoitem.photoSrc
                                                                        }) : null
                                                                )
                                                            )
                                                        }), React.createElement(GridItem$BtsCore.make, {
                                                          top: "0",
                                                          right: "0",
                                                          bottom: "6",
                                                          left: "0",
                                                          enterBackgroundColor: "transparent",
                                                          backgroundColor: "transparent",
                                                          xs: "auto",
                                                          children: React.createElement(GridContainer$BtsCore.make, {
                                                                backgroundColor: "transparent",
                                                                direction: "row",
                                                                justify: "between",
                                                                alignItem: "center",
                                                                children: null
                                                              }, React.createElement(GridItem$BtsCore.make, {
                                                                    top: "0",
                                                                    right: "0",
                                                                    bottom: "0",
                                                                    left: "0",
                                                                    enterBackgroundColor: "transparent",
                                                                    backgroundColor: "transparent",
                                                                    xs: "auto",
                                                                    children: React.createElement(Typography$BtsCore.make, {
                                                                          variant: "subheading",
                                                                          color: photoitem.photoDelete ? "rgba(255,255,255,1)" : "rgba(0,0,0,1)",
                                                                          noWrap: true,
                                                                          children: photoitem.photoOriginal + photoitem.photoExtension
                                                                        })
                                                                  }), photoitem.showDelete ? React.createElement(GridItem$BtsCore.make, {
                                                                      top: "0",
                                                                      right: "0",
                                                                      bottom: "0",
                                                                      left: "0",
                                                                      enterBackgroundColor: "transparent",
                                                                      backgroundColor: "transparent",
                                                                      xs: "no",
                                                                      children: React.createElement(IconButton$BtsCore.make, {
                                                                            padding: "6",
                                                                            disabled: state.showProgress,
                                                                            onClick: (function (param) {
                                                                                return Curry._1(actionPhoto, i);
                                                                              }),
                                                                            children: React.createElement(IconAction$BtsCore.make, {
                                                                                  animation: "leftRight",
                                                                                  src: photoitem.photoDelete ? Icons$BtsCore.refreshWhite : Icons$BtsCore.deleteBlack
                                                                                })
                                                                          })
                                                                    }) : null)
                                                        }))
                                              }), React.createElement(GridItem$BtsCore.make, {
                                                right: "24",
                                                left: "24",
                                                xs: "auto",
                                                children: React.createElement(Divider$BtsCore.make, { })
                                              }));
                              }), state.photoitems)
                      })
                }));
        break;
    case 2 :
        tmp = React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                  top: "0",
                  right: "0",
                  bottom: "0",
                  left: "0",
                  xs: "auto",
                  children: React.createElement(GeneralUpload$BtsCore.make, {
                        webLoad: state.showProgress,
                        showDrop: state.showDrop,
                        fileRef: fileRef,
                        onDragOver: Curry.__1(dragOverFile),
                        onDragLeave: Curry.__1(dragLeaveFile),
                        onDrop: (function ($$event) {
                            return Curry._2(dropGrotoFile, $$event, Caml_array.caml_array_get($$event.nativeEvent.dataTransfer.files, 0));
                          }),
                        disabled: state.showProgress,
                        onClick: chooseFile,
                        onChange: (function ($$event) {
                            return Curry._1(changeGrotoFile, Caml_array.caml_array_get($$event.target.files, 0));
                          })
                      })
                }), React.createElement(GridItem$BtsCore.make, {
                  top: "0",
                  right: "0",
                  bottom: "0",
                  left: "0",
                  xs: "auto",
                  children: React.createElement(GridContainer$BtsCore.make, {
                        direction: "columnReverse",
                        justify: "center",
                        alignItem: "stretch",
                        children: $$Array.mapi((function (i, grotoitem) {
                                var match = grotoitem.grotoImage;
                                var match$1 = grotoitem.grotoVideo;
                                var match$2 = grotoitem.grotoAudio;
                                return React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                                enterBorderRadius: "15",
                                                borderRadius: "15",
                                                enterBackgroundColor: grotoitem.grotoDelete ? "rgba(255,0,0,1)" : "rgba(255,255,255,1)",
                                                backgroundColor: grotoitem.grotoDelete ? "rgba(255,0,0,0.8)" : "rgba(255,255,255,1)",
                                                xs: "auto",
                                                children: React.createElement(GridContainer$BtsCore.make, {
                                                      backgroundColor: "transparent",
                                                      direction: "columnReverse",
                                                      justify: "center",
                                                      alignItem: "stretch",
                                                      children: null
                                                    }, React.createElement(GridItem$BtsCore.make, {
                                                          top: "0",
                                                          right: "0",
                                                          bottom: "0",
                                                          left: "0",
                                                          enterBackgroundColor: "transparent",
                                                          backgroundColor: "transparent",
                                                          xs: "auto",
                                                          children: match ? React.createElement(Image$BtsCore.make, {
                                                                  width: "auto",
                                                                  height: "300px",
                                                                  borderRadius: "6",
                                                                  src: grotoitem.grotoPath + grotoitem.grotoSrc
                                                                }) : (
                                                              match$1 ? React.createElement(Media$BtsCore.make, {
                                                                      width: "auto",
                                                                      borderRadius: "6",
                                                                      controls: true,
                                                                      src: grotoitem.grotoPath + grotoitem.grotoSrc
                                                                    }) : (
                                                                  match$2 ? React.createElement(Media$BtsCore.make, {
                                                                          variant: "audio",
                                                                          width: "auto",
                                                                          borderRadius: "6",
                                                                          controls: true,
                                                                          src: grotoitem.grotoPath + grotoitem.grotoSrc
                                                                        }) : null
                                                                )
                                                            )
                                                        }), React.createElement(GridItem$BtsCore.make, {
                                                          top: "0",
                                                          right: "0",
                                                          bottom: "6",
                                                          left: "0",
                                                          enterBackgroundColor: "transparent",
                                                          backgroundColor: "transparent",
                                                          xs: "auto",
                                                          children: React.createElement(GridContainer$BtsCore.make, {
                                                                backgroundColor: "transparent",
                                                                direction: "row",
                                                                justify: "between",
                                                                alignItem: "center",
                                                                children: null
                                                              }, React.createElement(GridItem$BtsCore.make, {
                                                                    top: "0",
                                                                    right: "0",
                                                                    bottom: "0",
                                                                    left: "0",
                                                                    enterBackgroundColor: "transparent",
                                                                    backgroundColor: "transparent",
                                                                    xs: "auto",
                                                                    children: React.createElement(Typography$BtsCore.make, {
                                                                          variant: "subheading",
                                                                          color: grotoitem.grotoDelete ? "rgba(255,255,255,1)" : "rgba(0,0,0,1)",
                                                                          noWrap: true,
                                                                          children: grotoitem.grotoOriginal + (grotoitem.grotoExtension + ("(" + (grotoitem.grotoName + ")")))
                                                                        })
                                                                  }), grotoitem.showDelete ? React.createElement(GridItem$BtsCore.make, {
                                                                      top: "0",
                                                                      right: "0",
                                                                      bottom: "0",
                                                                      left: "0",
                                                                      enterBackgroundColor: "transparent",
                                                                      backgroundColor: "transparent",
                                                                      xs: "no",
                                                                      children: React.createElement(IconButton$BtsCore.make, {
                                                                            padding: "6",
                                                                            disabled: state.showProgress,
                                                                            onClick: (function (param) {
                                                                                return Curry._1(actionGroto, i);
                                                                              }),
                                                                            children: React.createElement(IconAction$BtsCore.make, {
                                                                                  animation: "leftRight",
                                                                                  src: grotoitem.grotoDelete ? Icons$BtsCore.refreshWhite : Icons$BtsCore.deleteBlack
                                                                                })
                                                                          })
                                                                    }) : null)
                                                        }))
                                              }), React.createElement(GridItem$BtsCore.make, {
                                                right: "24",
                                                left: "24",
                                                xs: "auto",
                                                children: React.createElement(Divider$BtsCore.make, { })
                                              }));
                              }), state.grotoitems)
                      })
                }));
        break;
    default:
      tmp = React.createElement(GridItem$BtsCore.make, {
            top: "0",
            right: "0",
            bottom: "0",
            left: "0",
            xs: "auto",
            children: React.createElement(GridContainer$BtsCore.make, {
                  direction: "columnReverse",
                  justify: "center",
                  alignItem: "stretch",
                  children: $$Array.mapi((function (i, item) {
                          return React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                          enterBorderRadius: "15",
                                          borderRadius: "15",
                                          xs: "auto",
                                          children: React.createElement(GridContainer$BtsCore.make, {
                                                backgroundColor: "transparent",
                                                direction: "column",
                                                justify: "center",
                                                alignItem: "stretch",
                                                children: null
                                              }, React.createElement(GridItem$BtsCore.make, {
                                                    top: "0",
                                                    right: "0",
                                                    bottom: "0",
                                                    left: "0",
                                                    enterBackgroundColor: "transparent",
                                                    backgroundColor: "transparent",
                                                    xs: "auto",
                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                          backgroundColor: "transparent",
                                                          direction: "row",
                                                          justify: "center",
                                                          alignItem: "center",
                                                          children: null
                                                        }, React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              enterBackgroundColor: "transparent",
                                                              backgroundColor: "transparent",
                                                              xs: "no",
                                                              children: React.createElement(Avatar$BtsCore.make, {
                                                                    top: "5",
                                                                    right: "16",
                                                                    bottom: "5",
                                                                    left: "0",
                                                                    children: item.actName.substring(0, 1)
                                                                  })
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              enterBackgroundColor: "transparent",
                                                              backgroundColor: "transparent",
                                                              xs: "auto",
                                                              children: React.createElement(Typography$BtsCore.make, {
                                                                    variant: "subheading",
                                                                    children: item.actDate
                                                                  })
                                                            }))
                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                    top: "0",
                                                    right: "0",
                                                    bottom: "0",
                                                    left: "40",
                                                    enterBackgroundColor: "transparent",
                                                    backgroundColor: "transparent",
                                                    xs: "auto",
                                                    children: React.createElement("div", {
                                                          dangerouslySetInnerHTML: {
                                                            __html: item.actContent
                                                          }
                                                        })
                                                  }))
                                        }), React.createElement(GridItem$BtsCore.make, {
                                          right: "24",
                                          left: "24",
                                          xs: "auto",
                                          children: React.createElement(Divider$BtsCore.make, { })
                                        }));
                        }), state.actionitems)
                })
          });
  }
  return React.createElement(React.Fragment, undefined, React.createElement(NewFacetube$BtsCore.make, {
                  showProgress: state.showProgress,
                  error: state.error,
                  children: React.createElement(GridItem$BtsCore.make, {
                        style: Together$BtsCore.marginAuto,
                        top: "0",
                        right: "32",
                        bottom: "0",
                        left: "32",
                        xs: "12",
                        maxWidth: "770px",
                        children: null
                      }, React.createElement(GridContainer$BtsCore.make, {
                            direction: "column",
                            justify: "center",
                            alignItem: "stretch",
                            children: null
                          }, React.createElement(GridItem$BtsCore.make, {
                                style: {
                                  position: "sticky",
                                  top: "0px",
                                  zIndex: "2"
                                },
                                top: "6",
                                bottom: "6",
                                left: "6",
                                xs: "auto",
                                children: React.createElement(GridContainer$BtsCore.make, {
                                      direction: "row",
                                      justify: "center",
                                      alignItem: "center",
                                      children: null
                                    }, React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "auto",
                                          children: null
                                        }, React.createElement(TextFieldOutline$BtsCore.make, {
                                              top: "0",
                                              right: "0",
                                              bottom: "0",
                                              left: "0",
                                              borderTop: "12",
                                              borderBottom: "12",
                                              borderRadius: "20",
                                              value: state.record,
                                              disabled: state.showProgress,
                                              onChange: (function ($$event) {
                                                  return Curry._1(changeRecord, $$event.target.value);
                                                }),
                                              onKeyDown: (function ($$event) {
                                                  return Curry._1(keydownRecord, $$event.keyCode);
                                                }),
                                              onClick: clickRecord,
                                              children: null
                                            }), state.showRecord ? React.createElement(React.Fragment, undefined, React.createElement(SelectMenu$BtsCore.make, {
                                                    top: "100%",
                                                    transform: "translate(0, 0)",
                                                    maxHeight: "280",
                                                    minHeight: "0",
                                                    topLeft: "12",
                                                    topRight: "12",
                                                    bottomRight: "12",
                                                    bottomLeft: "12",
                                                    paddingRight: "8",
                                                    paddingLeft: "8",
                                                    children: $$Array.map((function (recorditem) {
                                                            return React.createElement(MenuItem$BtsCore.make, {
                                                                        top: "8",
                                                                        right: "15",
                                                                        bottom: "8",
                                                                        left: "6",
                                                                        enterBackgroundColor: "rgba(0,0,0,0.06)",
                                                                        downBackgroundColor: "rgba(0,0,0,0.08)",
                                                                        topLeft: "12",
                                                                        topRight: "12",
                                                                        bottomRight: "12",
                                                                        bottomLeft: "12",
                                                                        onClick: (function (param) {
                                                                            return Curry._1(clickItemRecord, recorditem.cordValue);
                                                                          }),
                                                                        children: React.createElement(GridContainer$BtsCore.make, {
                                                                              backgroundColor: "transparent",
                                                                              direction: "row",
                                                                              justify: "between",
                                                                              alignItem: "center",
                                                                              children: null
                                                                            }, React.createElement(GridItem$BtsCore.make, {
                                                                                  top: "0",
                                                                                  right: "0",
                                                                                  bottom: "0",
                                                                                  left: "0",
                                                                                  enterBackgroundColor: "transparent",
                                                                                  backgroundColor: "transparent",
                                                                                  xs: "no",
                                                                                  children: React.createElement(IconButton$BtsCore.make, {
                                                                                        enterBackgroundColor: "transparent",
                                                                                        downBackgroundColor: "transparent",
                                                                                        padding: "4",
                                                                                        children: React.createElement(IconAction$BtsCore.make, {
                                                                                              animation: "circle",
                                                                                              src: recorditem.cordIcon
                                                                                            })
                                                                                      })
                                                                                }), React.createElement(GridItem$BtsCore.make, {
                                                                                  top: "0",
                                                                                  right: "6",
                                                                                  bottom: "0",
                                                                                  left: "6",
                                                                                  enterBackgroundColor: "transparent",
                                                                                  backgroundColor: "transparent",
                                                                                  xs: "auto",
                                                                                  children: React.createElement(Typography$BtsCore.make, {
                                                                                        variant: "subheading",
                                                                                        children: recorditem.cordValue
                                                                                      })
                                                                                }))
                                                                      });
                                                          }), state.recorditems)
                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                    showBackground: true,
                                                    backgroundColor: "transparent",
                                                    onClick: showRecord
                                                  })) : null), React.createElement(GridItem$BtsCore.make, {
                                          top: "0",
                                          right: "0",
                                          bottom: "0",
                                          left: "0",
                                          xs: "no",
                                          children: React.createElement(Typography$BtsCore.make, {
                                                variant: "subheading",
                                                fontWeight: "600",
                                                children: "總筆數：" + String(state.itemCount)
                                              })
                                        }))
                              }), React.createElement(GridItem$BtsCore.make, {
                                style: {
                                  position: "sticky",
                                  top: "61px",
                                  zIndex: "1"
                                },
                                top: "0",
                                right: "0",
                                bottom: "0",
                                left: "0",
                                xs: "auto",
                                children: React.createElement(GridContainer$BtsCore.make, {
                                      direction: "row",
                                      justify: "center",
                                      alignItem: "center",
                                      children: $$Array.mapi((function (i, filitem) {
                                              return React.createElement(GridItem$BtsCore.make, {
                                                          top: "0",
                                                          right: "0",
                                                          bottom: "0",
                                                          left: "0",
                                                          xs: "auto",
                                                          children: null
                                                        }, React.createElement(SelectOutline$BtsCore.make, {
                                                              labelColor: "rgba(255,0,0,0.8)",
                                                              tile: filitem.tile,
                                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                                              downBorderColor: "rgba(255,0,0,0.6)",
                                                              borderColor: "rgba(0,0,0,0.2)",
                                                              value: filitem.filtValue,
                                                              disabled: state.showProgress,
                                                              onClick: (function (param) {
                                                                  return Curry._1(showMenu, i);
                                                                }),
                                                              children: /* tuple */[
                                                                filitem.showMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                        top: "0%",
                                                                        transform: "translate(0, 0%)",
                                                                        maxHeight: "280",
                                                                        minHeight: "0",
                                                                        topLeft: "12",
                                                                        topRight: "12",
                                                                        bottomRight: "12",
                                                                        bottomLeft: "12",
                                                                        paddingRight: "8",
                                                                        paddingLeft: "8",
                                                                        children: $$Array.map((function (optionitem) {
                                                                                return React.createElement(MenuItem$BtsCore.make, {
                                                                                            top: "0",
                                                                                            right: "8",
                                                                                            bottom: "0",
                                                                                            left: "8",
                                                                                            disablePadding: optionitem.optionPadding,
                                                                                            topLeft: "12",
                                                                                            topRight: "12",
                                                                                            bottomRight: "12",
                                                                                            bottomLeft: "12",
                                                                                            onClick: (function (param) {
                                                                                                return Curry._2(clickMenu, optionitem.value, i);
                                                                                              }),
                                                                                            children: optionitem.value
                                                                                          });
                                                                              }), filitem.optionitems)
                                                                      }) : null,
                                                                React.createElement(IconGeneral$BtsCore.make, {
                                                                      animation: IconAnimation$BtsCore.topDownRorate(filitem.showMenu),
                                                                      src: Icons$BtsCore.arrowDownBlack
                                                                    })
                                                              ]
                                                            }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                              showBackground: filitem.showMenu,
                                                              backgroundColor: "transparent",
                                                              onClick: (function (param) {
                                                                  return Curry._1(showMenu, i);
                                                                })
                                                            }));
                                            }), state.filitems)
                                    })
                              }), $$Array.mapi((function (i, item) {
                                  var match = item.indexs;
                                  return React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                                  top: "0",
                                                  right: "0",
                                                  bottom: "0",
                                                  left: "0",
                                                  cursor: "pointer",
                                                  enterBorderRadius: "10",
                                                  borderRadius: "10",
                                                  enterBackgroundColor: "rgba(0,0,0,0.1)",
                                                  xs: "auto",
                                                  onClick: (function (param) {
                                                      return Curry._2(clickFormBoard, i, item.ids);
                                                    }),
                                                  children: React.createElement(GridContainer$BtsCore.make, {
                                                        backgroundColor: "none",
                                                        direction: "column",
                                                        justify: "center",
                                                        alignItem: "stretch",
                                                        children: null
                                                      }, React.createElement(GridItem$BtsCore.make, {
                                                            bottom: "6",
                                                            enterBackgroundColor: "none",
                                                            backgroundColor: "none",
                                                            xs: "auto",
                                                            children: React.createElement(GridContainer$BtsCore.make, {
                                                                  backgroundColor: "none",
                                                                  direction: "row",
                                                                  justify: "between",
                                                                  alignItem: "center",
                                                                  children: null
                                                                }, React.createElement(GridItem$BtsCore.make, {
                                                                      top: "0",
                                                                      right: "0",
                                                                      bottom: "0",
                                                                      left: "0",
                                                                      enterBackgroundColor: "none",
                                                                      backgroundColor: "none",
                                                                      xs: "auto",
                                                                      children: React.createElement(Typography$BtsCore.make, {
                                                                            variant: "subheading",
                                                                            fontWeight: "600",
                                                                            children: item.numbers
                                                                          })
                                                                    }), item.itemDelete ? React.createElement(GridItem$BtsCore.make, {
                                                                        top: "0",
                                                                        right: "0",
                                                                        bottom: "0",
                                                                        left: "0",
                                                                        enterBackgroundColor: "none",
                                                                        backgroundColor: "none",
                                                                        xs: "no",
                                                                        children: React.createElement(IconButton$BtsCore.make, {
                                                                              padding: "8",
                                                                              disabled: state.showProgress,
                                                                              onClick: (function ($$event) {
                                                                                  return Curry._2(clearItem, item.ids, $$event);
                                                                                }),
                                                                              children: null
                                                                            }, React.createElement(Tooltip$BtsCore.make, {
                                                                                  location: "bottom",
                                                                                  backgroundColor: "rgba(255,0,0,0.8)",
                                                                                  children: React.createElement(ReactIntl.FormattedMessage, {
                                                                                        id: "deleted",
                                                                                        defaultMessage: "Deleted"
                                                                                      })
                                                                                }), React.createElement(IconAction$BtsCore.make, {
                                                                                  animation: "circle",
                                                                                  src: Icons$BtsCore.deleteBlack
                                                                                }))
                                                                      }) : null)
                                                          }), React.createElement(GridItem$BtsCore.make, {
                                                            top: "0",
                                                            bottom: "0",
                                                            enterBackgroundColor: "none",
                                                            backgroundColor: "none",
                                                            xs: "auto",
                                                            children: React.createElement(Tabs$BtsCore.make, {
                                                                  id: "list-",
                                                                  index: item.indexs,
                                                                  height: "3",
                                                                  children: $$Array.of_list(List.mapi((function (ti, tabsitem) {
                                                                              return React.createElement(Tab$BtsCore.make, {
                                                                                          showTab: tabsitem.showTab,
                                                                                          maxWidth: "111.6",
                                                                                          height: "32",
                                                                                          borderRadius: "15",
                                                                                          id: "list-" + String(ti),
                                                                                          animationName: "none",
                                                                                          onClick: (function ($$event) {
                                                                                              return Curry._3(clickItemTabs, ti, i, $$event);
                                                                                            }),
                                                                                          children: React.createElement(IconAction$BtsCore.make, {
                                                                                                width: "20",
                                                                                                height: "20",
                                                                                                animation: "leftRight",
                                                                                                src: tabsitem.tabImage
                                                                                              })
                                                                                        });
                                                                            }), state.tabsitems))
                                                                })
                                                          }), match !== 0 ? React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                                                  top: "0",
                                                                  bottom: "0",
                                                                  left: "14",
                                                                  enterBackgroundColor: "none",
                                                                  backgroundColor: "none",
                                                                  xs: "auto",
                                                                  children: React.createElement(Typography$BtsCore.make, {
                                                                        variant: "subheading",
                                                                        children: item.subjects
                                                                      })
                                                                }), React.createElement(GridItem$BtsCore.make, {
                                                                  top: "0",
                                                                  bottom: "0",
                                                                  enterBackgroundColor: "none",
                                                                  backgroundColor: "none",
                                                                  xs: "auto",
                                                                  children: React.createElement(GridContainer$BtsCore.make, {
                                                                        backgroundColor: "none",
                                                                        direction: "row",
                                                                        justify: "center",
                                                                        alignItem: "center",
                                                                        children: null
                                                                      }, React.createElement(GridItem$BtsCore.make, {
                                                                            top: "0",
                                                                            bottom: "0",
                                                                            left: "0",
                                                                            enterBackgroundColor: "none",
                                                                            backgroundColor: "none",
                                                                            xs: "no",
                                                                            children: React.createElement(Typography$BtsCore.make, {
                                                                                  variant: "body2",
                                                                                  color: "#606060",
                                                                                  children: item.postdates
                                                                                })
                                                                          }), React.createElement(GridItem$BtsCore.make, {
                                                                            top: "0",
                                                                            bottom: "0",
                                                                            left: "0",
                                                                            enterBackgroundColor: "none",
                                                                            backgroundColor: "none",
                                                                            xs: "no",
                                                                            children: React.createElement(Typography$BtsCore.make, {
                                                                                  variant: "body2",
                                                                                  color: "#606060",
                                                                                  children: item.postGroups
                                                                                })
                                                                          }), React.createElement(GridItem$BtsCore.make, {
                                                                            top: "0",
                                                                            bottom: "0",
                                                                            left: "0",
                                                                            enterBackgroundColor: "none",
                                                                            backgroundColor: "none",
                                                                            xs: "auto",
                                                                            children: React.createElement(Typography$BtsCore.make, {
                                                                                  variant: "body2",
                                                                                  color: "#606060",
                                                                                  children: item.homepage1s
                                                                                })
                                                                          }))
                                                                }), React.createElement(GridItem$BtsCore.make, {
                                                                  top: "0",
                                                                  bottom: "0",
                                                                  enterBackgroundColor: "none",
                                                                  backgroundColor: "none",
                                                                  xs: "auto",
                                                                  children: React.createElement(GridContainer$BtsCore.make, {
                                                                        backgroundColor: "none",
                                                                        direction: "row",
                                                                        justify: "center",
                                                                        alignItem: "center",
                                                                        children: null
                                                                      }, React.createElement(GridItem$BtsCore.make, {
                                                                            top: "0",
                                                                            bottom: "0",
                                                                            left: "0",
                                                                            enterBackgroundColor: "none",
                                                                            backgroundColor: "none",
                                                                            xs: "no",
                                                                            children: React.createElement(Typography$BtsCore.make, {
                                                                                  variant: "body2",
                                                                                  color: "#606060",
                                                                                  children: item.pnumbers
                                                                                })
                                                                          }), React.createElement(GridItem$BtsCore.make, {
                                                                            top: "0",
                                                                            bottom: "0",
                                                                            left: "0",
                                                                            enterBackgroundColor: "none",
                                                                            backgroundColor: "none",
                                                                            xs: "auto",
                                                                            children: React.createElement(Typography$BtsCore.make, {
                                                                                  variant: "body2",
                                                                                  color: "#606060",
                                                                                  children: item.objs
                                                                                })
                                                                          }))
                                                                }), React.createElement(GridItem$BtsCore.make, {
                                                                  top: "0",
                                                                  bottom: "0",
                                                                  enterBackgroundColor: "none",
                                                                  backgroundColor: "none",
                                                                  xs: "auto",
                                                                  children: React.createElement(GridContainer$BtsCore.make, {
                                                                        backgroundColor: "none",
                                                                        direction: "row",
                                                                        justify: "center",
                                                                        alignItem: "center",
                                                                        children: null
                                                                      }, React.createElement(GridItem$BtsCore.make, {
                                                                            top: "0",
                                                                            bottom: "0",
                                                                            left: "0",
                                                                            enterBackgroundColor: "none",
                                                                            backgroundColor: "none",
                                                                            xs: "no",
                                                                            children: React.createElement(Typography$BtsCore.make, {
                                                                                  variant: "body2",
                                                                                  color: "#606060",
                                                                                  children: item.changeCases
                                                                                })
                                                                          }), React.createElement(GridItem$BtsCore.make, {
                                                                            top: "0",
                                                                            bottom: "0",
                                                                            left: "0",
                                                                            enterBackgroundColor: "none",
                                                                            backgroundColor: "none",
                                                                            xs: "auto",
                                                                            children: React.createElement(Typography$BtsCore.make, {
                                                                                  variant: "body2",
                                                                                  color: "#606060",
                                                                                  children: item.endDates
                                                                                })
                                                                          }))
                                                                }), React.createElement(GridItem$BtsCore.make, {
                                                                  top: "0",
                                                                  bottom: "0",
                                                                  enterBackgroundColor: "none",
                                                                  backgroundColor: "none",
                                                                  xs: "auto",
                                                                  children: React.createElement(Typography$BtsCore.make, {
                                                                        variant: "body2",
                                                                        color: "#606060",
                                                                        whiteSpace: "inherit",
                                                                        children: item.homepageMomos
                                                                      })
                                                                }), React.createElement(GridItem$BtsCore.make, {
                                                                  top: "0",
                                                                  bottom: "0",
                                                                  enterBackgroundColor: "none",
                                                                  backgroundColor: "none",
                                                                  xs: "auto",
                                                                  children: React.createElement(Typography$BtsCore.make, {
                                                                        variant: "body2",
                                                                        color: "#606060",
                                                                        whiteSpace: "inherit",
                                                                        children: item.mbs
                                                                      })
                                                                }), React.createElement(GridItem$BtsCore.make, {
                                                                  top: "0",
                                                                  bottom: "0",
                                                                  enterBackgroundColor: "none",
                                                                  backgroundColor: "none",
                                                                  xs: "auto",
                                                                  children: React.createElement(Typography$BtsCore.make, {
                                                                        variant: "body2",
                                                                        color: "#606060",
                                                                        whiteSpace: "inherit",
                                                                        children: item.worknumbers
                                                                      })
                                                                })) : React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                                                  top: "0",
                                                                  bottom: "0",
                                                                  left: "14",
                                                                  enterBackgroundColor: "none",
                                                                  backgroundColor: "none",
                                                                  xs: "auto",
                                                                  children: React.createElement(Typography$BtsCore.make, {
                                                                        variant: "subheading",
                                                                        children: item.postTS
                                                                      })
                                                                }), React.createElement(GridItem$BtsCore.make, {
                                                                  top: "0",
                                                                  bottom: "0",
                                                                  left: "14",
                                                                  enterBackgroundColor: "none",
                                                                  backgroundColor: "none",
                                                                  xs: "auto",
                                                                  children: React.createElement(Typography$BtsCore.make, {
                                                                        variant: "body2",
                                                                        color: "#606060",
                                                                        children: item.postTP
                                                                      })
                                                                }), React.createElement(GridItem$BtsCore.make, {
                                                                  top: "0",
                                                                  bottom: "0",
                                                                  enterBackgroundColor: "none",
                                                                  backgroundColor: "none",
                                                                  xs: "auto",
                                                                  children: React.createElement(Typography$BtsCore.make, {
                                                                        variant: "body2",
                                                                        color: "#606060",
                                                                        whiteSpace: "inherit",
                                                                        children: item.postTM
                                                                      })
                                                                }), React.createElement(GridItem$BtsCore.make, {
                                                                  top: "0",
                                                                  bottom: "0",
                                                                  enterBackgroundColor: "none",
                                                                  backgroundColor: "none",
                                                                  xs: "auto",
                                                                  children: React.createElement(Typography$BtsCore.make, {
                                                                        variant: "body2",
                                                                        color: "#606060",
                                                                        whiteSpace: "inherit",
                                                                        children: item.postTB
                                                                      })
                                                                })), React.createElement(GridItem$BtsCore.make, {
                                                            top: "0",
                                                            bottom: "0",
                                                            enterBackgroundColor: "none",
                                                            backgroundColor: "none",
                                                            xs: "auto",
                                                            children: React.createElement(Typography$BtsCore.make, {
                                                                  variant: "body2",
                                                                  color: item.colors,
                                                                  children: item.status
                                                                })
                                                          }))
                                                }), React.createElement(GridItem$BtsCore.make, {
                                                  top: "6",
                                                  right: "0",
                                                  bottom: "6",
                                                  left: "0",
                                                  xs: "auto",
                                                  children: React.createElement(Divider$BtsCore.make, { })
                                                }));
                                }), state.items)), React.createElement(BottomScroll$BtsCore.make, {
                            showBar: state.showItem,
                            disabled: state.showProgress,
                            onClick: clickScrollBar
                          }))
                }), React.createElement(DialogFull$BtsCore.make, {
                  showAnimation: state.showFull,
                  children: null
                }, React.createElement(DialogTitle$BtsCore.make, {
                      top: "22",
                      left: "64",
                      children: React.createElement(Typography$BtsCore.make, {
                            variant: "tile",
                            fontWeight: "600",
                            children: state.formTitle
                          })
                    }), React.createElement(DialogContent$BtsCore.make, {
                      children: React.createElement(DialogContentText$BtsCore.make, {
                            children: React.createElement(GridItem$BtsCore.make, {
                                  style: Together$BtsCore.marginAuto,
                                  top: "0",
                                  right: "0",
                                  bottom: "0",
                                  left: "54",
                                  xs: "12",
                                  maxWidth: "770px",
                                  children: React.createElement(GridContainer$BtsCore.make, {
                                        direction: "column",
                                        justify: "center",
                                        alignItem: "stretch",
                                        children: null
                                      }, React.createElement(GridItem$BtsCore.make, {
                                            style: {
                                              position: "sticky",
                                              top: "0px",
                                              zIndex: "1000"
                                            },
                                            top: "0",
                                            bottom: "6",
                                            left: "0",
                                            xs: "auto",
                                            children: React.createElement(GridContainer$BtsCore.make, {
                                                  direction: "row",
                                                  justify: "around",
                                                  alignItem: "center",
                                                  children: null
                                                }, React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(Tabs$BtsCore.make, {
                                                            id: "report-",
                                                            index: state.index,
                                                            height: "3",
                                                            children: $$Array.of_list(List.mapi((function (i, tabitem) {
                                                                        return React.createElement(Tab$BtsCore.make, {
                                                                                    showTab: tabitem.showTab,
                                                                                    maxWidth: "111.6",
                                                                                    borderRadius: "15",
                                                                                    id: "report-" + String(i),
                                                                                    animationName: "none",
                                                                                    onClick: (function (param) {
                                                                                        return Curry._1(clickItemTab, i);
                                                                                      }),
                                                                                    children: React.createElement(IconAction$BtsCore.make, {
                                                                                          width: "28",
                                                                                          height: "28",
                                                                                          animation: "leftRight",
                                                                                          src: tabitem.tabImage
                                                                                        })
                                                                                  });
                                                                      }), state.tabitems))
                                                          })
                                                    }), state.update ? React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                                            top: "0",
                                                            right: "0",
                                                            bottom: "0",
                                                            left: "0",
                                                            xs: "no",
                                                            children: React.createElement(Button$BtsCore.make, {
                                                                  disabled: state.showProgress,
                                                                  onClick: insertForm,
                                                                  children: React.createElement(ReactIntl.FormattedMessage, {
                                                                        id: "save",
                                                                        defaultMessage: "Save"
                                                                      })
                                                                })
                                                          }), $$Array.map((function (item) {
                                                              if (item.formSend) {
                                                                return React.createElement(GridItem$BtsCore.make, {
                                                                            top: "0",
                                                                            right: "0",
                                                                            bottom: "0",
                                                                            left: "0",
                                                                            xs: "no",
                                                                            children: React.createElement(Button$BtsCore.make, {
                                                                                  disabled: state.showProgress,
                                                                                  onClick: sendForm,
                                                                                  children: React.createElement(ReactIntl.FormattedMessage, {
                                                                                        id: "send",
                                                                                        defaultMessage: "Send"
                                                                                      })
                                                                                })
                                                                          });
                                                              } else {
                                                                return null;
                                                              }
                                                            }), state.formitems)) : null)
                                          }), tmp)
                                })
                          })
                    }), React.createElement(DialogActions$BtsCore.make, {
                      children: React.createElement("div", {
                            style: {
                              left: "10px",
                              position: "fixed",
                              top: "10px"
                            }
                          }, React.createElement(IconButton$BtsCore.make, {
                                padding: "12",
                                disabled: state.showProgress,
                                onClick: closeAnimationFull,
                                children: null
                              }, React.createElement(Tooltip$BtsCore.make, {
                                    location: "bottom",
                                    backgroundColor: "rgba(255,0,0,0.8)",
                                    children: React.createElement(ReactIntl.FormattedMessage, {
                                          id: "closed",
                                          defaultMessage: "Closed"
                                        })
                                  }), React.createElement(IconAction$BtsCore.make, {
                                    animation: "circle",
                                    src: Icons$BtsCore.clearBlack
                                  })))
                    })), React.createElement(DialogFull$BtsCore.make, {
                  showAnimation: state.showFileFull,
                  backgroundColor: "rgba(0,0,0,0.8)",
                  children: null
                }, React.createElement(DialogTitle$BtsCore.make, {
                      top: "22",
                      left: "64",
                      backgroundColor: "transparent",
                      children: React.createElement(Typography$BtsCore.make, {
                            variant: "tile",
                            color: "rgba(255,255,255,1)",
                            fontWeight: "600",
                            children: state.fileTile
                          })
                    }), React.createElement(DialogContent$BtsCore.make, {
                      style: {
                        overflow: "hidden"
                      },
                      children: React.createElement(DialogContentText$BtsCore.make, {
                            children: React.createElement(GridItem$BtsCore.make, {
                                  style: Together$BtsCore.marginAuto,
                                  top: "0",
                                  right: "0",
                                  bottom: "0",
                                  left: "54",
                                  enterBackgroundColor: "transparent",
                                  backgroundColor: "transparent",
                                  xs: "12",
                                  maxWidth: "770px",
                                  children: React.createElement(Iframe$BtsCore.make, {
                                        height: String(state.formHeight) + "px",
                                        src: state.filePath + state.fileSrc
                                      })
                                })
                          })
                    }), React.createElement(DialogActions$BtsCore.make, {
                      children: null
                    }, React.createElement("div", {
                          style: {
                            left: "10px",
                            position: "fixed",
                            top: "10px"
                          }
                        }, React.createElement(IconButton$BtsCore.make, {
                              enterBackgroundColor: "transparent",
                              downBackgroundColor: "transparent",
                              padding: "12",
                              disabled: state.showProgress,
                              onClick: closeFileFull,
                              children: React.createElement(IconAction$BtsCore.make, {
                                    animation: "circle",
                                    src: Icons$BtsCore.clearWhite
                                  })
                            })), React.createElement("div", {
                          style: {
                            left: "10px",
                            position: "fixed",
                            top: "64px"
                          }
                        }, React.createElement(IconButton$BtsCore.make, {
                              enterBackgroundColor: "transparent",
                              downBackgroundColor: "transparent",
                              padding: "12",
                              disabled: state.showProgress,
                              onClick: downloadFile,
                              children: React.createElement(IconAction$BtsCore.make, {
                                    animation: "leftRight",
                                    src: Icons$BtsCore.cloudDownloadWhite
                                  })
                            })))), React.createElement(SnackbarYoutube$BtsCore.make, {
                  showYoutube: state.showYoutube,
                  position: "bottomLeft",
                  children: /* tuple */[
                    React.createElement("span", undefined, state.youtubeText),
                    null
                  ]
                }));
}

var make = Inside;

export {
  newmbitem ,
  newphotoitem ,
  newgrotoitem ,
  reducer ,
  initialState ,
  make ,
  
}
/*  Not a pure module */
