// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as ReactIntl from "react-intl";
import * as Chip$BtsCore from "../../material-ui/core/Chip/Chip.bs.js";
import * as Data$BtsCore from "../../features/Data.bs.js";
import * as Path$BtsCore from "../../features/Path.bs.js";
import * as Button$BtsCore from "../../material-ui/core/Button/Button.bs.js";
import * as Status$BtsCore from "../../features/Status.bs.js";
import * as Switch$BtsCore from "../../material-ui/core/Switch/Switch.bs.js";
import * as Axiosapi$BtsCore from "../../features/Axiosapi.bs.js";
import * as GridItem$BtsCore from "../../material-ui/core/Grid/GridItem.bs.js";
import * as Together$BtsCore from "../../styles/Together/Together.bs.js";
import * as ReasonReactRouter from "reason-react/src/ReasonReactRouter.bs.js";
import * as Typography$BtsCore from "../../material-ui/core/Typography/Typography.bs.js";
import * as NewFacetube$BtsCore from "../../example/Facebook/NewFacetube.bs.js";
import * as SwitchColor$BtsCore from "../../controls/SwitchColor.bs.js";
import * as GridContainer$BtsCore from "../../material-ui/core/Grid/GridContainer.bs.js";
import * as SnackbarYoutube$BtsCore from "../../material-ui/core/Snackbar/SnackbarYoutube.bs.js";
import * as TextFieldStandard$BtsCore from "../../material-ui/core/TextField/TextFieldStandard.bs.js";
import * as TextFieldMultiline$BtsCore from "../../material-ui/core/TextField/TextFieldMultiline.bs.js";

((require('../../../scss/pages/Together/together.scss')));

function reducer(state, action) {
  if (typeof action === "number") {
    if (action === /* SettingError */0) {
      return {
              formLoad: state.formLoad,
              formWidth: state.formWidth,
              formHeight: state.formHeight,
              showProgress: state.showProgress,
              error: !state.error,
              insert: state.insert,
              update: state.update,
              delete: state.delete,
              export: state.export,
              formId: state.formId,
              tile: state.tile,
              items: state.items,
              showYoutube: state.showYoutube,
              youtubeText: state.youtubeText
            };
    } else {
      return {
              formLoad: state.formLoad,
              formWidth: state.formWidth,
              formHeight: state.formHeight,
              showProgress: !state.showProgress,
              error: state.error,
              insert: state.insert,
              update: state.update,
              delete: state.delete,
              export: state.export,
              formId: state.formId,
              tile: state.tile,
              items: state.items,
              showYoutube: state.showYoutube,
              youtubeText: state.youtubeText
            };
    }
  }
  switch (action.tag | 0) {
    case /* SettingFormLoad */0 :
        return {
                formLoad: !state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: action[0],
                tile: state.tile,
                items: state.items,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* SettingFormWidth */1 :
        return {
                formLoad: state.formLoad,
                formWidth: action[0],
                formHeight: action[1],
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                tile: state.tile,
                items: state.items,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ActionPermissItems */2 :
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: action[0],
                update: action[1],
                delete: action[2],
                export: action[3],
                formId: state.formId,
                tile: state.tile,
                items: state.items,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* SettingFormItems */3 :
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: action[0],
                tile: action[1],
                items: action[2],
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ActionSnackBar */4 :
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                tile: state.tile,
                items: state.items,
                showYoutube: action[1],
                youtubeText: action[0]
              };
    
  }
}

var initialState_items = [];

var initialState = {
  formLoad: false,
  formWidth: 0,
  formHeight: 0,
  showProgress: true,
  error: false,
  insert: false,
  update: false,
  delete: false,
  export: false,
  formId: "",
  tile: "",
  items: initialState_items,
  showYoutube: false,
  youtubeText: ""
};

function SignlistI(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var barShowRestoreAction = function (youtubeText) {
    Curry._1(dispatch, /* ActionSnackBar */Block.__(4, [
            youtubeText,
            true
          ]));
    setTimeout((function (param) {
            return Curry._1(dispatch, /* ActionSnackBar */Block.__(4, [
                          "",
                          false
                        ]));
          }), 5000);
    
  };
  var searchAJax = function (formId) {
    Axiosapi$BtsCore.SignlistI.search(Data$BtsCore.dFormData(formId, localStorage.getItem("newid"))).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* SettingFormItems */Block.__(3, [
                        response.data.formId,
                        response.data.tile,
                        response.data.items
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              } else {
                Curry._1(dispatch, /* SettingError */0);
                barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var permissAJax = function (param) {
    Axiosapi$BtsCore.Form.permiss(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
              return Promise.resolve((Curry._1(dispatch, /* ActionPermissItems */Block.__(2, [
                                  response.data.insert,
                                  response.data.update,
                                  response.data.delete,
                                  response.data.export
                                ])), searchAJax(ReasonReactRouter.dangerouslyGetInitialUrl(undefined).hash)));
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  React.useEffect((function () {
          if (state.formLoad) {
            return (function (param) {
                      console.log("action");
                      
                    });
          }
          Curry._1(dispatch, /* SettingFormLoad */Block.__(0, [ReasonReactRouter.dangerouslyGetInitialUrl(undefined).hash]));
          Curry._1(dispatch, /* SettingFormWidth */Block.__(1, [
                  window.innerWidth,
                  window.innerHeight
                ]));
          var timeId = permissAJax(undefined);
          return (function (param) {
                    return timeId;
                  });
        }));
  var handleResize = function ($$event) {
    return Curry._1(dispatch, /* SettingFormWidth */Block.__(1, [
                  $$event.currentTarget.innerWidth,
                  $$event.currentTarget.innerHeight
                ]));
  };
  React.useEffect((function () {
          var watchId = ReasonReactRouter.watchUrl((function (param) {
                  Curry._1(dispatch, /* SettingFormLoad */Block.__(0, [ReasonReactRouter.dangerouslyGetInitialUrl(undefined).hash]));
                  return Curry._1(dispatch, /* ActionShowProgress */1);
                }));
          window.addEventListener("resize", handleResize, true);
          return (function (param) {
                    ReasonReactRouter.unwatchUrl(watchId);
                    
                  });
        }), ([]));
  var signinForm = React.useCallback((function (param) {
          Curry._1(dispatch, /* ActionShowProgress */1);
          Axiosapi$BtsCore.SignlistI.send(Data$BtsCore.dFormData(state.formId, localStorage.getItem("newid"))).then((function (response) {
                    var match = response.data.status;
                    var tmp;
                    if (match === "istrue") {
                      sessionStorage.setItem("form", "signInSuccess");
                      tmp = ReasonReactRouter.push(Path$BtsCore.signlistPath);
                    } else {
                      barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */1);
                    }
                    return Promise.resolve(tmp);
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var signoutForm = React.useCallback((function (param) {
          Curry._1(dispatch, /* ActionShowProgress */1);
          Axiosapi$BtsCore.SignlistI.back(Data$BtsCore.dFormData(state.formId, localStorage.getItem("newid"))).then((function (response) {
                    var match = response.data.status;
                    var tmp;
                    if (match === "istrue") {
                      sessionStorage.setItem("form", "signOutSuccess");
                      tmp = ReasonReactRouter.push(Path$BtsCore.signlistPath);
                    } else {
                      barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */1);
                    }
                    return Promise.resolve(tmp);
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  return React.createElement(React.Fragment, undefined, React.createElement(NewFacetube$BtsCore.make, {
                  showProgress: state.showProgress,
                  error: state.error,
                  children: React.createElement(GridItem$BtsCore.make, {
                        style: Together$BtsCore.marginAuto,
                        top: "0",
                        right: "32",
                        bottom: "0",
                        left: "32",
                        xs: "12",
                        maxWidth: "770px",
                        children: React.createElement(GridContainer$BtsCore.make, {
                              direction: "column",
                              justify: "center",
                              alignItem: "stretch",
                              children: null
                            }, React.createElement(GridItem$BtsCore.make, {
                                  style: {
                                    position: "sticky",
                                    top: "0px",
                                    zIndex: "1000"
                                  },
                                  top: "0",
                                  left: "0",
                                  xs: "auto",
                                  children: React.createElement(GridContainer$BtsCore.make, {
                                        direction: "rowReverse",
                                        justify: "around",
                                        alignItem: "center",
                                        children: null
                                      }, React.createElement(GridItem$BtsCore.make, {
                                            top: "0",
                                            right: "0",
                                            bottom: "0",
                                            left: "0",
                                            xs: "no",
                                            children: React.createElement(Button$BtsCore.make, {
                                                  disabled: state.showProgress,
                                                  onClick: signoutForm,
                                                  children: React.createElement(ReactIntl.FormattedMessage, {
                                                        id: "Signlist.signout",
                                                        defaultMessage: "Signout"
                                                      })
                                                })
                                          }), React.createElement(GridItem$BtsCore.make, {
                                            top: "0",
                                            right: "0",
                                            bottom: "0",
                                            left: "0",
                                            xs: "no",
                                            children: React.createElement(Button$BtsCore.make, {
                                                  disabled: state.showProgress,
                                                  onClick: signinForm,
                                                  children: React.createElement(ReactIntl.FormattedMessage, {
                                                        id: "Signlist.signin",
                                                        defaultMessage: "Signin"
                                                      })
                                                })
                                          }), React.createElement(GridItem$BtsCore.make, {
                                            top: "0",
                                            right: "0",
                                            bottom: "0",
                                            left: "0",
                                            xs: "auto",
                                            children: null
                                          }))
                                }), $$Array.map((function (item) {
                                    return React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                                    style: {
                                                      height: "50px"
                                                    },
                                                    top: "0",
                                                    right: "6",
                                                    bottom: "0",
                                                    left: "6",
                                                    xs: "auto",
                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                          direction: "row",
                                                          justify: "center",
                                                          alignItem: "center",
                                                          children: null
                                                        }, React.createElement(GridItem$BtsCore.make, {
                                                              top: "25",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: React.createElement(Typography$BtsCore.make, {
                                                                    variant: "subheading",
                                                                    fontWeight: "bolder",
                                                                    children: item.postdate
                                                                  })
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              top: "25",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: React.createElement(Typography$BtsCore.make, {
                                                                    variant: "subheading",
                                                                    fontWeight: "bolder",
                                                                    children: item.postinfo
                                                                  })
                                                            }))
                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                    top: "0",
                                                    right: "0",
                                                    bottom: "0",
                                                    left: "0",
                                                    xs: "auto",
                                                    children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                          top: "12",
                                                          right: "0",
                                                          left: "0",
                                                          labelColor: "rgba(255,0,0,0.8)",
                                                          enterBorderColor: "rgba(255,0,0,0.8)",
                                                          downBorderColor: "rgba(255,0,0,0.6)",
                                                          borderColor: "rgba(0,0,0,0.2)",
                                                          value: item.subject,
                                                          disabled: true,
                                                          children: "文件名稱"
                                                        })
                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                    top: "0",
                                                    right: "0",
                                                    bottom: "0",
                                                    left: "0",
                                                    xs: "auto",
                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                          direction: "row",
                                                          justify: "center",
                                                          alignItem: "center",
                                                          children: null
                                                        }, React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.obj,
                                                                    disabled: true,
                                                                    children: "製程別"
                                                                  })
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.homepageMomo,
                                                                    disabled: true,
                                                                    children: "機種"
                                                                  })
                                                            }))
                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                    top: "0",
                                                    right: "6",
                                                    bottom: "6",
                                                    left: "6",
                                                    xs: "auto",
                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                          direction: "row",
                                                          justify: "start",
                                                          alignItem: "center",
                                                          children: $$Array.map((function (mbitem) {
                                                                  return React.createElement(GridItem$BtsCore.make, {
                                                                              top: "0",
                                                                              bottom: "0",
                                                                              left: "0",
                                                                              xs: "no",
                                                                              children: React.createElement(Chip$BtsCore.make, {
                                                                                    enterBorderWidth: "0",
                                                                                    downBorderWidth: "0",
                                                                                    borderWidth: "0",
                                                                                    children: /* tuple */[
                                                                                      React.createElement(Typography$BtsCore.make, {
                                                                                            variant: "subtitle2",
                                                                                            children: "S"
                                                                                          }),
                                                                                      React.createElement(Typography$BtsCore.make, {
                                                                                            variant: "subtitle2",
                                                                                            children: mbitem.mbValue
                                                                                          })
                                                                                    ]
                                                                                  })
                                                                            });
                                                                }), item.mbitems)
                                                        })
                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                    top: "0",
                                                    right: "6",
                                                    bottom: "6",
                                                    left: "6",
                                                    xs: "auto",
                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                          direction: "row",
                                                          justify: "start",
                                                          alignItem: "center",
                                                          children: $$Array.map((function (pageitem) {
                                                                  return React.createElement(GridItem$BtsCore.make, {
                                                                              top: "0",
                                                                              bottom: "0",
                                                                              left: "0",
                                                                              xs: "no",
                                                                              children: React.createElement(Chip$BtsCore.make, {
                                                                                    enterBorderWidth: "0",
                                                                                    downBorderWidth: "0",
                                                                                    borderWidth: "0",
                                                                                    children: /* tuple */[
                                                                                      React.createElement(Typography$BtsCore.make, {
                                                                                            variant: "subtitle2",
                                                                                            children: "S"
                                                                                          }),
                                                                                      React.createElement(Typography$BtsCore.make, {
                                                                                            variant: "subtitle2",
                                                                                            children: pageitem.mbValue
                                                                                          })
                                                                                    ]
                                                                                  })
                                                                            });
                                                                }), item.pageitems)
                                                        })
                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                    right: "0",
                                                    left: "0",
                                                    xs: "auto",
                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                          direction: "row",
                                                          justify: "center",
                                                          alignItem: "center",
                                                          children: null
                                                        }, React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: null
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: null
                                                            }))
                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                    top: "0",
                                                    right: "0",
                                                    bottom: "0",
                                                    left: "0",
                                                    xs: "auto",
                                                    children: React.createElement(TextFieldMultiline$BtsCore.make, {
                                                          top: "12",
                                                          right: "0",
                                                          left: "0",
                                                          labelColor: "rgba(255,0,0,0.8)",
                                                          enterBorderColor: "rgba(255,0,0,0.8)",
                                                          downBorderColor: "rgba(255,0,0,0.6)",
                                                          borderColor: "rgba(0,0,0,0.2)",
                                                          rows: 3,
                                                          value: item.body,
                                                          disabled: true,
                                                          children: "說明"
                                                        })
                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                    top: "0",
                                                    right: "0",
                                                    bottom: "0",
                                                    left: "0",
                                                    xs: "auto",
                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                          direction: "rowReverse",
                                                          justify: "center",
                                                          alignItem: "center",
                                                          children: null
                                                        }, React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: React.createElement(Switch$BtsCore.make, {
                                                                    right: "0",
                                                                    checked: item.limit,
                                                                    circleColor: SwitchColor$BtsCore.circle(item.limit),
                                                                    linearColor: SwitchColor$BtsCore.linear(item.limit),
                                                                    fontColor: SwitchColor$BtsCore.font(item.limit),
                                                                    disabled: true,
                                                                    children: "限期"
                                                                  })
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: React.createElement(Switch$BtsCore.make, {
                                                                    right: "0",
                                                                    checked: !item.limit,
                                                                    circleColor: SwitchColor$BtsCore.circle(!item.limit),
                                                                    linearColor: SwitchColor$BtsCore.linear(!item.limit),
                                                                    fontColor: SwitchColor$BtsCore.font(!item.limit),
                                                                    disabled: true,
                                                                    children: "無限期"
                                                                  })
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: null
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: null
                                                            }))
                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                    top: "0",
                                                    right: "0",
                                                    bottom: "0",
                                                    left: "0",
                                                    xs: "auto",
                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                          direction: "row",
                                                          justify: "center",
                                                          alignItem: "center",
                                                          children: null
                                                        }, React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.releaseDate,
                                                                    disabled: true,
                                                                    children: "發行日期"
                                                                  })
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.endDate,
                                                                    disabled: true,
                                                                    children: "到期日"
                                                                  })
                                                            }))
                                                  }));
                                  }), state.items))
                      })
                }), React.createElement(SnackbarYoutube$BtsCore.make, {
                  showYoutube: state.showYoutube,
                  position: "bottomLeft",
                  children: /* tuple */[
                    React.createElement("span", undefined, state.youtubeText),
                    null
                  ]
                }));
}

var make = SignlistI;

export {
  reducer ,
  initialState ,
  make ,
  
}
/*  Not a pure module */
