// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Setting$BtsCore from "../../../setting/Setting.bs.js";

function reducer(state, action) {
  if (action.tag) {
    return {
            enter: state.enter,
            down: action[0]
          };
  }
  var enter = action[0];
  return {
          enter: enter,
          down: enter ? state.down : false
        };
}

var initialState = {
  enter: false,
  down: false
};

function borderWidths(borderWidth) {
  if (borderWidth !== undefined) {
    return borderWidth + "px";
  } else {
    return "0px";
  }
}

function sizes(size) {
  if (size !== undefined) {
    return size;
  } else {
    return "100%";
  }
}

function scrollings(scrolling) {
  if (scrolling !== undefined) {
    return scrolling;
  } else {
    return "auto";
  }
}

function Iframe(Props) {
  var style = Props.style;
  var enterBorderWidth = Props.enterBorderWidth;
  var downBorderWidth = Props.downBorderWidth;
  var borderWidth = Props.borderWidth;
  var width = Props.width;
  var height = Props.height;
  var scrolling = Props.scrolling;
  var src = Props.src;
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var match$1 = state.enter;
  var match$2 = state.down;
  return React.createElement("iframe", {
              style: Object.assign(({}), {
                    borderWidth: match$1 ? (
                        match$2 ? borderWidths(downBorderWidth) : borderWidths(enterBorderWidth)
                      ) : borderWidths(borderWidth),
                    height: height !== undefined ? height : "100%",
                    width: width !== undefined ? width : "100%"
                  }, Setting$BtsCore.styleObjects(style)),
              scrolling: scrolling !== undefined ? scrolling : "auto",
              src: Setting$BtsCore.stringObjects(src),
              onMouseDown: (function (param) {
                  return Curry._1(dispatch, /* MouseUpDown */Block.__(1, [true]));
                }),
              onMouseEnter: (function (param) {
                  return Curry._1(dispatch, /* MouseEnterLeave */Block.__(0, [true]));
                }),
              onMouseLeave: (function (param) {
                  return Curry._1(dispatch, /* MouseEnterLeave */Block.__(0, [false]));
                }),
              onMouseUp: (function (param) {
                  return Curry._1(dispatch, /* MouseUpDown */Block.__(1, [false]));
                })
            });
}

var make = Iframe;

export {
  reducer ,
  initialState ,
  borderWidths ,
  sizes ,
  scrollings ,
  make ,
  
}
/* react Not a pure module */
