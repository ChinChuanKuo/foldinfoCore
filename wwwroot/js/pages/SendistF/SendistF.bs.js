// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as List from "bs-platform/lib/es6/list.js";
import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as ReactIntl from "react-intl";
import * as Tab$BtsCore from "../../material-ui/core/Tabs/Tab.bs.js";
import * as Data$BtsCore from "../../features/Data.bs.js";
import * as Path$BtsCore from "../../features/Path.bs.js";
import * as Tabs$BtsCore from "../../material-ui/core/Tabs/Tabs.bs.js";
import * as Icons$BtsCore from "../../material-ui/icon/Icons.bs.js";
import * as Button$BtsCore from "../../material-ui/core/Button/Button.bs.js";
import * as Status$BtsCore from "../../features/Status.bs.js";
import * as Axiosapi$BtsCore from "../../features/Axiosapi.bs.js";
import * as GridItem$BtsCore from "../../material-ui/core/Grid/GridItem.bs.js";
import * as MenuItem$BtsCore from "../../material-ui/core/MenuItem/MenuItem.bs.js";
import * as Together$BtsCore from "../../styles/Together/Together.bs.js";
import * as ReasonReactRouter from "reason-react/src/ReasonReactRouter.bs.js";
import * as IconAction$BtsCore from "../../material-ui/core/IconStyle/IconAction.bs.js";
import * as SelectMenu$BtsCore from "../../material-ui/core/Menu/SelectMenu.bs.js";
import * as IconGeneral$BtsCore from "../../material-ui/core/IconStyle/IconGeneral.bs.js";
import * as NewFacetube$BtsCore from "../../example/Facebook/NewFacetube.bs.js";
import * as GridContainer$BtsCore from "../../material-ui/core/Grid/GridContainer.bs.js";
import * as IconAnimation$BtsCore from "../../controls/IconAnimation.bs.js";
import * as SelectStandard$BtsCore from "../../material-ui/core/Select/SelectStandard.bs.js";
import * as BackgroundBoard$BtsCore from "../../example/Boards/BackgroundBoard.bs.js";
import * as SnackbarYoutube$BtsCore from "../../material-ui/core/Snackbar/SnackbarYoutube.bs.js";

((require('../../../scss/pages/Together/together.scss')));

function reducer(state, action) {
  if (typeof action === "number") {
    switch (action) {
      case /* SettingError */0 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: !state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  tabitems: state.tabitems,
                  index: state.index,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* SettingFormLoad */1 :
          return {
                  formLoad: !state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  tabitems: state.tabitems,
                  index: state.index,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ActionShowProgress */2 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: !state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  tabitems: state.tabitems,
                  index: state.index,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      
    }
  } else {
    switch (action.tag | 0) {
      case /* SettingFormWidth */0 :
          return {
                  formLoad: state.formLoad,
                  formWidth: action[0],
                  formHeight: action[1],
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  tabitems: state.tabitems,
                  index: state.index,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ActionPermissItems */1 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: action[0],
                  update: action[1],
                  delete: action[2],
                  export: action[3],
                  tabitems: state.tabitems,
                  index: state.index,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* SettingFormItems */2 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  tabitems: state.tabitems,
                  index: state.index,
                  items: action[0],
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClickItemTab */3 :
          var index = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  tabitems: List.mapi((function (i, tabitem) {
                          return {
                                  showTab: index === i,
                                  tabImage: tabitem.tabImage
                                };
                        }), state.tabitems),
                  index: index,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowGroupMenu */4 :
          var index$1 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  tabitems: state.tabitems,
                  index: state.index,
                  items: $$Array.mapi((function (i, item) {
                          if (index$1 === i) {
                            return {
                                    iid: item.iid,
                                    group: item.group,
                                    showGroupMenu: !item.showGroupMenu,
                                    groupitems: item.groupitems,
                                    id: item.id,
                                    name: item.name,
                                    showNameMenu: item.showNameMenu,
                                    nameitems: item.nameitems,
                                    itemModify: item.itemModify
                                  };
                          } else {
                            return item;
                          }
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClickGroupMenu */5 :
          var index$2 = action[1];
          var value = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  tabitems: state.tabitems,
                  index: state.index,
                  items: $$Array.mapi((function (i, item) {
                          if (index$2 === i) {
                            return {
                                    iid: item.iid,
                                    group: value,
                                    showGroupMenu: !item.showGroupMenu,
                                    groupitems: item.groupitems,
                                    id: item.id,
                                    name: item.name,
                                    showNameMenu: item.showNameMenu,
                                    nameitems: item.nameitems,
                                    itemModify: true
                                  };
                          } else {
                            return item;
                          }
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowNameMenu */6 :
          var index$3 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  tabitems: state.tabitems,
                  index: state.index,
                  items: $$Array.mapi((function (i, item) {
                          if (index$3 === i) {
                            return {
                                    iid: item.iid,
                                    group: item.group,
                                    showGroupMenu: item.showGroupMenu,
                                    groupitems: item.groupitems,
                                    id: item.id,
                                    name: item.name,
                                    showNameMenu: !item.showNameMenu,
                                    nameitems: item.nameitems,
                                    itemModify: item.itemModify
                                  };
                          } else {
                            return item;
                          }
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* SettingItemName */7 :
          var index$4 = action[1];
          var items = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  tabitems: state.tabitems,
                  index: state.index,
                  items: $$Array.mapi((function (i, item) {
                          if (index$4 === i) {
                            return {
                                    iid: item.iid,
                                    group: item.group,
                                    showGroupMenu: item.showGroupMenu,
                                    groupitems: item.groupitems,
                                    id: item.id,
                                    name: item.name,
                                    showNameMenu: item.showNameMenu,
                                    nameitems: items,
                                    itemModify: item.itemModify
                                  };
                          } else {
                            return item;
                          }
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClickNameMenu */8 :
          var index$5 = action[2];
          var value$1 = action[1];
          var key = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  tabitems: state.tabitems,
                  index: state.index,
                  items: $$Array.mapi((function (i, item) {
                          if (index$5 === i) {
                            return {
                                    iid: item.iid,
                                    group: item.group,
                                    showGroupMenu: item.showGroupMenu,
                                    groupitems: item.groupitems,
                                    id: key,
                                    name: value$1,
                                    showNameMenu: !item.showNameMenu,
                                    nameitems: item.nameitems,
                                    itemModify: true
                                  };
                          } else {
                            return item;
                          }
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ActionSnackBar */9 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  tabitems: state.tabitems,
                  index: state.index,
                  items: state.items,
                  showYoutube: action[1],
                  youtubeText: action[0]
                };
      
    }
  }
}

var initialState_tabitems = /* :: */[
  {
    showTab: true,
    tabImage: Icons$BtsCore.factoryBlack
  },
  /* [] */0
];

var initialState_items = [];

var initialState = {
  formLoad: false,
  formWidth: 0,
  formHeight: 0,
  showProgress: true,
  error: false,
  insert: false,
  update: false,
  delete: false,
  export: false,
  tabitems: initialState_tabitems,
  index: 0,
  items: initialState_items,
  showYoutube: false,
  youtubeText: ""
};

function SendistF(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var barShowRestoreAction = function (youtubeText) {
    Curry._1(dispatch, /* ActionSnackBar */Block.__(9, [
            youtubeText,
            true
          ]));
    setTimeout((function (param) {
            return Curry._1(dispatch, /* ActionSnackBar */Block.__(9, [
                          "",
                          false
                        ]));
          }), 5000);
    
  };
  var searchAJax = function (param) {
    Axiosapi$BtsCore.SendistF.search(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* SettingFormItems */Block.__(2, [response.data.items]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              } else {
                Curry._1(dispatch, /* SettingError */0);
                barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var permissAJax = function (param) {
    Axiosapi$BtsCore.Form.permiss(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
              return Promise.resolve((Curry._1(dispatch, /* ActionPermissItems */Block.__(1, [
                                  response.data.insert,
                                  response.data.update,
                                  response.data.delete,
                                  response.data.export
                                ])), searchAJax(undefined)));
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  React.useEffect((function () {
          var match = state.formLoad;
          if (match) {
            return (function (param) {
                      console.log("action");
                      
                    });
          }
          Curry._1(dispatch, /* SettingFormLoad */1);
          Curry._1(dispatch, /* SettingFormWidth */Block.__(0, [
                  window.innerWidth,
                  window.innerHeight
                ]));
          var timeId = permissAJax(undefined);
          return (function (param) {
                    return timeId;
                  });
        }));
  var handleResize = function ($$event) {
    return Curry._1(dispatch, /* SettingFormWidth */Block.__(0, [
                  $$event.currentTarget.innerWidth,
                  $$event.currentTarget.innerHeight
                ]));
  };
  React.useEffect((function () {
          window.addEventListener("resize", handleResize, true);
          return (function (param) {
                    
                  });
        }), ([]));
  var clickItemTab = React.useCallback((function (i) {
          return ReasonReactRouter.push(Path$BtsCore.sendistFPath);
        }));
  var insertForm = React.useCallback((function (param) {
          Curry._1(dispatch, /* ActionShowProgress */2);
          Axiosapi$BtsCore.SendistF.insert(Data$BtsCore.iItemsData(state.items.filter((function (item) {
                              return item.itemModify === true;
                            })), localStorage.getItem("newid"))).then((function (response) {
                    var match = response.data.status;
                    var tmp;
                    if (match === "istrue") {
                      barShowRestoreAction(Status$BtsCore.statusModule("saveSuccess"));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                    } else {
                      barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                    }
                    return Promise.resolve(tmp);
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var showGroupMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowGroupMenu */Block.__(4, [i]));
        }));
  var clickGroupMenu = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickGroupMenu */Block.__(5, [
                      value,
                      i
                    ]));
              Axiosapi$BtsCore.SendistF.sGroup(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                        return Promise.resolve(Curry._1(dispatch, /* SettingItemName */Block.__(7, [
                                          response.data.items,
                                          i
                                        ])));
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var showNameMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowNameMenu */Block.__(6, [i]));
        }));
  var clickNameMenu = React.useCallback((function (key) {
          return (function (value, i) {
              return Curry._1(dispatch, /* ClickNameMenu */Block.__(8, [
                            key,
                            value,
                            i
                          ]));
            });
        }));
  return React.createElement(React.Fragment, undefined, React.createElement(NewFacetube$BtsCore.make, {
                  showProgress: state.showProgress,
                  error: state.error,
                  children: React.createElement(GridItem$BtsCore.make, {
                        style: Together$BtsCore.marginAuto,
                        top: "0",
                        right: "32",
                        bottom: "0",
                        left: "32",
                        xs: "12",
                        maxWidth: "770px",
                        children: React.createElement(GridContainer$BtsCore.make, {
                              direction: "column",
                              justify: "center",
                              alignItem: "stretch",
                              children: null
                            }, React.createElement(GridItem$BtsCore.make, {
                                  style: {
                                    position: "sticky",
                                    top: "0px",
                                    zIndex: "1000"
                                  },
                                  top: "0",
                                  bottom: "6",
                                  xs: "auto",
                                  children: React.createElement(GridContainer$BtsCore.make, {
                                        backgroundColor: "transparent",
                                        direction: "row",
                                        justify: "between",
                                        alignItem: "center",
                                        children: null
                                      }, React.createElement(GridItem$BtsCore.make, {
                                            top: "0",
                                            right: "0",
                                            bottom: "0",
                                            left: "0",
                                            xs: "auto",
                                            children: React.createElement(Tabs$BtsCore.make, {
                                                  id: "send-",
                                                  index: state.index,
                                                  height: "3",
                                                  children: $$Array.of_list(List.mapi((function (i, tabitem) {
                                                              return React.createElement(Tab$BtsCore.make, {
                                                                          showTab: tabitem.showTab,
                                                                          maxWidth: "111.6",
                                                                          borderRadius: "15",
                                                                          id: "send-" + String(i),
                                                                          animationName: "none",
                                                                          onClick: (function (param) {
                                                                              return Curry._1(clickItemTab, i);
                                                                            }),
                                                                          children: React.createElement(IconAction$BtsCore.make, {
                                                                                width: "28",
                                                                                height: "28",
                                                                                animation: "leftRight",
                                                                                src: tabitem.tabImage
                                                                              })
                                                                        });
                                                            }), state.tabitems))
                                                })
                                          }), React.createElement(GridItem$BtsCore.make, {
                                            top: "0",
                                            right: "0",
                                            bottom: "0",
                                            left: "0",
                                            xs: "no",
                                            children: React.createElement(Button$BtsCore.make, {
                                                  variant: "button",
                                                  disabled: state.showProgress,
                                                  onClick: insertForm,
                                                  children: React.createElement(ReactIntl.FormattedMessage, {
                                                        id: "save",
                                                        defaultMessage: "Save"
                                                      })
                                                })
                                          }))
                                }), $$Array.mapi((function (i, item) {
                                    return React.createElement(GridItem$BtsCore.make, {
                                                style: Together$BtsCore.cursorPointer,
                                                enterBorderRadius: "10",
                                                enterBackgroundColor: "rgba(0,0,0,0.1)",
                                                xs: "auto",
                                                children: React.createElement(GridContainer$BtsCore.make, {
                                                      backgroundColor: "transparent",
                                                      direction: "row",
                                                      justify: "center",
                                                      alignItem: "center",
                                                      children: null
                                                    }, React.createElement(GridItem$BtsCore.make, {
                                                          top: "0",
                                                          right: "0",
                                                          bottom: "0",
                                                          left: "0",
                                                          enterBackgroundColor: "transparent",
                                                          backgroundColor: "transparent",
                                                          xs: "auto",
                                                          children: null
                                                        }, React.createElement(SelectStandard$BtsCore.make, {
                                                              top: "12",
                                                              right: "0",
                                                              left: "0",
                                                              labelColor: "rgba(255,0,0,0.8)",
                                                              tile: "部門",
                                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                                              downBorderColor: "rgba(255,0,0,0.6)",
                                                              borderColor: "rgba(0,0,0,0.2)",
                                                              value: item.group,
                                                              disabled: state.showProgress,
                                                              onClick: (function (param) {
                                                                  return Curry._1(showGroupMenu, i);
                                                                }),
                                                              children: /* tuple */[
                                                                item.showGroupMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                        top: "0",
                                                                        transform: "translate(0, 0)",
                                                                        maxHeight: "280",
                                                                        minHeight: "0",
                                                                        topLeft: "12",
                                                                        topRight: "12",
                                                                        bottomRight: "12",
                                                                        bottomLeft: "12",
                                                                        paddingRight: "8",
                                                                        paddingLeft: "8",
                                                                        children: $$Array.map((function (groupitem) {
                                                                                return React.createElement(MenuItem$BtsCore.make, {
                                                                                            top: "0",
                                                                                            right: "8",
                                                                                            bottom: "0",
                                                                                            left: "8",
                                                                                            disablePadding: groupitem.optionPadding,
                                                                                            topLeft: "12",
                                                                                            topRight: "12",
                                                                                            bottomRight: "12",
                                                                                            bottomLeft: "12",
                                                                                            onClick: (function (param) {
                                                                                                return Curry._2(clickGroupMenu, groupitem.value, i);
                                                                                              }),
                                                                                            children: groupitem.value
                                                                                          });
                                                                              }), item.groupitems)
                                                                      }) : null,
                                                                React.createElement(IconGeneral$BtsCore.make, {
                                                                      animation: IconAnimation$BtsCore.topDownRorate(item.showGroupMenu),
                                                                      src: Icons$BtsCore.arrowDownBlack
                                                                    })
                                                              ]
                                                            }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                              showBackground: item.showGroupMenu,
                                                              backgroundColor: "transparent",
                                                              onClick: (function (param) {
                                                                  return Curry._1(showGroupMenu, i);
                                                                })
                                                            })), React.createElement(GridItem$BtsCore.make, {
                                                          top: "0",
                                                          right: "0",
                                                          bottom: "0",
                                                          left: "0",
                                                          enterBackgroundColor: "transparent",
                                                          backgroundColor: "transparent",
                                                          xs: "auto",
                                                          children: null
                                                        }, React.createElement(SelectStandard$BtsCore.make, {
                                                              top: "12",
                                                              right: "0",
                                                              left: "0",
                                                              labelColor: "rgba(255,0,0,0.8)",
                                                              tile: "人員",
                                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                                              downBorderColor: "rgba(255,0,0,0.6)",
                                                              borderColor: "rgba(0,0,0,0.2)",
                                                              value: item.name,
                                                              disabled: state.showProgress,
                                                              onClick: (function (param) {
                                                                  return Curry._1(showNameMenu, i);
                                                                }),
                                                              children: /* tuple */[
                                                                item.showNameMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                        top: "0",
                                                                        transform: "translate(0, 0)",
                                                                        maxHeight: "280",
                                                                        minHeight: "0",
                                                                        topLeft: "12",
                                                                        topRight: "12",
                                                                        bottomRight: "12",
                                                                        bottomLeft: "12",
                                                                        paddingRight: "8",
                                                                        paddingLeft: "8",
                                                                        children: $$Array.map((function (nameitem) {
                                                                                return React.createElement(MenuItem$BtsCore.make, {
                                                                                            top: "0",
                                                                                            right: "8",
                                                                                            bottom: "0",
                                                                                            left: "8",
                                                                                            disablePadding: nameitem.padding,
                                                                                            topLeft: "12",
                                                                                            topRight: "12",
                                                                                            bottomRight: "12",
                                                                                            bottomLeft: "12",
                                                                                            onClick: (function (param) {
                                                                                                return Curry._3(clickNameMenu, nameitem.key, nameitem.value, i);
                                                                                              }),
                                                                                            children: nameitem.value
                                                                                          });
                                                                              }), item.nameitems)
                                                                      }) : null,
                                                                React.createElement(IconGeneral$BtsCore.make, {
                                                                      animation: IconAnimation$BtsCore.topDownRorate(item.showNameMenu),
                                                                      src: Icons$BtsCore.arrowDownBlack
                                                                    })
                                                              ]
                                                            }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                              showBackground: item.showNameMenu,
                                                              backgroundColor: "transparent",
                                                              onClick: (function (param) {
                                                                  return Curry._1(showNameMenu, i);
                                                                })
                                                            })))
                                              });
                                  }), state.items))
                      })
                }), React.createElement(SnackbarYoutube$BtsCore.make, {
                  showYoutube: state.showYoutube,
                  position: "bottomLeft",
                  children: /* tuple */[
                    React.createElement("span", undefined, state.youtubeText),
                    null
                  ]
                }));
}

var make = SendistF;

export {
  reducer ,
  initialState ,
  make ,
  
}
/*  Not a pure module */
