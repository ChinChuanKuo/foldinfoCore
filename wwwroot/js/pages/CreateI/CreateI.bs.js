// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Caml_obj from "bs-platform/lib/es6/caml_obj.js";
import * as Caml_array from "bs-platform/lib/es6/caml_array.js";
import * as ReactIntl from "react-intl";
import * as Chip$BtsCore from "../../material-ui/core/Chip/Chip.bs.js";
import * as Data$BtsCore from "../../features/Data.bs.js";
import * as Path$BtsCore from "../../features/Path.bs.js";
import * as Icons$BtsCore from "../../material-ui/icon/Icons.bs.js";
import * as Button$BtsCore from "../../material-ui/core/Button/Button.bs.js";
import * as Status$BtsCore from "../../features/Status.bs.js";
import * as Switch$BtsCore from "../../material-ui/core/Switch/Switch.bs.js";
import * as Axiosapi$BtsCore from "../../features/Axiosapi.bs.js";
import * as GridItem$BtsCore from "../../material-ui/core/Grid/GridItem.bs.js";
import * as MenuItem$BtsCore from "../../material-ui/core/MenuItem/MenuItem.bs.js";
import * as Together$BtsCore from "../../styles/Together/Together.bs.js";
import * as ReasonReactRouter from "reason-react/src/ReasonReactRouter.bs.js";
import * as IconAction$BtsCore from "../../material-ui/core/IconStyle/IconAction.bs.js";
import * as IconButton$BtsCore from "../../material-ui/core/IconButton/IconButton.bs.js";
import * as SelectMenu$BtsCore from "../../material-ui/core/Menu/SelectMenu.bs.js";
import * as Typography$BtsCore from "../../material-ui/core/Typography/Typography.bs.js";
import * as IconGeneral$BtsCore from "../../material-ui/core/IconStyle/IconGeneral.bs.js";
import * as NewFacetube$BtsCore from "../../example/Facebook/NewFacetube.bs.js";
import * as OtherUpload$BtsCore from "../../example/Uploads/OtherUpload.bs.js";
import * as SwitchColor$BtsCore from "../../controls/SwitchColor.bs.js";
import * as GridContainer$BtsCore from "../../material-ui/core/Grid/GridContainer.bs.js";
import * as IconAnimation$BtsCore from "../../controls/IconAnimation.bs.js";
import * as SelectStandard$BtsCore from "../../material-ui/core/Select/SelectStandard.bs.js";
import * as BackgroundBoard$BtsCore from "../../example/Boards/BackgroundBoard.bs.js";
import * as SnackbarYoutube$BtsCore from "../../material-ui/core/Snackbar/SnackbarYoutube.bs.js";
import * as TextFieldStandard$BtsCore from "../../material-ui/core/TextField/TextFieldStandard.bs.js";
import * as TextFieldMultiline$BtsCore from "../../material-ui/core/TextField/TextFieldMultiline.bs.js";

((require('../../../scss/pages/Together/together.scss')));

function newmbitem(mbId, mbValue) {
  return [{
            mbId: mbId,
            mbValue: mbValue
          }];
}

function reducer(state, action) {
  if (typeof action === "number") {
    switch (action) {
      case /* SettingError */0 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: !state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* SettingFormLoad */1 :
          return {
                  formLoad: !state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ActionShowProgress */2 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: !state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      
    }
  } else {
    switch (action.tag | 0) {
      case /* SettingFormWidth */0 :
          return {
                  formLoad: state.formLoad,
                  formWidth: action[0],
                  formHeight: action[1],
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ActionPermissItems */1 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: action[0],
                  update: action[1],
                  delete: action[2],
                  export: action[3],
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* SettingFormItems */2 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: action[0],
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowTypeMenu */3 :
          var index = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.showTypeMenu = !item.showTypeMenu;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClickTypeMenu */4 :
          var index$1 = action[1];
          var value = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$1 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.type_ = value;
                          newrecord.showTypeMenu = !item.showTypeMenu;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowGroupMenu */5 :
          var index$2 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$2 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.showGroupMenu = !item.showGroupMenu;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClickGroupMenu */6 :
          var index$3 = action[1];
          var value$1 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$3 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.postGroup = value$1;
                          newrecord.showGroupMenu = !item.showGroupMenu;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowNameMenu */7 :
          var index$4 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$4 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.showNameMenu = !item.showNameMenu;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* SettingItemName */8 :
          var index$5 = action[1];
          var items = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$5 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.nameitems = items;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClickNameMenu */9 :
          var index$6 = action[1];
          var value$2 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$6 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.postName = value$2;
                          newrecord.showNameMenu = !item.showNameMenu;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ChangeSubject */10 :
          var index$7 = action[1];
          var value$3 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$7 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.subject = value$3;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowObjMenu */11 :
          var index$8 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$8 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.showObjMenu = !item.showObjMenu;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClickObjMenu */12 :
          var index$9 = action[1];
          var value$4 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$9 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.obj = value$4;
                          newrecord.showObjMenu = !item.showObjMenu;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ChangeMomo */13 :
          var index$10 = action[1];
          var value$5 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$10 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.homepageMomo = value$5;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClearMbItem */14 :
          var index$11 = action[1];
          var mbId = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$11 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.mbitems = item.mbitems.filter((function (mbitem) {
                                  return mbitem.mbId !== mbId;
                                }));
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowMtstMenu */15 :
          var index$12 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$12 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.showMtstMenu = !item.showMtstMenu;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClickMtstMenu */16 :
          var index$13 = action[1];
          var value$6 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$13 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.mtst = value$6;
                          newrecord.showMtstMenu = !item.showMtstMenu;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowMbstMenu */17 :
          var index$14 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$14 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.showMbstMenu = !item.showMbstMenu;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* SettingItemModel */18 :
          var index$15 = action[1];
          var items$1 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$15 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.mbstitems = items$1;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* AddMbItem */19 :
          var index$16 = action[1];
          var value$7 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$16 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          var mbId = item.mbitems.length === 0 ? 0 : Caml_array.caml_array_get(item.mbitems, item.mbitems.length - 1 | 0).mbId + 1 | 0;
                          newrecord.mbitems = $$Array.append(item.mbitems, [{
                                  mbId: mbId,
                                  mbValue: value$7
                                }]);
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClickMbstMenu */20 :
          var index$17 = action[1];
          var value$8 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$17 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.mbst = value$8;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClearPageItem */21 :
          var index$18 = action[1];
          var mbId$1 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$18 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.pageitems = item.pageitems.filter((function (mbitem) {
                                  return mbitem.mbId !== mbId$1;
                                }));
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowCustom */22 :
          var index$19 = action[1];
          var showCustom = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$19 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.showCustom = showCustom;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* SettingItemCustom */23 :
          var index$20 = action[1];
          var items$2 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$20 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.customitems = items$2;
                          newrecord.showCustom = true;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ChangeCustom */24 :
          var index$21 = action[1];
          var value$9 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$21 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.custom = value$9;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClickItemCustom */25 :
          var index$22 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$22 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.showCustom = !item.showCustom;
                          newrecord.custom = "";
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* AddCustomItem */26 :
          var index$23 = action[1];
          var value$10 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$23 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          var mbId = item.pageitems.length === 0 ? 0 : Caml_array.caml_array_get(item.pageitems, item.pageitems.length - 1 | 0).mbId + 1 | 0;
                          newrecord.pageitems = $$Array.append(item.pageitems, [{
                                  mbId: mbId,
                                  mbValue: value$10
                                }]);
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowDrop */27 :
          var index$24 = action[1];
          var showDrop = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$24 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.showDrop = showDrop;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowFile */28 :
          var index$25 = action[9];
          var date = action[8];
          var extension = action[7];
          var encryption = action[6];
          var original = action[5];
          var path = action[4];
          var src = action[3];
          var showAudio = action[2];
          var showVideo = action[1];
          var showImage = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$25 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.date = date;
                          newrecord.extension = extension;
                          newrecord.encryption = encryption;
                          newrecord.original = original;
                          newrecord.path = path;
                          newrecord.src = src;
                          newrecord.showAudio = showAudio;
                          newrecord.showVideo = showVideo;
                          newrecord.showImage = showImage;
                          newrecord.showFile = true;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowPdfDrop */29 :
          var index$26 = action[1];
          var showDrop$1 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$26 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.showPdfDrop = showDrop$1;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowPdfFile */30 :
          var index$27 = action[9];
          var pdfDate = action[8];
          var pdfExtension = action[7];
          var pdfEncryption = action[6];
          var pdfOriginal = action[5];
          var pdfPath = action[4];
          var pdfSrc = action[3];
          var showPdfAudio = action[2];
          var showPdfVideo = action[1];
          var showPdfImage = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$27 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.pdfDate = pdfDate;
                          newrecord.pdfExtension = pdfExtension;
                          newrecord.pdfEncryption = pdfEncryption;
                          newrecord.pdfOriginal = pdfOriginal;
                          newrecord.pdfPath = pdfPath;
                          newrecord.pdfSrc = pdfSrc;
                          newrecord.showPdfAudio = showPdfAudio;
                          newrecord.showPdfVideo = showPdfVideo;
                          newrecord.showPdfImage = showPdfImage;
                          newrecord.showPdfFile = true;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowTotal */31 :
          var index$28 = action[1];
          var value$11 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$28 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.final = value$11;
                          newrecord.showTotal = true;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ChangeFirst */32 :
          var index$29 = action[1];
          var value$12 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$29 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.first = value$12;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ChangeFinal */33 :
          var index$30 = action[1];
          var value$13 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$30 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.final = value$13;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* RemovePage */34 :
          var index$31 = action[1];
          var value$14 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$31 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.final = value$14;
                          newrecord.first = "1";
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ChangeBody */35 :
          var index$32 = action[1];
          var value$15 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$32 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.body = value$15;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ChangeReleaseDate */36 :
          var index$33 = action[1];
          var value$16 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$33 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.releaseDate = value$16;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* SwitchLimit */37 :
          var index$34 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$34 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.limit = !item.limit;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ChangeEndDate */38 :
          var index$35 = action[1];
          var value$17 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: $$Array.mapi((function (i, item) {
                          if (index$35 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.endDate = value$17;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ActionSnackBar */39 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  items: state.items,
                  showYoutube: action[1],
                  youtubeText: action[0]
                };
      
    }
  }
}

var initialState_items = [];

var initialState = {
  formLoad: false,
  formWidth: 0,
  formHeight: 0,
  showProgress: true,
  error: false,
  insert: false,
  update: false,
  delete: false,
  export: false,
  items: initialState_items,
  showYoutube: false,
  youtubeText: ""
};

function CreateI(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var fileRef = React.useRef(null);
  var barShowRestoreAction = function (youtubeText) {
    Curry._1(dispatch, /* ActionSnackBar */Block.__(39, [
            youtubeText,
            true
          ]));
    setTimeout((function (param) {
            return Curry._1(dispatch, /* ActionSnackBar */Block.__(39, [
                          "",
                          false
                        ]));
          }), 5000);
    
  };
  var searchAJax = function (param) {
    Axiosapi$BtsCore.CreateI.search(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* SettingFormItems */Block.__(2, [response.data.items]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              } else {
                Curry._1(dispatch, /* SettingError */0);
                barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var permissAJax = function (param) {
    Axiosapi$BtsCore.Form.permiss(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
              return Promise.resolve((Curry._1(dispatch, /* ActionPermissItems */Block.__(1, [
                                  response.data.insert,
                                  response.data.update,
                                  response.data.delete,
                                  response.data.export
                                ])), searchAJax(undefined)));
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  React.useEffect((function () {
          var match = state.formLoad;
          if (match) {
            return (function (param) {
                      console.log("action");
                      
                    });
          }
          Curry._1(dispatch, /* SettingFormLoad */1);
          Curry._1(dispatch, /* SettingFormWidth */Block.__(0, [
                  window.innerWidth,
                  window.innerHeight
                ]));
          var timeId = permissAJax(undefined);
          return (function (param) {
                    return timeId;
                  });
        }));
  var handleResize = function ($$event) {
    return Curry._1(dispatch, /* SettingFormWidth */Block.__(0, [
                  $$event.currentTarget.innerWidth,
                  $$event.currentTarget.innerHeight
                ]));
  };
  React.useEffect((function () {
          window.addEventListener("resize", handleResize, true);
          return (function (param) {
                    
                  });
        }), ([]));
  var insertForm = React.useCallback((function (param) {
          Curry._1(dispatch, /* ActionShowProgress */2);
          Axiosapi$BtsCore.CreateI.insert(Data$BtsCore.iItemsData(state.items, localStorage.getItem("newid"))).then((function (response) {
                    var match = response.data.status;
                    var tmp;
                    if (match === "istrue") {
                      sessionStorage.setItem("form", "saveSuccess");
                      tmp = ReasonReactRouter.push(Path$BtsCore.isoFilePath);
                    } else {
                      barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                    }
                    return Promise.resolve(tmp);
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var sendForm = React.useCallback((function (param) {
          Curry._1(dispatch, /* ActionShowProgress */2);
          Axiosapi$BtsCore.CreateI.send(Data$BtsCore.iItemsData(state.items, localStorage.getItem("newid"))).then((function (response) {
                    var match = response.data.status;
                    var tmp;
                    if (match === "istrue") {
                      sessionStorage.setItem("form", "sendSuccess");
                      tmp = ReasonReactRouter.push(Path$BtsCore.isoFilePath);
                    } else {
                      barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                    }
                    return Promise.resolve(tmp);
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var showTypeMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowTypeMenu */Block.__(3, [i]));
        }));
  var clickTypeMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickTypeMenu */Block.__(4, [
                            value,
                            i
                          ]));
            });
        }));
  var showGroupMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowGroupMenu */Block.__(5, [i]));
        }));
  var clickGroupMenu = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickGroupMenu */Block.__(6, [
                      value,
                      i
                    ]));
              Axiosapi$BtsCore.CreateI.sGroup(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                        return Promise.resolve(Curry._1(dispatch, /* SettingItemName */Block.__(8, [
                                          response.data.items,
                                          i
                                        ])));
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var showNameMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowNameMenu */Block.__(7, [i]));
        }));
  var clickNameMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickNameMenu */Block.__(9, [
                            value,
                            i
                          ]));
            });
        }));
  var changeSubject = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeSubject */Block.__(10, [
                            value,
                            i
                          ]));
            });
        }));
  var showObjMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowObjMenu */Block.__(11, [i]));
        }));
  var clickObjMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickObjMenu */Block.__(12, [
                            value,
                            i
                          ]));
            });
        }));
  var changeMomo = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeMomo */Block.__(13, [
                            value,
                            i
                          ]));
            });
        }));
  var clearMbItem = React.useCallback((function (mbId) {
          return (function (i) {
              return Curry._1(dispatch, /* ClearMbItem */Block.__(14, [
                            mbId,
                            i
                          ]));
            });
        }));
  var showMtstMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowMtstMenu */Block.__(15, [i]));
        }));
  var clickMtstMenu = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickMtstMenu */Block.__(16, [
                      value,
                      i
                    ]));
              Axiosapi$BtsCore.CreateI.sModel(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                        return Promise.resolve(Curry._1(dispatch, /* SettingItemModel */Block.__(18, [
                                          response.data.items,
                                          i
                                        ])));
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var showMbstMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowMbstMenu */Block.__(17, [i]));
        }));
  var clickMbstMenu = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickMbstMenu */Block.__(20, [
                      value,
                      i
                    ]));
              return Curry._1(dispatch, /* AddMbItem */Block.__(19, [
                            value,
                            i
                          ]));
            });
        }));
  var clearPageItem = React.useCallback((function (mbId) {
          return (function (i) {
              return Curry._1(dispatch, /* ClearPageItem */Block.__(21, [
                            mbId,
                            i
                          ]));
            });
        }));
  var changeCustom = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ChangeCustom */Block.__(24, [
                      value,
                      i
                    ]));
              Axiosapi$BtsCore.CreateI.sCustom(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                        return Promise.resolve(Curry._1(dispatch, /* SettingItemCustom */Block.__(23, [
                                          response.data.items,
                                          i
                                        ])));
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var keydownCustom = React.useCallback((function (keyCode) {
          return (function (value, i) {
              if (keyCode === 13) {
                Axiosapi$BtsCore.CreateI.cCustom(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                          var match = response.data.status;
                          var tmp;
                          if (match === "istrue") {
                            Curry._1(dispatch, /* ClickItemCustom */Block.__(25, [i]));
                            tmp = Curry._1(dispatch, /* AddCustomItem */Block.__(26, [
                                    value,
                                    i
                                  ]));
                          } else {
                            tmp = barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                          }
                          return Promise.resolve(tmp);
                        })).catch((function (error) {
                        return Promise.resolve((console.log(error), undefined));
                      }));
                return ;
              }
              
            });
        }));
  var showCustom = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowCustom */Block.__(22, [
                        false,
                        i
                      ]));
        }));
  var clickItemCustom = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickItemCustom */Block.__(25, [i]));
              return Curry._1(dispatch, /* AddCustomItem */Block.__(26, [
                            value,
                            i
                          ]));
            });
        }));
  var dragOverFile = React.useCallback((function ($$event) {
          return (function (i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              return Curry._1(dispatch, /* ShowDrop */Block.__(27, [
                            true,
                            i
                          ]));
            });
        }));
  var dragLeaveFile = React.useCallback((function ($$event) {
          return (function (i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              return Curry._1(dispatch, /* ShowDrop */Block.__(27, [
                            false,
                            i
                          ]));
            });
        }));
  var uploadAJax = function (files, i) {
    var formData = new FormData();
    formData.append("file", files);
    Axiosapi$BtsCore.Files.upload(formData).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* ShowFile */Block.__(28, [
                        response.data.images,
                        response.data.videos,
                        response.data.audios,
                        response.data.src,
                        response.data.imagePath,
                        response.data.original,
                        response.data.encryption,
                        response.data.extension,
                        response.data.date,
                        i
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              } else {
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var dropFile = React.useCallback((function ($$event) {
          return (function (value, i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              Curry._1(dispatch, /* ActionShowProgress */2);
              Curry._1(dispatch, /* ShowDrop */Block.__(27, [
                      false,
                      i
                    ]));
              return uploadAJax(value, i);
            });
        }));
  var chooseFile = React.useCallback((function (param) {
          var el = fileRef.current;
          if (!(el == null)) {
            el.click();
            return ;
          }
          
        }));
  var changeFile = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ActionShowProgress */2);
              return uploadAJax(value, i);
            });
        }));
  var transForm = React.useCallback((function (path) {
          return (function (original, encryption, extension, i) {
              Curry._1(dispatch, /* ActionShowProgress */2);
              Axiosapi$BtsCore.Files.transfer(Data$BtsCore.sFileData(path, original, encryption, extension, localStorage.getItem("newid"))).then((function (response) {
                        var match = response.data.status;
                        var tmp;
                        if (match === "istrue") {
                          Curry._1(dispatch, /* ShowPdfFile */Block.__(30, [
                                  response.data.images,
                                  response.data.videos,
                                  response.data.audios,
                                  response.data.src,
                                  response.data.imagePath,
                                  response.data.original,
                                  response.data.encryption,
                                  response.data.extension,
                                  response.data.date,
                                  i
                                ]));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        } else {
                          barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        }
                        return Promise.resolve(tmp);
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var dragOverPdfFile = React.useCallback((function ($$event) {
          return (function (i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              return Curry._1(dispatch, /* ShowPdfDrop */Block.__(29, [
                            true,
                            i
                          ]));
            });
        }));
  var dragLeavePdfFile = React.useCallback((function ($$event) {
          return (function (i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              return Curry._1(dispatch, /* ShowPdfDrop */Block.__(29, [
                            false,
                            i
                          ]));
            });
        }));
  var upPdfAJax = function (files, i) {
    var formData = new FormData();
    formData.append("file", files);
    Axiosapi$BtsCore.Files.upload(formData).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* ShowPdfFile */Block.__(30, [
                        response.data.images,
                        response.data.videos,
                        response.data.audios,
                        response.data.src,
                        response.data.imagePath,
                        response.data.original,
                        response.data.encryption,
                        response.data.extension,
                        response.data.date,
                        i
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              } else {
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var dropPdfFile = React.useCallback((function ($$event) {
          return (function (value, i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              Curry._1(dispatch, /* ActionShowProgress */2);
              Curry._1(dispatch, /* ShowPdfDrop */Block.__(29, [
                      false,
                      i
                    ]));
              return upPdfAJax(value, i);
            });
        }));
  var changePdfFile = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ActionShowProgress */2);
              return upPdfAJax(value, i);
            });
        }));
  var totalForm = React.useCallback((function (path) {
          return (function (original, encryption, extension, i) {
              Curry._1(dispatch, /* ActionShowProgress */2);
              Axiosapi$BtsCore.Files.total(Data$BtsCore.sFileData(path, original, encryption, extension, localStorage.getItem("newid"))).then((function (response) {
                        var match = response.data.status;
                        var tmp;
                        if (match === "istrue") {
                          Curry._1(dispatch, /* ShowTotal */Block.__(31, [
                                  response.data.value,
                                  i
                                ]));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        } else {
                          barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        }
                        return Promise.resolve(tmp);
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var changeFirst = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeFirst */Block.__(32, [
                            value,
                            i
                          ]));
            });
        }));
  var changeFinal = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeFinal */Block.__(33, [
                            value,
                            i
                          ]));
            });
        }));
  var removeFile = React.useCallback((function (path) {
          return (function (original, encryption, extension, first, $$final, i) {
              Curry._1(dispatch, /* ActionShowProgress */2);
              Axiosapi$BtsCore.Files.remove(Data$BtsCore.rFileData(path, original, encryption, extension, first, $$final, localStorage.getItem("newid"))).then((function (response) {
                        var match = response.data.status;
                        var tmp;
                        if (match === "istrue") {
                          Curry._1(dispatch, /* RemovePage */Block.__(34, [
                                  response.data.value,
                                  i
                                ]));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        } else {
                          barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                          tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                        }
                        return Promise.resolve(tmp);
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var changeBody = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeBody */Block.__(35, [
                            value,
                            i
                          ]));
            });
        }));
  var changeReleaseDate = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeReleaseDate */Block.__(36, [
                            value,
                            i
                          ]));
            });
        }));
  var switchLimit = React.useCallback((function (i) {
          return Curry._1(dispatch, /* SwitchLimit */Block.__(37, [i]));
        }));
  var changeEndDate = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeEndDate */Block.__(38, [
                            value,
                            i
                          ]));
            });
        }));
  return React.createElement(React.Fragment, undefined, React.createElement(NewFacetube$BtsCore.make, {
                  showProgress: state.showProgress,
                  error: state.error,
                  children: React.createElement(GridItem$BtsCore.make, {
                        style: Together$BtsCore.marginAuto,
                        top: "0",
                        right: "32",
                        left: "32",
                        xs: "12",
                        maxWidth: "770px",
                        children: React.createElement(GridContainer$BtsCore.make, {
                              direction: "column",
                              justify: "center",
                              alignItem: "stretch",
                              children: null
                            }, state.insert ? React.createElement(GridItem$BtsCore.make, {
                                    style: {
                                      position: "sticky",
                                      top: "0px",
                                      zIndex: "1000"
                                    },
                                    top: "0",
                                    left: "0",
                                    xs: "auto",
                                    children: React.createElement(GridContainer$BtsCore.make, {
                                          direction: "rowReverse",
                                          justify: "between",
                                          alignItem: "center",
                                          children: null
                                        }, React.createElement(GridItem$BtsCore.make, {
                                              top: "0",
                                              right: "0",
                                              bottom: "0",
                                              left: "0",
                                              xs: "no",
                                              children: React.createElement(Button$BtsCore.make, {
                                                    disabled: state.showProgress,
                                                    onClick: sendForm,
                                                    children: React.createElement(ReactIntl.FormattedMessage, {
                                                          id: "send",
                                                          defaultMessage: "Send"
                                                        })
                                                  })
                                            }), React.createElement(GridItem$BtsCore.make, {
                                              top: "0",
                                              right: "0",
                                              bottom: "0",
                                              left: "0",
                                              xs: "no",
                                              children: React.createElement(Button$BtsCore.make, {
                                                    disabled: state.showProgress,
                                                    onClick: insertForm,
                                                    children: React.createElement(ReactIntl.FormattedMessage, {
                                                          id: "save",
                                                          defaultMessage: "Save"
                                                        })
                                                  })
                                            }), React.createElement(GridItem$BtsCore.make, {
                                              top: "0",
                                              right: "0",
                                              bottom: "0",
                                              left: "0",
                                              xs: "auto",
                                              children: null
                                            }))
                                  }) : null, $$Array.mapi((function (i, item) {
                                    var match = item.showPdfFile;
                                    var match$1 = item.showTotal;
                                    return React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                                    top: "0",
                                                    right: "0",
                                                    bottom: "0",
                                                    left: "0",
                                                    xs: "auto",
                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                          direction: "row",
                                                          justify: "center",
                                                          alignItem: "center",
                                                          children: null
                                                        }, React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: null
                                                            }, React.createElement(SelectStandard$BtsCore.make, {
                                                                  top: "12",
                                                                  right: "0",
                                                                  left: "0",
                                                                  labelColor: "rgba(255,0,0,0.8)",
                                                                  tile: "三階文件類型",
                                                                  enterBorderColor: "rgba(255,0,0,0.8)",
                                                                  downBorderColor: "rgba(255,0,0,0.6)",
                                                                  borderColor: "rgba(0,0,0,0.2)",
                                                                  value: item.type_,
                                                                  disabled: state.showProgress,
                                                                  onClick: (function (param) {
                                                                      return Curry._1(showTypeMenu, i);
                                                                    }),
                                                                  children: /* tuple */[
                                                                    item.showTypeMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                            top: "0",
                                                                            transform: "translate(0, 0)",
                                                                            maxHeight: "280",
                                                                            minHeight: "0",
                                                                            topLeft: "12",
                                                                            topRight: "12",
                                                                            bottomRight: "12",
                                                                            bottomLeft: "12",
                                                                            paddingRight: "8",
                                                                            paddingLeft: "8",
                                                                            children: $$Array.map((function (typeitem) {
                                                                                    return React.createElement(MenuItem$BtsCore.make, {
                                                                                                top: "0",
                                                                                                right: "8",
                                                                                                bottom: "0",
                                                                                                left: "8",
                                                                                                disablePadding: typeitem.optionPadding,
                                                                                                topLeft: "12",
                                                                                                topRight: "12",
                                                                                                bottomRight: "12",
                                                                                                bottomLeft: "12",
                                                                                                onClick: (function (param) {
                                                                                                    return Curry._2(clickTypeMenu, typeitem.value, i);
                                                                                                  }),
                                                                                                children: typeitem.value
                                                                                              });
                                                                                  }), item.typeitems)
                                                                          }) : null,
                                                                    React.createElement(IconGeneral$BtsCore.make, {
                                                                          animation: IconAnimation$BtsCore.topDownRorate(item.showTypeMenu),
                                                                          src: Icons$BtsCore.arrowDownBlack
                                                                        })
                                                                  ]
                                                                }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                  showBackground: item.showTypeMenu,
                                                                  backgroundColor: "transparent",
                                                                  onClick: (function (param) {
                                                                      return Curry._1(showTypeMenu, i);
                                                                    })
                                                                })), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: null
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: null
                                                            }))
                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                    top: "0",
                                                    right: "0",
                                                    bottom: "0",
                                                    left: "0",
                                                    xs: "auto",
                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                          direction: "row",
                                                          justify: "center",
                                                          alignItem: "center",
                                                          children: null
                                                        }, React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: null
                                                            }, React.createElement(SelectStandard$BtsCore.make, {
                                                                  top: "12",
                                                                  right: "0",
                                                                  left: "0",
                                                                  labelColor: "rgba(255,0,0,0.8)",
                                                                  tile: "撰寫部門",
                                                                  enterBorderColor: "rgba(255,0,0,0.8)",
                                                                  downBorderColor: "rgba(255,0,0,0.6)",
                                                                  borderColor: "rgba(0,0,0,0.2)",
                                                                  value: item.postGroup,
                                                                  disabled: state.showProgress,
                                                                  onClick: (function (param) {
                                                                      return Curry._1(showGroupMenu, i);
                                                                    }),
                                                                  children: /* tuple */[
                                                                    item.showGroupMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                            top: "0",
                                                                            transform: "translate(0, 0)",
                                                                            maxHeight: "280",
                                                                            minHeight: "0",
                                                                            topLeft: "12",
                                                                            topRight: "12",
                                                                            bottomRight: "12",
                                                                            bottomLeft: "12",
                                                                            paddingRight: "8",
                                                                            paddingLeft: "8",
                                                                            children: $$Array.map((function (groupitem) {
                                                                                    return React.createElement(MenuItem$BtsCore.make, {
                                                                                                top: "0",
                                                                                                right: "8",
                                                                                                bottom: "0",
                                                                                                left: "8",
                                                                                                disablePadding: groupitem.optionPadding,
                                                                                                topLeft: "12",
                                                                                                topRight: "12",
                                                                                                bottomRight: "12",
                                                                                                bottomLeft: "12",
                                                                                                onClick: (function (param) {
                                                                                                    return Curry._2(clickGroupMenu, groupitem.value, i);
                                                                                                  }),
                                                                                                children: groupitem.value
                                                                                              });
                                                                                  }), item.groupitems)
                                                                          }) : null,
                                                                    React.createElement(IconGeneral$BtsCore.make, {
                                                                          animation: IconAnimation$BtsCore.topDownRorate(item.showGroupMenu),
                                                                          src: Icons$BtsCore.arrowDownBlack
                                                                        })
                                                                  ]
                                                                }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                  showBackground: item.showGroupMenu,
                                                                  backgroundColor: "transparent",
                                                                  onClick: (function (param) {
                                                                      return Curry._1(showGroupMenu, i);
                                                                    })
                                                                })), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: null
                                                            }, React.createElement(SelectStandard$BtsCore.make, {
                                                                  top: "12",
                                                                  right: "0",
                                                                  left: "0",
                                                                  labelColor: "rgba(255,0,0,0.8)",
                                                                  tile: "撰寫者",
                                                                  enterBorderColor: "rgba(255,0,0,0.8)",
                                                                  downBorderColor: "rgba(255,0,0,0.6)",
                                                                  borderColor: "rgba(0,0,0,0.2)",
                                                                  value: item.postName,
                                                                  disabled: state.showProgress,
                                                                  onClick: (function (param) {
                                                                      return Curry._1(showNameMenu, i);
                                                                    }),
                                                                  children: /* tuple */[
                                                                    item.showNameMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                            top: "0",
                                                                            transform: "translate(0, 0)",
                                                                            maxHeight: "280",
                                                                            minHeight: "0",
                                                                            topLeft: "12",
                                                                            topRight: "12",
                                                                            bottomRight: "12",
                                                                            bottomLeft: "12",
                                                                            paddingRight: "8",
                                                                            paddingLeft: "8",
                                                                            children: $$Array.map((function (nameitem) {
                                                                                    return React.createElement(MenuItem$BtsCore.make, {
                                                                                                top: "0",
                                                                                                right: "8",
                                                                                                bottom: "0",
                                                                                                left: "8",
                                                                                                disablePadding: nameitem.optionPadding,
                                                                                                topLeft: "12",
                                                                                                topRight: "12",
                                                                                                bottomRight: "12",
                                                                                                bottomLeft: "12",
                                                                                                onClick: (function (param) {
                                                                                                    return Curry._2(clickNameMenu, nameitem.value, i);
                                                                                                  }),
                                                                                                children: nameitem.value
                                                                                              });
                                                                                  }), item.nameitems)
                                                                          }) : null,
                                                                    React.createElement(IconGeneral$BtsCore.make, {
                                                                          animation: IconAnimation$BtsCore.topDownRorate(item.showNameMenu),
                                                                          src: Icons$BtsCore.arrowDownBlack
                                                                        })
                                                                  ]
                                                                }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                  showBackground: item.showNameMenu,
                                                                  backgroundColor: "transparent",
                                                                  onClick: (function (param) {
                                                                      return Curry._1(showNameMenu, i);
                                                                    })
                                                                })))
                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                    top: "0",
                                                    right: "0",
                                                    bottom: "0",
                                                    left: "0",
                                                    xs: "auto",
                                                    children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                          top: "12",
                                                          right: "0",
                                                          left: "0",
                                                          labelColor: "rgba(255,0,0,0.8)",
                                                          enterBorderColor: "rgba(255,0,0,0.8)",
                                                          downBorderColor: "rgba(255,0,0,0.6)",
                                                          borderColor: "rgba(0,0,0,0.2)",
                                                          value: item.subject,
                                                          disabled: state.showProgress,
                                                          onChange: (function ($$event) {
                                                              return Curry._2(changeSubject, $$event.target.value, i);
                                                            }),
                                                          children: "文件名稱"
                                                        })
                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                    top: "0",
                                                    right: "0",
                                                    bottom: "0",
                                                    left: "0",
                                                    xs: "auto",
                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                          direction: "row",
                                                          justify: "center",
                                                          alignItem: "center",
                                                          children: null
                                                        }, React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: null
                                                            }, React.createElement(SelectStandard$BtsCore.make, {
                                                                  top: "12",
                                                                  right: "0",
                                                                  left: "0",
                                                                  labelColor: "rgba(255,0,0,0.8)",
                                                                  tile: "製程別",
                                                                  enterBorderColor: "rgba(255,0,0,0.8)",
                                                                  downBorderColor: "rgba(255,0,0,0.6)",
                                                                  borderColor: "rgba(0,0,0,0.2)",
                                                                  value: item.obj,
                                                                  disabled: state.showProgress,
                                                                  onClick: (function (param) {
                                                                      return Curry._1(showObjMenu, i);
                                                                    }),
                                                                  children: /* tuple */[
                                                                    item.showObjMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                            top: "0",
                                                                            transform: "translate(0, 0)",
                                                                            maxHeight: "280",
                                                                            minHeight: "0",
                                                                            topLeft: "12",
                                                                            topRight: "12",
                                                                            bottomRight: "12",
                                                                            bottomLeft: "12",
                                                                            paddingRight: "8",
                                                                            paddingLeft: "8",
                                                                            children: $$Array.map((function (objitem) {
                                                                                    return React.createElement(MenuItem$BtsCore.make, {
                                                                                                top: "0",
                                                                                                right: "8",
                                                                                                bottom: "0",
                                                                                                left: "8",
                                                                                                disablePadding: objitem.optionPadding,
                                                                                                topLeft: "12",
                                                                                                topRight: "12",
                                                                                                bottomRight: "12",
                                                                                                bottomLeft: "12",
                                                                                                onClick: (function (param) {
                                                                                                    return Curry._2(clickObjMenu, objitem.value, i);
                                                                                                  }),
                                                                                                children: objitem.value
                                                                                              });
                                                                                  }), item.objitems)
                                                                          }) : null,
                                                                    React.createElement(IconGeneral$BtsCore.make, {
                                                                          animation: IconAnimation$BtsCore.topDownRorate(item.showObjMenu),
                                                                          src: Icons$BtsCore.arrowDownBlack
                                                                        })
                                                                  ]
                                                                }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                  showBackground: item.showObjMenu,
                                                                  backgroundColor: "transparent",
                                                                  onClick: (function (param) {
                                                                      return Curry._1(showObjMenu, i);
                                                                    })
                                                                })), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.homepageMomo,
                                                                    disabled: state.showProgress,
                                                                    onChange: (function ($$event) {
                                                                        return Curry._2(changeMomo, $$event.target.value, i);
                                                                      }),
                                                                    children: "機種"
                                                                  })
                                                            }))
                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                    top: "0",
                                                    right: "6",
                                                    bottom: "6",
                                                    left: "6",
                                                    xs: "auto",
                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                          direction: "row",
                                                          justify: "start",
                                                          alignItem: "center",
                                                          children: $$Array.map((function (mbitem) {
                                                                  return React.createElement(GridItem$BtsCore.make, {
                                                                              top: "0",
                                                                              bottom: "0",
                                                                              left: "0",
                                                                              xs: "no",
                                                                              children: React.createElement(Chip$BtsCore.make, {
                                                                                    enterBorderWidth: "0",
                                                                                    downBorderWidth: "0",
                                                                                    borderWidth: "0",
                                                                                    showButn: true,
                                                                                    src: Icons$BtsCore.clearBlack,
                                                                                    onButton: (function (param) {
                                                                                        return Curry._2(clearMbItem, mbitem.mbId, i);
                                                                                      }),
                                                                                    children: /* tuple */[
                                                                                      React.createElement(Typography$BtsCore.make, {
                                                                                            variant: "subtitle2",
                                                                                            children: "S"
                                                                                          }),
                                                                                      React.createElement(Typography$BtsCore.make, {
                                                                                            variant: "subtitle2",
                                                                                            children: mbitem.mbValue
                                                                                          })
                                                                                    ]
                                                                                  })
                                                                            });
                                                                }), item.mbitems)
                                                        })
                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                    top: "0",
                                                    right: "0",
                                                    bottom: "0",
                                                    left: "0",
                                                    xs: "auto",
                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                          direction: "row",
                                                          justify: "center",
                                                          alignItem: "center",
                                                          children: null
                                                        }, React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: null
                                                            }, React.createElement(SelectStandard$BtsCore.make, {
                                                                  top: "12",
                                                                  right: "0",
                                                                  left: "0",
                                                                  labelColor: "rgba(255,0,0,0.8)",
                                                                  tile: "篩選板類",
                                                                  enterBorderColor: "rgba(255,0,0,0.8)",
                                                                  downBorderColor: "rgba(255,0,0,0.6)",
                                                                  borderColor: "rgba(0,0,0,0.2)",
                                                                  value: item.mtst,
                                                                  disabled: state.showProgress,
                                                                  onClick: (function (param) {
                                                                      return Curry._1(showMtstMenu, i);
                                                                    }),
                                                                  children: /* tuple */[
                                                                    item.showMtstMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                            top: "0",
                                                                            transform: "translate(0, 0)",
                                                                            maxHeight: "280",
                                                                            minHeight: "0",
                                                                            topLeft: "12",
                                                                            topRight: "12",
                                                                            bottomRight: "12",
                                                                            bottomLeft: "12",
                                                                            paddingRight: "8",
                                                                            paddingLeft: "8",
                                                                            children: $$Array.map((function (mtstitem) {
                                                                                    return React.createElement(MenuItem$BtsCore.make, {
                                                                                                top: "0",
                                                                                                right: "8",
                                                                                                bottom: "0",
                                                                                                left: "8",
                                                                                                disablePadding: mtstitem.optionPadding,
                                                                                                topLeft: "12",
                                                                                                topRight: "12",
                                                                                                bottomRight: "12",
                                                                                                bottomLeft: "12",
                                                                                                onClick: (function (param) {
                                                                                                    return Curry._2(clickMtstMenu, mtstitem.value, i);
                                                                                                  }),
                                                                                                children: mtstitem.value
                                                                                              });
                                                                                  }), item.mtstitems)
                                                                          }) : null,
                                                                    React.createElement(IconGeneral$BtsCore.make, {
                                                                          animation: IconAnimation$BtsCore.topDownRorate(item.showMtstMenu),
                                                                          src: Icons$BtsCore.arrowDownBlack
                                                                        })
                                                                  ]
                                                                }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                  showBackground: item.showMtstMenu,
                                                                  backgroundColor: "transparent",
                                                                  onClick: (function (param) {
                                                                      return Curry._1(showMtstMenu, i);
                                                                    })
                                                                })), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: null
                                                            }, React.createElement(SelectStandard$BtsCore.make, {
                                                                  top: "12",
                                                                  right: "0",
                                                                  left: "0",
                                                                  labelColor: "rgba(255,0,0,0.8)",
                                                                  tile: "板類",
                                                                  enterBorderColor: "rgba(255,0,0,0.8)",
                                                                  downBorderColor: "rgba(255,0,0,0.6)",
                                                                  borderColor: "rgba(0,0,0,0.2)",
                                                                  value: item.mbst,
                                                                  disabled: state.showProgress,
                                                                  onClick: (function (param) {
                                                                      return Curry._1(showMbstMenu, i);
                                                                    }),
                                                                  children: /* tuple */[
                                                                    item.showMbstMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                            top: "0",
                                                                            transform: "translate(0, 0)",
                                                                            maxHeight: "280",
                                                                            minHeight: "0",
                                                                            topLeft: "12",
                                                                            topRight: "12",
                                                                            bottomRight: "12",
                                                                            bottomLeft: "12",
                                                                            paddingRight: "8",
                                                                            paddingLeft: "8",
                                                                            children: $$Array.map((function (mbstitem) {
                                                                                    return React.createElement(MenuItem$BtsCore.make, {
                                                                                                top: "0",
                                                                                                right: "8",
                                                                                                bottom: "0",
                                                                                                left: "8",
                                                                                                disablePadding: mbstitem.optionPadding,
                                                                                                topLeft: "12",
                                                                                                topRight: "12",
                                                                                                bottomRight: "12",
                                                                                                bottomLeft: "12",
                                                                                                onClick: (function (param) {
                                                                                                    return Curry._2(clickMbstMenu, mbstitem.value, i);
                                                                                                  }),
                                                                                                children: mbstitem.value
                                                                                              });
                                                                                  }), item.mbstitems)
                                                                          }) : null,
                                                                    React.createElement(IconGeneral$BtsCore.make, {
                                                                          animation: IconAnimation$BtsCore.topDownRorate(item.showMbstMenu),
                                                                          src: Icons$BtsCore.arrowDownBlack
                                                                        })
                                                                  ]
                                                                }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                  showBackground: item.showMbstMenu,
                                                                  backgroundColor: "transparent",
                                                                  onClick: (function (param) {
                                                                      return Curry._1(showMbstMenu, i);
                                                                    })
                                                                })))
                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                    top: "0",
                                                    right: "6",
                                                    bottom: "6",
                                                    left: "6",
                                                    xs: "auto",
                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                          direction: "row",
                                                          justify: "start",
                                                          alignItem: "center",
                                                          children: $$Array.map((function (pageitem) {
                                                                  return React.createElement(GridItem$BtsCore.make, {
                                                                              top: "0",
                                                                              bottom: "0",
                                                                              left: "0",
                                                                              xs: "no",
                                                                              children: React.createElement(Chip$BtsCore.make, {
                                                                                    enterBorderWidth: "0",
                                                                                    downBorderWidth: "0",
                                                                                    borderWidth: "0",
                                                                                    showButn: true,
                                                                                    src: Icons$BtsCore.clearBlack,
                                                                                    onButton: (function (param) {
                                                                                        return Curry._2(clearPageItem, pageitem.mbId, i);
                                                                                      }),
                                                                                    children: /* tuple */[
                                                                                      React.createElement(Typography$BtsCore.make, {
                                                                                            variant: "subtitle2",
                                                                                            children: "S"
                                                                                          }),
                                                                                      React.createElement(Typography$BtsCore.make, {
                                                                                            variant: "subtitle2",
                                                                                            children: pageitem.mbValue
                                                                                          })
                                                                                    ]
                                                                                  })
                                                                            });
                                                                }), item.pageitems)
                                                        })
                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                    style: {
                                                      position: "relative"
                                                    },
                                                    top: "0",
                                                    right: "0",
                                                    bottom: "0",
                                                    left: "0",
                                                    xs: "auto",
                                                    children: null
                                                  }, React.createElement(TextFieldStandard$BtsCore.make, {
                                                        top: "12",
                                                        right: "0",
                                                        left: "0",
                                                        labelColor: "rgba(255,0,0,0.8)",
                                                        enterBorderColor: "rgba(255,0,0,0.8)",
                                                        downBorderColor: "rgba(255,0,0,0.6)",
                                                        borderColor: "rgba(0,0,0,0.2)",
                                                        value: item.custom,
                                                        disabled: state.showProgress,
                                                        onChange: (function ($$event) {
                                                            return Curry._2(changeCustom, $$event.target.value, i);
                                                          }),
                                                        onKeyDown: (function ($$event) {
                                                            return Curry._3(keydownCustom, $$event.keyCode, item.custom, i);
                                                          }),
                                                        children: "客戶"
                                                      }), item.showCustom ? React.createElement(React.Fragment, undefined, React.createElement(SelectMenu$BtsCore.make, {
                                                              top: "100%",
                                                              transform: "translate(0, 0)",
                                                              maxHeight: "280",
                                                              minHeight: "0",
                                                              topLeft: "12",
                                                              topRight: "12",
                                                              bottomRight: "12",
                                                              bottomLeft: "12",
                                                              paddingRight: "8",
                                                              paddingLeft: "8",
                                                              children: $$Array.map((function (customitems) {
                                                                      return React.createElement(MenuItem$BtsCore.make, {
                                                                                  top: "8",
                                                                                  right: "15",
                                                                                  bottom: "8",
                                                                                  left: "6",
                                                                                  enterBackgroundColor: "rgba(0,0,0,0.06)",
                                                                                  downBackgroundColor: "rgba(0,0,0,0.08)",
                                                                                  topLeft: "12",
                                                                                  topRight: "12",
                                                                                  bottomRight: "12",
                                                                                  bottomLeft: "12",
                                                                                  onClick: (function (param) {
                                                                                      return Curry._2(clickItemCustom, customitems.value, i);
                                                                                    }),
                                                                                  children: React.createElement(Typography$BtsCore.make, {
                                                                                        variant: "subheading",
                                                                                        children: customitems.value
                                                                                      })
                                                                                });
                                                                    }), item.customitems)
                                                            }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                              showBackground: true,
                                                              backgroundColor: "transparent",
                                                              onClick: (function (param) {
                                                                  return Curry._1(showCustom, i);
                                                                })
                                                            })) : null), React.createElement(GridItem$BtsCore.make, {
                                                    right: "0",
                                                    left: "0",
                                                    xs: "auto",
                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                          direction: "row",
                                                          justify: "center",
                                                          alignItem: "center",
                                                          children: null
                                                        }, React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: React.createElement(OtherUpload$BtsCore.make, {
                                                                    webLoad: state.showProgress,
                                                                    showDrop: item.showDrop,
                                                                    showFile: item.showFile,
                                                                    showImage: item.showImage,
                                                                    showVideo: item.showVideo,
                                                                    showAudio: item.showAudio,
                                                                    src: item.path + item.src,
                                                                    fileRef: fileRef,
                                                                    onDragOver: (function ($$event) {
                                                                        return Curry._2(dragOverFile, $$event, i);
                                                                      }),
                                                                    onDragLeave: (function ($$event) {
                                                                        return Curry._2(dragLeaveFile, $$event, i);
                                                                      }),
                                                                    onDrop: (function ($$event) {
                                                                        return Curry._3(dropFile, $$event, Caml_array.caml_array_get($$event.nativeEvent.dataTransfer.files, 0), i);
                                                                      }),
                                                                    disabled: state.showProgress,
                                                                    onClick: chooseFile,
                                                                    onChange: (function ($$event) {
                                                                        return Curry._2(changeFile, Caml_array.caml_array_get($$event.target.files, 0), i);
                                                                      })
                                                                  })
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "4",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "no",
                                                              children: React.createElement(IconButton$BtsCore.make, {
                                                                    padding: "2",
                                                                    disabled: state.showProgress || !item.showFile,
                                                                    onClick: (function (param) {
                                                                        return Curry._5(transForm, item.path, item.original, item.encryption, item.extension, i);
                                                                      }),
                                                                    children: React.createElement(IconAction$BtsCore.make, {
                                                                          animation: "leftRight",
                                                                          src: Icons$BtsCore.cachedBlack
                                                                        })
                                                                  })
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: React.createElement(OtherUpload$BtsCore.make, {
                                                                    webLoad: state.showProgress,
                                                                    showDrop: item.showPdfDrop,
                                                                    showFile: item.showPdfFile,
                                                                    showImage: item.showPdfImage,
                                                                    showVideo: item.showPdfVideo,
                                                                    showAudio: item.showPdfAudio,
                                                                    src: item.pdfPath + item.pdfSrc,
                                                                    fileRef: fileRef,
                                                                    onDragOver: (function ($$event) {
                                                                        return Curry._2(dragOverPdfFile, $$event, i);
                                                                      }),
                                                                    onDragLeave: (function ($$event) {
                                                                        return Curry._2(dragLeavePdfFile, $$event, i);
                                                                      }),
                                                                    onDrop: (function ($$event) {
                                                                        return Curry._3(dropPdfFile, $$event, Caml_array.caml_array_get($$event.nativeEvent.dataTransfer.files, 0), i);
                                                                      }),
                                                                    disabled: state.showProgress,
                                                                    onClick: chooseFile,
                                                                    onChange: (function ($$event) {
                                                                        return Curry._2(changePdfFile, Caml_array.caml_array_get($$event.target.files, 0), i);
                                                                      })
                                                                  })
                                                            }))
                                                  }), match ? (
                                                  match$1 ? React.createElement(GridItem$BtsCore.make, {
                                                          top: "0",
                                                          bottom: "0",
                                                          xs: "auto",
                                                          children: React.createElement(GridContainer$BtsCore.make, {
                                                                direction: "rowReverse",
                                                                justify: "center",
                                                                alignItem: "center",
                                                                children: null
                                                              }, React.createElement(GridItem$BtsCore.make, {
                                                                    top: "0",
                                                                    right: "0",
                                                                    bottom: "0",
                                                                    left: "0",
                                                                    xs: "auto",
                                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                                          direction: "row",
                                                                          justify: "center",
                                                                          alignItem: "center",
                                                                          children: null
                                                                        }, React.createElement(GridItem$BtsCore.make, {
                                                                              top: "0",
                                                                              right: "0",
                                                                              bottom: "0",
                                                                              left: "0",
                                                                              xs: "auto",
                                                                              children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                                    top: "0",
                                                                                    right: "0",
                                                                                    bottom: "0",
                                                                                    left: "0",
                                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                                    type_: "number",
                                                                                    value: item.first,
                                                                                    disabled: state.showProgress,
                                                                                    onChange: (function ($$event) {
                                                                                        return Curry._2(changeFirst, $$event.target.value, i);
                                                                                      }),
                                                                                    children: "起始頁"
                                                                                  })
                                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                                              top: "0",
                                                                              right: "0",
                                                                              bottom: "0",
                                                                              left: "0",
                                                                              xs: "auto",
                                                                              children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                                    top: "0",
                                                                                    right: "0",
                                                                                    bottom: "0",
                                                                                    left: "0",
                                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                                    type_: "number",
                                                                                    value: item.final,
                                                                                    disabled: state.showProgress,
                                                                                    onChange: (function ($$event) {
                                                                                        return Curry._2(changeFinal, $$event.target.value, i);
                                                                                      }),
                                                                                    children: "最終頁"
                                                                                  })
                                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                                              top: "0",
                                                                              right: "0",
                                                                              bottom: "0",
                                                                              left: "0",
                                                                              xs: "no",
                                                                              children: React.createElement(Button$BtsCore.make, {
                                                                                    disabled: state.showProgress,
                                                                                    onClick: (function (param) {
                                                                                        return Curry._7(removeFile, item.pdfPath, item.pdfOriginal, item.pdfEncryption, item.pdfExtension, item.first, item.final, i);
                                                                                      }),
                                                                                    children: React.createElement(ReactIntl.FormattedMessage, {
                                                                                          id: "save",
                                                                                          defaultMessage: "Save"
                                                                                        })
                                                                                  })
                                                                            }))
                                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                                    top: "0",
                                                                    right: "0",
                                                                    bottom: "0",
                                                                    left: "0",
                                                                    width: "34px",
                                                                    xs: "no",
                                                                    children: null
                                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                                    top: "0",
                                                                    right: "0",
                                                                    bottom: "0",
                                                                    left: "0",
                                                                    xs: "auto",
                                                                    children: null
                                                                  }))
                                                        }) : React.createElement(GridItem$BtsCore.make, {
                                                          top: "0",
                                                          bottom: "0",
                                                          xs: "auto",
                                                          children: React.createElement(GridContainer$BtsCore.make, {
                                                                direction: "rowReverse",
                                                                justify: "center",
                                                                alignItem: "center",
                                                                children: null
                                                              }, React.createElement(GridItem$BtsCore.make, {
                                                                    top: "0",
                                                                    right: "0",
                                                                    bottom: "0",
                                                                    left: "0",
                                                                    xs: "no",
                                                                    children: React.createElement(Button$BtsCore.make, {
                                                                          disabled: state.showProgress,
                                                                          onClick: (function (param) {
                                                                              return Curry._5(totalForm, item.pdfPath, item.pdfOriginal, item.pdfEncryption, item.pdfExtension, i);
                                                                            }),
                                                                          children: React.createElement(ReactIntl.FormattedMessage, {
                                                                                id: "save",
                                                                                defaultMessage: "Save"
                                                                              })
                                                                        })
                                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                                    top: "0",
                                                                    right: "0",
                                                                    bottom: "0",
                                                                    left: "0",
                                                                    xs: "auto",
                                                                    children: null
                                                                  }))
                                                        })
                                                ) : null, React.createElement(GridItem$BtsCore.make, {
                                                    top: "0",
                                                    right: "0",
                                                    bottom: "0",
                                                    left: "0",
                                                    xs: "auto",
                                                    children: React.createElement(TextFieldMultiline$BtsCore.make, {
                                                          top: "12",
                                                          right: "0",
                                                          left: "0",
                                                          labelColor: "rgba(255,0,0,0.8)",
                                                          enterBorderColor: "rgba(255,0,0,0.8)",
                                                          downBorderColor: "rgba(255,0,0,0.6)",
                                                          borderColor: "rgba(0,0,0,0.2)",
                                                          rows: 3,
                                                          value: item.body,
                                                          disabled: state.showProgress,
                                                          onChange: (function ($$event) {
                                                              return Curry._2(changeBody, $$event.target.value, i);
                                                            }),
                                                          children: "說明"
                                                        })
                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                    top: "0",
                                                    right: "0",
                                                    bottom: "0",
                                                    left: "0",
                                                    xs: "auto",
                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                          direction: "rowReverse",
                                                          justify: "center",
                                                          alignItem: "center",
                                                          children: null
                                                        }, React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: React.createElement(Switch$BtsCore.make, {
                                                                    right: "0",
                                                                    checked: item.limit,
                                                                    circleColor: SwitchColor$BtsCore.circle(item.limit),
                                                                    linearColor: SwitchColor$BtsCore.linear(item.limit),
                                                                    fontColor: SwitchColor$BtsCore.font(item.limit),
                                                                    disabled: state.showProgress,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(switchLimit, i);
                                                                      }),
                                                                    children: "限期"
                                                                  })
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: React.createElement(Switch$BtsCore.make, {
                                                                    right: "0",
                                                                    checked: !item.limit,
                                                                    circleColor: SwitchColor$BtsCore.circle(!item.limit),
                                                                    linearColor: SwitchColor$BtsCore.linear(!item.limit),
                                                                    fontColor: SwitchColor$BtsCore.font(!item.limit),
                                                                    disabled: state.showProgress,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(switchLimit, i);
                                                                      }),
                                                                    children: "無限期"
                                                                  })
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: null
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: null
                                                            }))
                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                    top: "0",
                                                    right: "0",
                                                    bottom: "0",
                                                    left: "0",
                                                    xs: "auto",
                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                          direction: "row",
                                                          justify: "center",
                                                          alignItem: "center",
                                                          children: null
                                                        }, React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    type_: "date",
                                                                    value: item.releaseDate,
                                                                    disabled: state.showProgress,
                                                                    onChange: (function ($$event) {
                                                                        return Curry._2(changeReleaseDate, $$event.target.value, i);
                                                                      }),
                                                                    children: "發行日期"
                                                                  })
                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                              top: "0",
                                                              right: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              xs: "auto",
                                                              children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    type_: "date",
                                                                    value: item.endDate,
                                                                    disabled: state.showProgress || !item.limit,
                                                                    onChange: (function ($$event) {
                                                                        return Curry._2(changeEndDate, $$event.target.value, i);
                                                                      }),
                                                                    children: "到期日"
                                                                  })
                                                            }))
                                                  }));
                                  }), state.items))
                      })
                }), React.createElement(SnackbarYoutube$BtsCore.make, {
                  showYoutube: state.showYoutube,
                  position: "bottomLeft",
                  children: /* tuple */[
                    React.createElement("span", undefined, state.youtubeText),
                    null
                  ]
                }));
}

var make = CreateI;

export {
  newmbitem ,
  reducer ,
  initialState ,
  make ,
  
}
/*  Not a pure module */
