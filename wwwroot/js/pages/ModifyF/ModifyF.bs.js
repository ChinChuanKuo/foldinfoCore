// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as List from "bs-platform/lib/es6/list.js";
import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Caml_obj from "bs-platform/lib/es6/caml_obj.js";
import * as Caml_array from "bs-platform/lib/es6/caml_array.js";
import * as ReactIntl from "react-intl";
import * as Tab$BtsCore from "../../material-ui/core/Tabs/Tab.bs.js";
import * as Chip$BtsCore from "../../material-ui/core/Chip/Chip.bs.js";
import * as Data$BtsCore from "../../features/Data.bs.js";
import * as Path$BtsCore from "../../features/Path.bs.js";
import * as Tabs$BtsCore from "../../material-ui/core/Tabs/Tabs.bs.js";
import * as Icons$BtsCore from "../../material-ui/icon/Icons.bs.js";
import * as Image$BtsCore from "../../example/Medias/Image.bs.js";
import * as Media$BtsCore from "../../example/Medias/Media.bs.js";
import * as Button$BtsCore from "../../material-ui/core/Button/Button.bs.js";
import * as Status$BtsCore from "../../features/Status.bs.js";
import * as Divider$BtsCore from "../../material-ui/core/Divider/Divider.bs.js";
import * as ToolBar$BtsCore from "../../example/ToolBar/ToolBar.bs.js";
import * as Axiosapi$BtsCore from "../../features/Axiosapi.bs.js";
import * as GridItem$BtsCore from "../../material-ui/core/Grid/GridItem.bs.js";
import * as MenuItem$BtsCore from "../../material-ui/core/MenuItem/MenuItem.bs.js";
import * as Together$BtsCore from "../../styles/Together/Together.bs.js";
import * as ReasonReactRouter from "reason-react/src/ReasonReactRouter.bs.js";
import * as IconAction$BtsCore from "../../material-ui/core/IconStyle/IconAction.bs.js";
import * as IconButton$BtsCore from "../../material-ui/core/IconButton/IconButton.bs.js";
import * as SelectMenu$BtsCore from "../../material-ui/core/Menu/SelectMenu.bs.js";
import * as Typography$BtsCore from "../../material-ui/core/Typography/Typography.bs.js";
import * as IconGeneral$BtsCore from "../../material-ui/core/IconStyle/IconGeneral.bs.js";
import * as NewFacetube$BtsCore from "../../example/Facebook/NewFacetube.bs.js";
import * as GeneralUpload$BtsCore from "../../example/Uploads/GeneralUpload.bs.js";
import * as GridContainer$BtsCore from "../../material-ui/core/Grid/GridContainer.bs.js";
import * as IconAnimation$BtsCore from "../../controls/IconAnimation.bs.js";
import * as SelectStandard$BtsCore from "../../material-ui/core/Select/SelectStandard.bs.js";
import * as BackgroundBoard$BtsCore from "../../example/Boards/BackgroundBoard.bs.js";
import * as SnackbarYoutube$BtsCore from "../../material-ui/core/Snackbar/SnackbarYoutube.bs.js";
import * as TextFieldArticle$BtsCore from "../../material-ui/core/TextField/TextFieldArticle.bs.js";
import * as TextFieldStandard$BtsCore from "../../material-ui/core/TextField/TextFieldStandard.bs.js";
import * as TextFieldMultiline$BtsCore from "../../material-ui/core/TextField/TextFieldMultiline.bs.js";

((require('../../../scss/pages/Together/together.scss')));

function newmbitem(mbId, mbValue) {
  return [{
            mbId: mbId,
            mbValue: mbValue
          }];
}

function newphotoitem(id, images, videos, audios, src, imagePath, original, encryption, extension, date) {
  return [{
            photoId: id,
            photoImage: images,
            photoVideo: videos,
            photoAudio: audios,
            photoSrc: src,
            photoPath: imagePath,
            photoOriginal: original,
            photoEncryption: encryption,
            photoExtension: extension,
            photoDate: date,
            photoInsert: true,
            showDelete: true,
            photoDelete: false
          }];
}

function newgrotoitem(id, images, videos, audios, src, imagePath, original, encryption, extension, date, name) {
  return [{
            grotoId: id,
            grotoImage: images,
            grotoVideo: videos,
            grotoAudio: audios,
            grotoSrc: src,
            grotoPath: imagePath,
            grotoOriginal: original,
            grotoEncryption: encryption,
            grotoExtension: extension,
            grotoName: name,
            grotoDate: date,
            grotoInsert: true,
            showDelete: true,
            grotoDelete: false
          }];
}

function reducer(state, action) {
  if (typeof action === "number") {
    if (action === /* SettingError */0) {
      return {
              formLoad: state.formLoad,
              formWidth: state.formWidth,
              formHeight: state.formHeight,
              showProgress: state.showProgress,
              error: !state.error,
              insert: state.insert,
              update: state.update,
              delete: state.delete,
              export: state.export,
              formId: state.formId,
              formTitle: state.formTitle,
              tabitems: state.tabitems,
              index: state.index,
              items: state.items,
              showDrop: state.showDrop,
              photoitems: state.photoitems,
              grotoitems: state.grotoitems,
              showYoutube: state.showYoutube,
              youtubeText: state.youtubeText
            };
    } else {
      return {
              formLoad: state.formLoad,
              formWidth: state.formWidth,
              formHeight: state.formHeight,
              showProgress: !state.showProgress,
              error: state.error,
              insert: state.insert,
              update: state.update,
              delete: state.delete,
              export: state.export,
              formId: state.formId,
              formTitle: state.formTitle,
              tabitems: state.tabitems,
              index: state.index,
              items: state.items,
              showDrop: state.showDrop,
              photoitems: state.photoitems,
              grotoitems: state.grotoitems,
              showYoutube: state.showYoutube,
              youtubeText: state.youtubeText
            };
    }
  }
  switch (action.tag | 0) {
    case /* SettingFormLoad */0 :
        return {
                formLoad: !state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: action[0],
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: state.items,
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* SettingFormWidth */1 :
        return {
                formLoad: state.formLoad,
                formWidth: action[0],
                formHeight: action[1],
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: state.items,
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ActionPermissItems */2 :
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: action[0],
                update: action[1],
                delete: action[2],
                export: action[3],
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: state.items,
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* SettingFormItems */3 :
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: action[0],
                formTitle: action[1],
                tabitems: state.tabitems,
                index: state.index,
                items: action[2],
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ClickItemTab */4 :
        var index = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: List.mapi((function (i, tabitem) {
                        return {
                                showTab: index === i,
                                tabImage: tabitem.tabImage
                              };
                      }), state.tabitems),
                index: index,
                items: state.items,
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* SettingPhotoItems */5 :
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: state.items,
                showDrop: state.showDrop,
                photoitems: action[0],
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* SettingGrotoItems */6 :
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: state.items,
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: action[0],
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ShowGroupMenu */7 :
        var index$1 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$1 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.showGroupMenu = !item.showGroupMenu;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ClickGroupMenu */8 :
        var index$2 = action[1];
        var value = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$2 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.postGroup = value;
                        newrecord.showGroupMenu = !item.showGroupMenu;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ShowNameMenu */9 :
        var index$3 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$3 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.showNameMenu = !item.showNameMenu;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* SettingItemName */10 :
        var index$4 = action[1];
        var items = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$4 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.nameitems = items;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ClickNameMenu */11 :
        var index$5 = action[1];
        var value$1 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$5 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.postName = value$1;
                        newrecord.showNameMenu = !item.showNameMenu;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ShowCaseMenu */12 :
        var index$6 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$6 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.showCaseMenu = !item.showCaseMenu;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ClickCaseMenu */13 :
        var index$7 = action[1];
        var value$2 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$7 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.case = value$2;
                        newrecord.showCaseMenu = !item.showCaseMenu;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ChangePage1 */14 :
        var index$8 = action[1];
        var value$3 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$8 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.homepage1 = value$3;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ChangePnumber */15 :
        var index$9 = action[1];
        var value$4 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$9 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.pnumber = value$4;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ChangeEndDate */16 :
        var index$10 = action[1];
        var value$5 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$10 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.endDate = value$5;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ShowObjMenu */17 :
        var index$11 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$11 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.showObjMenu = !item.showObjMenu;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ClickObjMenu */18 :
        var index$12 = action[1];
        var value$6 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$12 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.obj = value$6;
                        newrecord.showObjMenu = !item.showObjMenu;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ChangeMomo */19 :
        var index$13 = action[1];
        var value$7 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$13 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.homepageMomo = value$7;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ChangeMb */20 :
        var index$14 = action[1];
        var value$8 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$14 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.mb = value$8;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ChangeAmount */21 :
        var index$15 = action[1];
        var value$9 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$15 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.amount = value$9;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ChangeSubject */22 :
        var index$16 = action[1];
        var value$10 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$16 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.subject = value$10;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ChangeEcr */23 :
        var index$17 = action[1];
        var value$11 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$17 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.ecr = value$11;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ChangeEcn */24 :
        var index$18 = action[1];
        var value$12 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$18 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.ecn = value$12;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ShowTypeMenu */25 :
        var index$19 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$19 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.showTypeMenu = !item.showTypeMenu;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ClickTypeMenu */26 :
        var index$20 = action[1];
        var value$13 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$20 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.type_ = value$13;
                        newrecord.showTypeMenu = !item.showTypeMenu;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* InputBody */27 :
        var index$21 = action[1];
        var value$14 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$21 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.body = value$14;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ClearMailItem */28 :
        var index$22 = action[1];
        var mbId = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$22 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.mailitems = item.mailitems.filter((function (mbitem) {
                                return mbitem.mbId !== mbId;
                              }));
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ShowMagroupMenu */29 :
        var index$23 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$23 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.showMagroupMenu = !item.showMagroupMenu;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ClickMagroupMenu */30 :
        var index$24 = action[1];
        var value$15 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$24 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.maGroup = value$15;
                        newrecord.showMagroupMenu = !item.showMagroupMenu;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ShowManameMenu */31 :
        var index$25 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$25 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.showManameMenu = !item.showManameMenu;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* SettingItemManame */32 :
        var index$26 = action[1];
        var items$1 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$26 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.manameitems = items$1;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* AddMailItem */33 :
        var index$27 = action[1];
        var value$16 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$27 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        var mbId = item.mailitems.length === 0 ? 0 : Caml_array.caml_array_get(item.mailitems, item.mailitems.length - 1 | 0).mbId + 1 | 0;
                        newrecord.mailitems = $$Array.append(item.mailitems, [{
                                mbId: mbId,
                                mbValue: value$16
                              }]);
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ClickManameMenu */34 :
        var index$28 = action[1];
        var value$17 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$28 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.maName = value$17;
                        newrecord.showManameMenu = !item.showManameMenu;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ChangeAction1 */35 :
        var index$29 = action[1];
        var value$18 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$29 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.action1 = value$18;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ClearWorkItem */36 :
        var index$30 = action[1];
        var mbId$1 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$30 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.workitems = item.workitems.filter((function (mbitem) {
                                return mbitem.mbId !== mbId$1;
                              }));
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ShowWork */37 :
        var index$31 = action[1];
        var showWork = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$31 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.showWork = showWork;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* SettingItemWork */38 :
        var index$32 = action[1];
        var items$2 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$32 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.worknoitems = items$2;
                        newrecord.showWork = true;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ChangeWork */39 :
        var index$33 = action[1];
        var value$19 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$33 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.work = value$19;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ClickItemWork */40 :
        var index$34 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$34 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.showWork = !item.showWork;
                        newrecord.work = "";
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* AddWorkItem */41 :
        var index$35 = action[1];
        var value$20 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$35 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        var mbId = item.workitems.length === 0 ? 0 : Caml_array.caml_array_get(item.workitems, item.workitems.length - 1 | 0).mbId + 1 | 0;
                        newrecord.workitems = $$Array.append(item.workitems, [{
                                mbId: mbId,
                                mbValue: value$20
                              }]);
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ChangeAction2 */42 :
        var index$36 = action[1];
        var value$21 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$36 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.action2 = value$21;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ClearMbItem */43 :
        var index$37 = action[1];
        var mbId$2 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$37 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.mbitems = item.mbitems.filter((function (mbitem) {
                                return mbitem.mbId !== mbId$2;
                              }));
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ShowMtstMenu */44 :
        var index$38 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$38 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.showMtstMenu = !item.showMtstMenu;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ClickMtstMenu */45 :
        var index$39 = action[1];
        var value$22 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$39 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.mtst = value$22;
                        newrecord.showMtstMenu = !item.showMtstMenu;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ShowMbstMenu */46 :
        var index$40 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$40 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.showMbstMenu = !item.showMbstMenu;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* SettingItemModel */47 :
        var index$41 = action[1];
        var items$3 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$41 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.mbstitems = items$3;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* AddMbItem */48 :
        var index$42 = action[1];
        var value$23 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$42 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        var mbId = item.mbitems.length === 0 ? 0 : Caml_array.caml_array_get(item.mbitems, item.mbitems.length - 1 | 0).mbId + 1 | 0;
                        newrecord.mbitems = $$Array.append(item.mbitems, [{
                                mbId: mbId,
                                mbValue: value$23
                              }]);
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ClickMbstMenu */49 :
        var index$43 = action[1];
        var value$24 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$43 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.mbst = value$24;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ChangeOldno */50 :
        var index$44 = action[1];
        var value$25 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$44 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.oldno = value$25;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ChangeNewno */51 :
        var index$45 = action[1];
        var value$26 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$45 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.newno = value$26;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ChangeSopno */52 :
        var index$46 = action[1];
        var value$27 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$46 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.sopno = value$27;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ChangeAction3 */53 :
        var index$47 = action[1];
        var value$28 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$47 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.action3 = value$28;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ChangeSipno */54 :
        var index$48 = action[1];
        var value$29 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$48 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.sipno = value$29;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ChangeAction4 */55 :
        var index$49 = action[1];
        var value$30 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$49 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.action4 = value$30;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ChangeAction5 */56 :
        var index$50 = action[1];
        var value$31 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: $$Array.mapi((function (i, item) {
                        if (index$50 !== i) {
                          return item;
                        }
                        var newrecord = Caml_obj.caml_obj_dup(item);
                        newrecord.formModify = true;
                        newrecord.action5 = value$31;
                        return newrecord;
                      }), state.items),
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ShowDrop */57 :
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: state.items,
                showDrop: action[0],
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* AddPhotoItem */58 :
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: state.items,
                showDrop: state.showDrop,
                photoitems: $$Array.append(state.photoitems, newphotoitem(state.photoitems.length + 1 | 0, action[0], action[1], action[2], action[3], action[4], action[5], action[6], action[7], action[8])),
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ActionPhotoItem */59 :
        var index$51 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: state.items,
                showDrop: state.showDrop,
                photoitems: $$Array.mapi((function (i, photoitem) {
                        if (index$51 === i) {
                          return {
                                  photoId: photoitem.photoId,
                                  photoImage: photoitem.photoImage,
                                  photoVideo: photoitem.photoVideo,
                                  photoAudio: photoitem.photoAudio,
                                  photoSrc: photoitem.photoSrc,
                                  photoPath: photoitem.photoPath,
                                  photoOriginal: photoitem.photoOriginal,
                                  photoEncryption: photoitem.photoEncryption,
                                  photoExtension: photoitem.photoExtension,
                                  photoDate: photoitem.photoDate,
                                  photoInsert: photoitem.photoInsert,
                                  showDelete: photoitem.showDelete,
                                  photoDelete: !photoitem.photoDelete
                                };
                        } else {
                          return photoitem;
                        }
                      }), state.photoitems),
                grotoitems: state.grotoitems,
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* AddGrotoItem */60 :
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: state.items,
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: $$Array.append(state.grotoitems, newgrotoitem(state.grotoitems.length + 1 | 0, action[0], action[1], action[2], action[3], action[4], action[5], action[6], action[7], action[8], action[9])),
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ActionGrotoItem */61 :
        var index$52 = action[0];
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: state.items,
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: $$Array.mapi((function (i, grotoitem) {
                        if (index$52 === i) {
                          return {
                                  grotoId: grotoitem.grotoId,
                                  grotoImage: grotoitem.grotoImage,
                                  grotoVideo: grotoitem.grotoVideo,
                                  grotoAudio: grotoitem.grotoAudio,
                                  grotoSrc: grotoitem.grotoSrc,
                                  grotoPath: grotoitem.grotoPath,
                                  grotoOriginal: grotoitem.grotoOriginal,
                                  grotoEncryption: grotoitem.grotoEncryption,
                                  grotoExtension: grotoitem.grotoExtension,
                                  grotoName: grotoitem.grotoName,
                                  grotoDate: grotoitem.grotoDate,
                                  grotoInsert: grotoitem.grotoInsert,
                                  showDelete: grotoitem.showDelete,
                                  grotoDelete: !grotoitem.grotoDelete
                                };
                        } else {
                          return grotoitem;
                        }
                      }), state.grotoitems),
                showYoutube: state.showYoutube,
                youtubeText: state.youtubeText
              };
    case /* ActionSnackBar */62 :
        return {
                formLoad: state.formLoad,
                formWidth: state.formWidth,
                formHeight: state.formHeight,
                showProgress: state.showProgress,
                error: state.error,
                insert: state.insert,
                update: state.update,
                delete: state.delete,
                export: state.export,
                formId: state.formId,
                formTitle: state.formTitle,
                tabitems: state.tabitems,
                index: state.index,
                items: state.items,
                showDrop: state.showDrop,
                photoitems: state.photoitems,
                grotoitems: state.grotoitems,
                showYoutube: action[1],
                youtubeText: action[0]
              };
    
  }
}

var initialState_tabitems = /* :: */[
  {
    showTab: true,
    tabImage: Icons$BtsCore.bookBlack
  },
  /* :: */[
    {
      showTab: false,
      tabImage: Icons$BtsCore.collectionsBlack
    },
    /* :: */[
      {
        showTab: false,
        tabImage: Icons$BtsCore.groupBlack
      },
      /* [] */0
    ]
  ]
];

var initialState_items = [];

var initialState_photoitems = [];

var initialState_grotoitems = [];

var initialState = {
  formLoad: false,
  formWidth: 0,
  formHeight: 0,
  showProgress: true,
  error: false,
  insert: false,
  update: false,
  delete: false,
  export: false,
  formId: "",
  formTitle: "",
  tabitems: initialState_tabitems,
  index: 0,
  items: initialState_items,
  showDrop: false,
  photoitems: initialState_photoitems,
  grotoitems: initialState_grotoitems,
  showYoutube: false,
  youtubeText: ""
};

function ModifyF(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var fileRef = React.useRef(null);
  var textRef = React.useRef(null);
  var barShowRestoreAction = function (youtubeText) {
    Curry._1(dispatch, /* ActionSnackBar */Block.__(62, [
            youtubeText,
            true
          ]));
    setTimeout((function (param) {
            return Curry._1(dispatch, /* ActionSnackBar */Block.__(62, [
                          "",
                          false
                        ]));
          }), 5000);
    
  };
  var setTextRef = function (element,value){ element.current.innerHTML = value; };
  var searchAJax = function (id) {
    Axiosapi$BtsCore.Inside.sItem(Data$BtsCore.dFormData(id, localStorage.getItem("newid"))).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* SettingFormItems */Block.__(3, [
                        id,
                        response.data.tile,
                        response.data.items
                      ]));
                setTextRef(textRef, Caml_array.caml_array_get(response.data.items, 0).body);
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              } else {
                Curry._1(dispatch, /* SettingError */0);
                barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var permissAJax = function (param) {
    Axiosapi$BtsCore.Form.permiss(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
              return Promise.resolve((Curry._1(dispatch, /* ActionPermissItems */Block.__(2, [
                                  response.data.insert,
                                  response.data.update,
                                  response.data.delete,
                                  response.data.export
                                ])), searchAJax(ReasonReactRouter.dangerouslyGetInitialUrl(undefined).hash)));
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  React.useEffect((function () {
          var match = state.formLoad;
          if (match) {
            return (function (param) {
                      console.log("action");
                      
                    });
          }
          Curry._1(dispatch, /* SettingFormLoad */Block.__(0, [ReasonReactRouter.dangerouslyGetInitialUrl(undefined).hash]));
          Curry._1(dispatch, /* SettingFormWidth */Block.__(1, [
                  window.innerWidth,
                  window.innerHeight
                ]));
          var timeId = permissAJax(undefined);
          return (function (param) {
                    return timeId;
                  });
        }));
  var clickItemTab = React.useCallback((function (i) {
          Curry._1(dispatch, /* ClickItemTab */Block.__(4, [i]));
          if (i === 1) {
            Axiosapi$BtsCore.Inside.sFile(Data$BtsCore.dFormData(state.formId, localStorage.getItem("newid"))).then((function (response) {
                      return Promise.resolve(Curry._1(dispatch, /* SettingPhotoItems */Block.__(5, [response.data.items])));
                    })).catch((function (error) {
                    return Promise.resolve((console.log(error), undefined));
                  }));
            return ;
          } else if (i === 2) {
            Axiosapi$BtsCore.Inside.sGroto(Data$BtsCore.dFormData(state.formId, localStorage.getItem("newid"))).then((function (response) {
                      return Promise.resolve(Curry._1(dispatch, /* SettingGrotoItems */Block.__(6, [response.data.items])));
                    })).catch((function (error) {
                    return Promise.resolve((console.log(error), undefined));
                  }));
            return ;
          } else {
            return ;
          }
        }));
  var insertForm = React.useCallback((function (param) {
          Curry._1(dispatch, /* ActionShowProgress */1);
          Axiosapi$BtsCore.Inside.insert(Data$BtsCore.iSirmsData(state.formId, state.formTitle, state.items.filter((function (item) {
                              return item.formModify === true;
                            })), state.photoitems.filter((function (photoitem) {
                              if (photoitem.photoInsert === true) {
                                return true;
                              } else {
                                return photoitem.photoDelete === true;
                              }
                            })), state.grotoitems.filter((function (grotoitem) {
                              if (grotoitem.grotoInsert === true) {
                                return true;
                              } else {
                                return grotoitem.grotoDelete === true;
                              }
                            })), localStorage.getItem("newid"))).then((function (response) {
                    var match = response.data.status;
                    var tmp;
                    if (match === "istrue") {
                      sessionStorage.setItem("form", "saveSuccess");
                      tmp = ReasonReactRouter.push(Path$BtsCore.insidePath);
                    } else {
                      barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */1);
                    }
                    return Promise.resolve(tmp);
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var showGroupMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowGroupMenu */Block.__(7, [i]));
        }));
  var clickGroupMenu = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickGroupMenu */Block.__(8, [
                      value,
                      i
                    ]));
              Axiosapi$BtsCore.CreateF.sGroup(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                        return Promise.resolve(Curry._1(dispatch, /* SettingItemName */Block.__(10, [
                                          response.data.items,
                                          i
                                        ])));
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var showNameMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowNameMenu */Block.__(9, [i]));
        }));
  var clickNameMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickNameMenu */Block.__(11, [
                            value,
                            i
                          ]));
            });
        }));
  var showCaseMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowCaseMenu */Block.__(12, [i]));
        }));
  var clickCaseMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickCaseMenu */Block.__(13, [
                            value,
                            i
                          ]));
            });
        }));
  var changePage1 = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangePage1 */Block.__(14, [
                            value,
                            i
                          ]));
            });
        }));
  var changePnumber = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangePnumber */Block.__(15, [
                            value,
                            i
                          ]));
            });
        }));
  var changeEndDate = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeEndDate */Block.__(16, [
                            value,
                            i
                          ]));
            });
        }));
  var showObjMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowObjMenu */Block.__(17, [i]));
        }));
  var clickObjMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickObjMenu */Block.__(18, [
                            value,
                            i
                          ]));
            });
        }));
  var changeMomo = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeMomo */Block.__(19, [
                            value,
                            i
                          ]));
            });
        }));
  var changeMb = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeMb */Block.__(20, [
                            value,
                            i
                          ]));
            });
        }));
  var changeAmount = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeAmount */Block.__(21, [
                            value,
                            i
                          ]));
            });
        }));
  var changeSubject = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeSubject */Block.__(22, [
                            value,
                            i
                          ]));
            });
        }));
  var changeEcr = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeEcr */Block.__(23, [
                            value,
                            i
                          ]));
            });
        }));
  var changeEcn = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeEcn */Block.__(24, [
                            value,
                            i
                          ]));
            });
        }));
  var showTypeMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowTypeMenu */Block.__(25, [i]));
        }));
  var clickTypeMenu = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickTypeMenu */Block.__(26, [
                      value,
                      i
                    ]));
              Axiosapi$BtsCore.CreateF.sType(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                        var match = response.data.status;
                        var tmp;
                        if (match === "istrue") {
                          Curry._1(dispatch, /* InputBody */Block.__(27, [
                                  response.data.value,
                                  i
                                ]));
                          tmp = setTextRef(textRef, response.data.value);
                        } else {
                          tmp = barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                        }
                        return Promise.resolve(tmp);
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var inputBody = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* InputBody */Block.__(27, [
                            value,
                            i
                          ]));
            });
        }));
  var clearMailItem = React.useCallback((function (mbId) {
          return (function (i) {
              return Curry._1(dispatch, /* ClearMailItem */Block.__(28, [
                            mbId,
                            i
                          ]));
            });
        }));
  var showMagroupMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowMagroupMenu */Block.__(29, [i]));
        }));
  var clickMagroupMenu = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickMagroupMenu */Block.__(30, [
                      value,
                      i
                    ]));
              Axiosapi$BtsCore.CreateF.sGroup(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                        return Promise.resolve(Curry._1(dispatch, /* SettingItemManame */Block.__(32, [
                                          response.data.items,
                                          i
                                        ])));
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var showManameMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowManameMenu */Block.__(31, [i]));
        }));
  var clickManameMenu = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickManameMenu */Block.__(34, [
                      value,
                      i
                    ]));
              return Curry._1(dispatch, /* AddMailItem */Block.__(33, [
                            value,
                            i
                          ]));
            });
        }));
  var changeAction1 = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeAction1 */Block.__(35, [
                            value,
                            i
                          ]));
            });
        }));
  var clearWorkItem = React.useCallback((function (mbId) {
          return (function (i) {
              return Curry._1(dispatch, /* ClearWorkItem */Block.__(36, [
                            mbId,
                            i
                          ]));
            });
        }));
  var changeWork = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ChangeWork */Block.__(39, [
                      value,
                      i
                    ]));
              Axiosapi$BtsCore.CreateF.sWorkno(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                        return Promise.resolve(Curry._1(dispatch, /* SettingItemWork */Block.__(38, [
                                          response.data.items,
                                          i
                                        ])));
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var keydownWork = React.useCallback((function (keyCode) {
          return (function (value, i) {
              if (keyCode === 13) {
                Axiosapi$BtsCore.CreateF.cWorkno(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                          var match = response.data.status;
                          var tmp;
                          if (match === "istrue") {
                            Curry._1(dispatch, /* ClickItemWork */Block.__(40, [i]));
                            tmp = Curry._1(dispatch, /* AddWorkItem */Block.__(41, [
                                    value,
                                    i
                                  ]));
                          } else {
                            tmp = barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                          }
                          return Promise.resolve(tmp);
                        })).catch((function (error) {
                        return Promise.resolve((console.log(error), undefined));
                      }));
                return ;
              }
              
            });
        }));
  var showWork = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowWork */Block.__(37, [
                        false,
                        i
                      ]));
        }));
  var clickItemWork = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickItemWork */Block.__(40, [i]));
              return Curry._1(dispatch, /* AddWorkItem */Block.__(41, [
                            value,
                            i
                          ]));
            });
        }));
  var changeAction2 = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeAction2 */Block.__(42, [
                            value,
                            i
                          ]));
            });
        }));
  var clearMbItem = React.useCallback((function (mbId) {
          return (function (i) {
              return Curry._1(dispatch, /* ClearMbItem */Block.__(43, [
                            mbId,
                            i
                          ]));
            });
        }));
  var showMtstMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowMtstMenu */Block.__(44, [i]));
        }));
  var clickMtstMenu = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickMtstMenu */Block.__(45, [
                      value,
                      i
                    ]));
              Axiosapi$BtsCore.CreateF.sModel(Data$BtsCore.otherData(localStorage.getItem("newid"), value)).then((function (response) {
                        return Promise.resolve(Curry._1(dispatch, /* SettingItemModel */Block.__(47, [
                                          response.data.items,
                                          i
                                        ])));
                      })).catch((function (error) {
                      return Promise.resolve((console.log(error), undefined));
                    }));
              
            });
        }));
  var showMbstMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowMbstMenu */Block.__(46, [i]));
        }));
  var clickMbstMenu = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ClickMbstMenu */Block.__(49, [
                      value,
                      i
                    ]));
              return Curry._1(dispatch, /* AddMbItem */Block.__(48, [
                            value,
                            i
                          ]));
            });
        }));
  var changeOldno = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeOldno */Block.__(50, [
                            value,
                            i
                          ]));
            });
        }));
  var changeNewno = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeNewno */Block.__(51, [
                            value,
                            i
                          ]));
            });
        }));
  var changeSopno = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeSopno */Block.__(52, [
                            value,
                            i
                          ]));
            });
        }));
  var changeAction3 = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeAction3 */Block.__(53, [
                            value,
                            i
                          ]));
            });
        }));
  var changeSipno = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeSipno */Block.__(54, [
                            value,
                            i
                          ]));
            });
        }));
  var changeAction4 = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeAction4 */Block.__(55, [
                            value,
                            i
                          ]));
            });
        }));
  var changeAction5 = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeAction5 */Block.__(56, [
                            value,
                            i
                          ]));
            });
        }));
  var dragOverFile = React.useCallback((function ($$event) {
          $$event.preventDefault();
          $$event.stopPropagation();
          return Curry._1(dispatch, /* ShowDrop */Block.__(57, [true]));
        }));
  var dragLeaveFile = React.useCallback((function ($$event) {
          $$event.preventDefault();
          $$event.stopPropagation();
          return Curry._1(dispatch, /* ShowDrop */Block.__(57, [false]));
        }));
  var uploadAJax = function (files) {
    var formData = new FormData();
    formData.append("file", files);
    Axiosapi$BtsCore.Files.upload(formData).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* AddPhotoItem */Block.__(58, [
                        response.data.images,
                        response.data.videos,
                        response.data.audios,
                        response.data.src,
                        response.data.imagePath,
                        response.data.original,
                        response.data.encryption,
                        response.data.extension,
                        response.data.date
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              } else {
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var dropFile = React.useCallback((function ($$event) {
          return (function (value) {
              $$event.preventDefault();
              $$event.stopPropagation();
              Curry._1(dispatch, /* ActionShowProgress */1);
              Curry._1(dispatch, /* ShowDrop */Block.__(57, [false]));
              return uploadAJax(value);
            });
        }));
  var chooseFile = React.useCallback((function (param) {
          var el = fileRef.current;
          if (!(el == null)) {
            el.click();
            return ;
          }
          
        }));
  var changeFile = React.useCallback((function (value) {
          Curry._1(dispatch, /* ActionShowProgress */1);
          return uploadAJax(value);
        }));
  var actionPhoto = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ActionPhotoItem */Block.__(59, [i]));
        }));
  var cGrotoAJax = function (images, videos, audios, src, imagePath, original, encryption, extension, date) {
    Axiosapi$BtsCore.CreateF.cGroto(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* AddGrotoItem */Block.__(60, [
                        images,
                        videos,
                        audios,
                        src,
                        imagePath,
                        original,
                        encryption,
                        extension,
                        date,
                        response.data.newid
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              } else {
                tmp = barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var upGrotoAJax = function (files) {
    var formData = new FormData();
    formData.append("file", files);
    Axiosapi$BtsCore.Files.upload(formData).then((function (response) {
              var match = response.data.status;
              var tmp = match === "istrue" ? cGrotoAJax(response.data.images, response.data.videos, response.data.audios, response.data.src, response.data.imagePath, response.data.original, response.data.encryption, response.data.extension, response.data.date) : Curry._1(dispatch, /* ActionShowProgress */1);
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var dropGrotoFile = React.useCallback((function ($$event) {
          return (function (value) {
              $$event.preventDefault();
              $$event.stopPropagation();
              Curry._1(dispatch, /* ActionShowProgress */1);
              Curry._1(dispatch, /* ShowDrop */Block.__(57, [false]));
              return upGrotoAJax(value);
            });
        }));
  var changeGrotoFile = React.useCallback((function (value) {
          Curry._1(dispatch, /* ActionShowProgress */1);
          return upGrotoAJax(value);
        }));
  var actionGroto = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ActionGrotoItem */Block.__(61, [i]));
        }));
  var match$1 = state.index;
  return React.createElement(React.Fragment, undefined, React.createElement(NewFacetube$BtsCore.make, {
                  showProgress: state.showProgress,
                  error: state.error,
                  children: React.createElement(GridItem$BtsCore.make, {
                        style: Together$BtsCore.marginAuto,
                        top: "0",
                        right: "32",
                        bottom: "0",
                        left: "32",
                        xs: "12",
                        maxWidth: "770px",
                        children: React.createElement(GridContainer$BtsCore.make, {
                              direction: "column",
                              justify: "center",
                              alignItem: "stretch",
                              children: null
                            }, React.createElement(GridItem$BtsCore.make, {
                                  style: {
                                    position: "sticky",
                                    top: "0px",
                                    zIndex: "1000"
                                  },
                                  left: "0",
                                  xs: "auto",
                                  children: React.createElement(Typography$BtsCore.make, {
                                        variant: "tile",
                                        fontWeight: "600",
                                        children: state.formTitle
                                      })
                                }), React.createElement(GridItem$BtsCore.make, {
                                  style: {
                                    position: "sticky",
                                    top: "50px",
                                    zIndex: "1000"
                                  },
                                  top: "0",
                                  bottom: "6",
                                  left: "0",
                                  xs: "auto",
                                  children: React.createElement(GridContainer$BtsCore.make, {
                                        direction: "row",
                                        justify: "around",
                                        alignItem: "center",
                                        children: null
                                      }, React.createElement(GridItem$BtsCore.make, {
                                            top: "0",
                                            right: "0",
                                            bottom: "0",
                                            left: "0",
                                            xs: "auto",
                                            children: React.createElement(Tabs$BtsCore.make, {
                                                  id: "report-",
                                                  index: state.index,
                                                  height: "3",
                                                  children: $$Array.of_list(List.mapi((function (i, tabitem) {
                                                              return React.createElement(Tab$BtsCore.make, {
                                                                          showTab: tabitem.showTab,
                                                                          maxWidth: "111.6",
                                                                          borderRadius: "15",
                                                                          id: "report-" + String(i),
                                                                          animationName: "none",
                                                                          onClick: (function (param) {
                                                                              return Curry._1(clickItemTab, i);
                                                                            }),
                                                                          children: React.createElement(IconAction$BtsCore.make, {
                                                                                width: "28",
                                                                                height: "28",
                                                                                animation: "leftRight",
                                                                                src: tabitem.tabImage
                                                                              })
                                                                        });
                                                            }), state.tabitems))
                                                })
                                          }), state.update ? React.createElement(GridItem$BtsCore.make, {
                                              top: "0",
                                              right: "0",
                                              bottom: "0",
                                              left: "0",
                                              xs: "no",
                                              children: React.createElement(Button$BtsCore.make, {
                                                    disabled: state.showProgress,
                                                    onClick: insertForm,
                                                    children: React.createElement(ReactIntl.FormattedMessage, {
                                                          id: "save",
                                                          defaultMessage: "Save"
                                                        })
                                                  })
                                            }) : null)
                                }), match$1 !== 0 ? (
                                match$1 !== 1 ? React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                            top: "0",
                                            right: "0",
                                            bottom: "0",
                                            left: "0",
                                            xs: "auto",
                                            children: React.createElement(GeneralUpload$BtsCore.make, {
                                                  webLoad: state.showProgress,
                                                  showDrop: state.showDrop,
                                                  fileRef: fileRef,
                                                  onDragOver: Curry.__1(dragOverFile),
                                                  onDragLeave: Curry.__1(dragLeaveFile),
                                                  onDrop: (function ($$event) {
                                                      return Curry._2(dropGrotoFile, $$event, Caml_array.caml_array_get($$event.nativeEvent.dataTransfer.files, 0));
                                                    }),
                                                  disabled: state.showProgress,
                                                  onClick: chooseFile,
                                                  onChange: (function ($$event) {
                                                      return Curry._1(changeGrotoFile, Caml_array.caml_array_get($$event.target.files, 0));
                                                    })
                                                })
                                          }), React.createElement(GridItem$BtsCore.make, {
                                            top: "0",
                                            right: "0",
                                            bottom: "0",
                                            left: "0",
                                            xs: "auto",
                                            children: React.createElement(GridContainer$BtsCore.make, {
                                                  direction: "columnReverse",
                                                  justify: "center",
                                                  alignItem: "stretch",
                                                  children: $$Array.mapi((function (i, grotoitem) {
                                                          var match = grotoitem.grotoImage;
                                                          var match$1 = grotoitem.grotoVideo;
                                                          var match$2 = grotoitem.grotoAudio;
                                                          return React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                                                          enterBorderRadius: "15",
                                                                          borderRadius: "15",
                                                                          enterBackgroundColor: grotoitem.grotoDelete ? "rgba(255,0,0,1)" : "rgba(255,255,255,1)",
                                                                          backgroundColor: grotoitem.grotoDelete ? "rgba(255,0,0,0.8)" : "rgba(255,255,255,1)",
                                                                          xs: "auto",
                                                                          children: React.createElement(GridContainer$BtsCore.make, {
                                                                                backgroundColor: "transparent",
                                                                                direction: "columnReverse",
                                                                                justify: "center",
                                                                                alignItem: "stretch",
                                                                                children: null
                                                                              }, React.createElement(GridItem$BtsCore.make, {
                                                                                    top: "0",
                                                                                    right: "0",
                                                                                    bottom: "0",
                                                                                    left: "0",
                                                                                    enterBackgroundColor: "transparent",
                                                                                    backgroundColor: "transparent",
                                                                                    xs: "auto",
                                                                                    children: match ? React.createElement(Image$BtsCore.make, {
                                                                                            width: "auto",
                                                                                            height: "300px",
                                                                                            borderRadius: "6",
                                                                                            src: grotoitem.grotoPath + grotoitem.grotoSrc
                                                                                          }) : (
                                                                                        match$1 ? React.createElement(Media$BtsCore.make, {
                                                                                                width: "auto",
                                                                                                borderRadius: "6",
                                                                                                controls: true,
                                                                                                src: grotoitem.grotoPath + grotoitem.grotoSrc
                                                                                              }) : (
                                                                                            match$2 ? React.createElement(Media$BtsCore.make, {
                                                                                                    variant: "audio",
                                                                                                    width: "auto",
                                                                                                    borderRadius: "6",
                                                                                                    controls: true,
                                                                                                    src: grotoitem.grotoPath + grotoitem.grotoSrc
                                                                                                  }) : null
                                                                                          )
                                                                                      )
                                                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                                                    top: "0",
                                                                                    right: "0",
                                                                                    bottom: "6",
                                                                                    left: "0",
                                                                                    enterBackgroundColor: "transparent",
                                                                                    backgroundColor: "transparent",
                                                                                    xs: "auto",
                                                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                                                          backgroundColor: "transparent",
                                                                                          direction: "row",
                                                                                          justify: "between",
                                                                                          alignItem: "center",
                                                                                          children: null
                                                                                        }, React.createElement(GridItem$BtsCore.make, {
                                                                                              top: "0",
                                                                                              right: "0",
                                                                                              bottom: "0",
                                                                                              left: "0",
                                                                                              enterBackgroundColor: "transparent",
                                                                                              backgroundColor: "transparent",
                                                                                              xs: "auto",
                                                                                              children: React.createElement(Typography$BtsCore.make, {
                                                                                                    variant: "subheading",
                                                                                                    color: grotoitem.grotoDelete ? "rgba(255,255,255,1)" : "rgba(0,0,0,1)",
                                                                                                    noWrap: true,
                                                                                                    children: grotoitem.grotoOriginal + (grotoitem.grotoExtension + ("(" + (grotoitem.grotoName + ")")))
                                                                                                  })
                                                                                            }), grotoitem.showDelete ? React.createElement(GridItem$BtsCore.make, {
                                                                                                top: "0",
                                                                                                right: "0",
                                                                                                bottom: "0",
                                                                                                left: "0",
                                                                                                enterBackgroundColor: "transparent",
                                                                                                backgroundColor: "transparent",
                                                                                                xs: "no",
                                                                                                children: React.createElement(IconButton$BtsCore.make, {
                                                                                                      padding: "6",
                                                                                                      disabled: state.showProgress,
                                                                                                      onClick: (function (param) {
                                                                                                          return Curry._1(actionGroto, i);
                                                                                                        }),
                                                                                                      children: React.createElement(IconAction$BtsCore.make, {
                                                                                                            animation: "leftRight",
                                                                                                            src: grotoitem.grotoDelete ? Icons$BtsCore.refreshWhite : Icons$BtsCore.deleteBlack
                                                                                                          })
                                                                                                    })
                                                                                              }) : null)
                                                                                  }))
                                                                        }), React.createElement(GridItem$BtsCore.make, {
                                                                          right: "24",
                                                                          left: "24",
                                                                          xs: "auto",
                                                                          children: React.createElement(Divider$BtsCore.make, { })
                                                                        }));
                                                        }), state.grotoitems)
                                                })
                                          })) : React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                            top: "0",
                                            right: "0",
                                            bottom: "0",
                                            left: "0",
                                            xs: "auto",
                                            children: React.createElement(GeneralUpload$BtsCore.make, {
                                                  webLoad: state.showProgress,
                                                  showDrop: state.showDrop,
                                                  fileRef: fileRef,
                                                  onDragOver: Curry.__1(dragOverFile),
                                                  onDragLeave: Curry.__1(dragLeaveFile),
                                                  onDrop: (function ($$event) {
                                                      return Curry._2(dropFile, $$event, Caml_array.caml_array_get($$event.nativeEvent.dataTransfer.files, 0));
                                                    }),
                                                  disabled: state.showProgress,
                                                  onClick: chooseFile,
                                                  onChange: (function ($$event) {
                                                      return Curry._1(changeFile, Caml_array.caml_array_get($$event.target.files, 0));
                                                    })
                                                })
                                          }), React.createElement(GridItem$BtsCore.make, {
                                            top: "0",
                                            right: "0",
                                            bottom: "0",
                                            left: "0",
                                            xs: "auto",
                                            children: React.createElement(GridContainer$BtsCore.make, {
                                                  direction: "columnReverse",
                                                  justify: "center",
                                                  alignItem: "stretch",
                                                  children: $$Array.mapi((function (i, photoitem) {
                                                          var match = photoitem.photoImage;
                                                          var match$1 = photoitem.photoVideo;
                                                          var match$2 = photoitem.photoAudio;
                                                          return React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                                                          enterBorderRadius: "15",
                                                                          borderRadius: "15",
                                                                          enterBackgroundColor: photoitem.photoDelete ? "rgba(255,0,0,1)" : "rgba(255,255,255,1)",
                                                                          backgroundColor: photoitem.photoDelete ? "rgba(255,0,0,0.8)" : "rgba(255,255,255,1)",
                                                                          xs: "auto",
                                                                          children: React.createElement(GridContainer$BtsCore.make, {
                                                                                backgroundColor: "transparent",
                                                                                direction: "columnReverse",
                                                                                justify: "center",
                                                                                alignItem: "stretch",
                                                                                children: null
                                                                              }, React.createElement(GridItem$BtsCore.make, {
                                                                                    top: "0",
                                                                                    right: "0",
                                                                                    bottom: "0",
                                                                                    left: "0",
                                                                                    enterBackgroundColor: "transparent",
                                                                                    backgroundColor: "transparent",
                                                                                    xs: "auto",
                                                                                    children: match ? React.createElement(Image$BtsCore.make, {
                                                                                            width: "auto",
                                                                                            height: "300px",
                                                                                            borderRadius: "6",
                                                                                            src: photoitem.photoPath + photoitem.photoSrc
                                                                                          }) : (
                                                                                        match$1 ? React.createElement(Media$BtsCore.make, {
                                                                                                width: "auto",
                                                                                                borderRadius: "6",
                                                                                                controls: true,
                                                                                                src: photoitem.photoPath + photoitem.photoSrc
                                                                                              }) : (
                                                                                            match$2 ? React.createElement(Media$BtsCore.make, {
                                                                                                    variant: "audio",
                                                                                                    width: "auto",
                                                                                                    borderRadius: "6",
                                                                                                    controls: true,
                                                                                                    src: photoitem.photoPath + photoitem.photoSrc
                                                                                                  }) : null
                                                                                          )
                                                                                      )
                                                                                  }), React.createElement(GridItem$BtsCore.make, {
                                                                                    top: "0",
                                                                                    right: "0",
                                                                                    bottom: "6",
                                                                                    left: "0",
                                                                                    enterBackgroundColor: "transparent",
                                                                                    backgroundColor: "transparent",
                                                                                    xs: "auto",
                                                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                                                          backgroundColor: "transparent",
                                                                                          direction: "row",
                                                                                          justify: "between",
                                                                                          alignItem: "center",
                                                                                          children: null
                                                                                        }, React.createElement(GridItem$BtsCore.make, {
                                                                                              top: "0",
                                                                                              right: "0",
                                                                                              bottom: "0",
                                                                                              left: "0",
                                                                                              enterBackgroundColor: "transparent",
                                                                                              backgroundColor: "transparent",
                                                                                              xs: "auto",
                                                                                              children: React.createElement(Typography$BtsCore.make, {
                                                                                                    variant: "subheading",
                                                                                                    color: photoitem.photoDelete ? "rgba(255,255,255,1)" : "rgba(0,0,0,1)",
                                                                                                    noWrap: true,
                                                                                                    children: photoitem.photoOriginal + photoitem.photoExtension
                                                                                                  })
                                                                                            }), photoitem.showDelete ? React.createElement(GridItem$BtsCore.make, {
                                                                                                top: "0",
                                                                                                right: "0",
                                                                                                bottom: "0",
                                                                                                left: "0",
                                                                                                enterBackgroundColor: "transparent",
                                                                                                backgroundColor: "transparent",
                                                                                                xs: "no",
                                                                                                children: React.createElement(IconButton$BtsCore.make, {
                                                                                                      padding: "6",
                                                                                                      disabled: state.showProgress,
                                                                                                      onClick: (function (param) {
                                                                                                          return Curry._1(actionPhoto, i);
                                                                                                        }),
                                                                                                      children: React.createElement(IconAction$BtsCore.make, {
                                                                                                            animation: "leftRight",
                                                                                                            src: photoitem.photoDelete ? Icons$BtsCore.refreshWhite : Icons$BtsCore.deleteBlack
                                                                                                          })
                                                                                                    })
                                                                                              }) : null)
                                                                                  }))
                                                                        }), React.createElement(GridItem$BtsCore.make, {
                                                                          right: "24",
                                                                          left: "24",
                                                                          xs: "auto",
                                                                          children: React.createElement(Divider$BtsCore.make, { })
                                                                        }));
                                                        }), state.photoitems)
                                                })
                                          }))
                              ) : $$Array.mapi((function (i, item) {
                                      return React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                                      top: "10",
                                                      right: "0",
                                                      bottom: "6",
                                                      left: "6",
                                                      xs: "auto",
                                                      children: React.createElement(Typography$BtsCore.make, {
                                                            variant: "subheading",
                                                            fontWeight: "bolder",
                                                            children: item.postdate
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "center",
                                                            alignItem: "center",
                                                            children: null
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: null
                                                              }, React.createElement(SelectStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    tile: "發文部門",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.postGroup,
                                                                    disabled: state.showProgress,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showGroupMenu, i);
                                                                      }),
                                                                    children: /* tuple */[
                                                                      item.showGroupMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                              top: "0",
                                                                              transform: "translate(0, 0)",
                                                                              maxHeight: "280",
                                                                              minHeight: "0",
                                                                              topLeft: "12",
                                                                              topRight: "12",
                                                                              bottomRight: "12",
                                                                              bottomLeft: "12",
                                                                              paddingRight: "8",
                                                                              paddingLeft: "8",
                                                                              children: $$Array.map((function (groupitem) {
                                                                                      return React.createElement(MenuItem$BtsCore.make, {
                                                                                                  top: "0",
                                                                                                  right: "8",
                                                                                                  bottom: "0",
                                                                                                  left: "8",
                                                                                                  disablePadding: groupitem.optionPadding,
                                                                                                  topLeft: "12",
                                                                                                  topRight: "12",
                                                                                                  bottomRight: "12",
                                                                                                  bottomLeft: "12",
                                                                                                  onClick: (function (param) {
                                                                                                      return Curry._2(clickGroupMenu, groupitem.value, i);
                                                                                                    }),
                                                                                                  children: groupitem.value
                                                                                                });
                                                                                    }), item.groupitems)
                                                                            }) : null,
                                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                                            animation: IconAnimation$BtsCore.topDownRorate(item.showGroupMenu),
                                                                            src: Icons$BtsCore.arrowDownBlack
                                                                          })
                                                                    ]
                                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                    showBackground: item.showGroupMenu,
                                                                    backgroundColor: "transparent",
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showGroupMenu, i);
                                                                      })
                                                                  })), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: null
                                                              }, React.createElement(SelectStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    tile: "發文者",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.postName,
                                                                    disabled: state.showProgress,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showNameMenu, i);
                                                                      }),
                                                                    children: /* tuple */[
                                                                      item.showNameMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                              top: "0",
                                                                              transform: "translate(0, 0)",
                                                                              maxHeight: "280",
                                                                              minHeight: "0",
                                                                              topLeft: "12",
                                                                              topRight: "12",
                                                                              bottomRight: "12",
                                                                              bottomLeft: "12",
                                                                              paddingRight: "8",
                                                                              paddingLeft: "8",
                                                                              children: $$Array.map((function (nameitem) {
                                                                                      return React.createElement(MenuItem$BtsCore.make, {
                                                                                                  top: "0",
                                                                                                  right: "8",
                                                                                                  bottom: "0",
                                                                                                  left: "8",
                                                                                                  disablePadding: nameitem.optionPadding,
                                                                                                  topLeft: "12",
                                                                                                  topRight: "12",
                                                                                                  bottomRight: "12",
                                                                                                  bottomLeft: "12",
                                                                                                  onClick: (function (param) {
                                                                                                      return Curry._2(clickNameMenu, nameitem.value, i);
                                                                                                    }),
                                                                                                  children: nameitem.value
                                                                                                });
                                                                                    }), item.nameitems)
                                                                            }) : null,
                                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                                            animation: IconAnimation$BtsCore.topDownRorate(item.showNameMenu),
                                                                            src: Icons$BtsCore.arrowDownBlack
                                                                          })
                                                                    ]
                                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                    showBackground: item.showNameMenu,
                                                                    backgroundColor: "transparent",
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showNameMenu, i);
                                                                      })
                                                                  })), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: null
                                                              }, React.createElement(SelectStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    tile: "變更內容",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.case,
                                                                    disabled: state.showProgress,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showCaseMenu, i);
                                                                      }),
                                                                    children: /* tuple */[
                                                                      item.showCaseMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                              top: "0",
                                                                              transform: "translate(0, 0)",
                                                                              maxHeight: "280",
                                                                              minHeight: "0",
                                                                              topLeft: "12",
                                                                              topRight: "12",
                                                                              bottomRight: "12",
                                                                              bottomLeft: "12",
                                                                              paddingRight: "8",
                                                                              paddingLeft: "8",
                                                                              children: $$Array.map((function (caseitem) {
                                                                                      return React.createElement(MenuItem$BtsCore.make, {
                                                                                                  top: "0",
                                                                                                  right: "8",
                                                                                                  bottom: "0",
                                                                                                  left: "8",
                                                                                                  disablePadding: caseitem.optionPadding,
                                                                                                  topLeft: "12",
                                                                                                  topRight: "12",
                                                                                                  bottomRight: "12",
                                                                                                  bottomLeft: "12",
                                                                                                  onClick: (function (param) {
                                                                                                      return Curry._2(clickCaseMenu, caseitem.value, i);
                                                                                                    }),
                                                                                                  children: caseitem.value
                                                                                                });
                                                                                    }), item.caseitems)
                                                                            }) : null,
                                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                                            animation: IconAnimation$BtsCore.topDownRorate(item.showCaseMenu),
                                                                            src: Icons$BtsCore.arrowDownBlack
                                                                          })
                                                                    ]
                                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                    showBackground: item.showCaseMenu,
                                                                    backgroundColor: "transparent",
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showCaseMenu, i);
                                                                      })
                                                                  })))
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "center",
                                                            alignItem: "center",
                                                            children: null
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      value: item.homepage1,
                                                                      disabled: state.showProgress,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changePage1, $$event.target.value, i);
                                                                        }),
                                                                      children: "客戶"
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      value: item.pnumber,
                                                                      disabled: state.showProgress,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changePnumber, $$event.target.value, i);
                                                                        }),
                                                                      children: "訂單號碼"
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      type_: "date",
                                                                      value: item.endDate,
                                                                      disabled: state.showProgress,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changeEndDate, $$event.target.value, i);
                                                                        }),
                                                                      children: "文件有效期限"
                                                                    })
                                                              }))
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "center",
                                                            alignItem: "center",
                                                            children: null
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: null
                                                              }, React.createElement(SelectStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    tile: "影響站別",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.obj,
                                                                    disabled: state.showProgress,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showObjMenu, i);
                                                                      }),
                                                                    children: /* tuple */[
                                                                      item.showObjMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                              top: "0",
                                                                              transform: "translate(0, 0)",
                                                                              maxHeight: "280",
                                                                              minHeight: "0",
                                                                              topLeft: "12",
                                                                              topRight: "12",
                                                                              bottomRight: "12",
                                                                              bottomLeft: "12",
                                                                              paddingRight: "8",
                                                                              paddingLeft: "8",
                                                                              children: $$Array.map((function (objitem) {
                                                                                      return React.createElement(MenuItem$BtsCore.make, {
                                                                                                  top: "0",
                                                                                                  right: "8",
                                                                                                  bottom: "0",
                                                                                                  left: "8",
                                                                                                  disablePadding: objitem.optionPadding,
                                                                                                  topLeft: "12",
                                                                                                  topRight: "12",
                                                                                                  bottomRight: "12",
                                                                                                  bottomLeft: "12",
                                                                                                  onClick: (function (param) {
                                                                                                      return Curry._2(clickObjMenu, objitem.value, i);
                                                                                                    }),
                                                                                                  children: objitem.value
                                                                                                });
                                                                                    }), item.objitems)
                                                                            }) : null,
                                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                                            animation: IconAnimation$BtsCore.topDownRorate(item.showObjMenu),
                                                                            src: Icons$BtsCore.arrowDownBlack
                                                                          })
                                                                    ]
                                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                    showBackground: item.showObjMenu,
                                                                    backgroundColor: "transparent",
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showObjMenu, i);
                                                                      })
                                                                  })), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      value: item.homepageMomo,
                                                                      disabled: state.showProgress,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changeMomo, $$event.target.value, i);
                                                                        }),
                                                                      children: "機種"
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      value: item.mb,
                                                                      disabled: state.showProgress,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changeMb, $$event.target.value, i);
                                                                        }),
                                                                      children: "M/B"
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      type_: "number",
                                                                      value: item.amount,
                                                                      disabled: state.showProgress,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changeAmount, $$event.target.value, i);
                                                                        }),
                                                                      children: "生產數量"
                                                                    })
                                                              }))
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                            top: "12",
                                                            right: "0",
                                                            left: "0",
                                                            labelColor: "rgba(255,0,0,0.8)",
                                                            enterBorderColor: "rgba(255,0,0,0.8)",
                                                            downBorderColor: "rgba(255,0,0,0.6)",
                                                            borderColor: "rgba(0,0,0,0.2)",
                                                            value: item.subject,
                                                            disabled: state.showProgress,
                                                            onChange: (function ($$event) {
                                                                return Curry._2(changeSubject, $$event.target.value, i);
                                                              }),
                                                            children: "主旨"
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "center",
                                                            alignItem: "center",
                                                            children: null
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      value: item.ecr,
                                                                      disabled: state.showProgress,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changeEcr, $$event.target.value, i);
                                                                        }),
                                                                      children: "ECR"
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      value: item.ecn,
                                                                      disabled: state.showProgress,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changeEcn, $$event.target.value, i);
                                                                        }),
                                                                      children: "ECN"
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: null
                                                              }, React.createElement(SelectStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    tile: "類型",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.type_,
                                                                    disabled: state.showProgress,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showTypeMenu, i);
                                                                      }),
                                                                    children: /* tuple */[
                                                                      item.showTypeMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                              top: "0",
                                                                              transform: "translate(0, 0)",
                                                                              maxHeight: "280",
                                                                              minHeight: "0",
                                                                              topLeft: "12",
                                                                              topRight: "12",
                                                                              bottomRight: "12",
                                                                              bottomLeft: "12",
                                                                              paddingRight: "8",
                                                                              paddingLeft: "8",
                                                                              children: $$Array.map((function (typeitem) {
                                                                                      return React.createElement(MenuItem$BtsCore.make, {
                                                                                                  top: "0",
                                                                                                  right: "8",
                                                                                                  bottom: "0",
                                                                                                  left: "8",
                                                                                                  disablePadding: typeitem.optionPadding,
                                                                                                  topLeft: "12",
                                                                                                  topRight: "12",
                                                                                                  bottomRight: "12",
                                                                                                  bottomLeft: "12",
                                                                                                  onClick: (function (param) {
                                                                                                      return Curry._2(clickTypeMenu, typeitem.value, i);
                                                                                                    }),
                                                                                                  children: typeitem.value
                                                                                                });
                                                                                    }), item.typeitems)
                                                                            }) : null,
                                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                                            animation: IconAnimation$BtsCore.topDownRorate(item.showTypeMenu),
                                                                            src: Icons$BtsCore.arrowDownBlack
                                                                          })
                                                                    ]
                                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                    showBackground: item.showTypeMenu,
                                                                    backgroundColor: "transparent",
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showTypeMenu, i);
                                                                      })
                                                                  })))
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(ToolBar$BtsCore.make, {
                                                            disabled: state.showProgress,
                                                            width: state.formWidth
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(TextFieldArticle$BtsCore.make, {
                                                            textRef: textRef,
                                                            disabled: state.showProgress,
                                                            onInput: (function ($$event) {
                                                                return Curry._2(inputBody, $$event.target.innerHTML, i);
                                                              })
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "6",
                                                      bottom: "6",
                                                      left: "6",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "start",
                                                            alignItem: "center",
                                                            children: $$Array.map((function (mailitem) {
                                                                    return React.createElement(GridItem$BtsCore.make, {
                                                                                top: "0",
                                                                                bottom: "0",
                                                                                left: "0",
                                                                                xs: "no",
                                                                                children: React.createElement(Chip$BtsCore.make, {
                                                                                      enterBorderWidth: "0",
                                                                                      downBorderWidth: "0",
                                                                                      borderWidth: "0",
                                                                                      showButn: true,
                                                                                      src: Icons$BtsCore.clearBlack,
                                                                                      onButton: (function (param) {
                                                                                          return Curry._2(clearMailItem, mailitem.mbId, i);
                                                                                        }),
                                                                                      children: /* tuple */[
                                                                                        React.createElement(Typography$BtsCore.make, {
                                                                                              variant: "subtitle2",
                                                                                              children: "S"
                                                                                            }),
                                                                                        React.createElement(Typography$BtsCore.make, {
                                                                                              variant: "subtitle2",
                                                                                              children: mailitem.mbValue
                                                                                            })
                                                                                      ]
                                                                                    })
                                                                              });
                                                                  }), item.mailitems)
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "center",
                                                            alignItem: "center",
                                                            children: null
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: null
                                                              }, React.createElement(SelectStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    tile: "相關部門",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.maGroup,
                                                                    disabled: state.showProgress,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showMagroupMenu, i);
                                                                      }),
                                                                    children: /* tuple */[
                                                                      item.showMagroupMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                              top: "0",
                                                                              transform: "translate(0, 0)",
                                                                              maxHeight: "280",
                                                                              minHeight: "0",
                                                                              topLeft: "12",
                                                                              topRight: "12",
                                                                              bottomRight: "12",
                                                                              bottomLeft: "12",
                                                                              paddingRight: "8",
                                                                              paddingLeft: "8",
                                                                              children: $$Array.map((function (magroupitem) {
                                                                                      return React.createElement(MenuItem$BtsCore.make, {
                                                                                                  top: "0",
                                                                                                  right: "8",
                                                                                                  bottom: "0",
                                                                                                  left: "8",
                                                                                                  disablePadding: magroupitem.optionPadding,
                                                                                                  topLeft: "12",
                                                                                                  topRight: "12",
                                                                                                  bottomRight: "12",
                                                                                                  bottomLeft: "12",
                                                                                                  onClick: (function (param) {
                                                                                                      return Curry._2(clickMagroupMenu, magroupitem.value, i);
                                                                                                    }),
                                                                                                  children: magroupitem.value
                                                                                                });
                                                                                    }), item.magroupitems)
                                                                            }) : null,
                                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                                            animation: IconAnimation$BtsCore.topDownRorate(item.showMagroupMenu),
                                                                            src: Icons$BtsCore.arrowDownBlack
                                                                          })
                                                                    ]
                                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                    showBackground: item.showMagroupMenu,
                                                                    backgroundColor: "transparent",
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showMagroupMenu, i);
                                                                      })
                                                                  })), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: null
                                                              }, React.createElement(SelectStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    tile: "相關人員",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.maName,
                                                                    disabled: state.showProgress,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showManameMenu, i);
                                                                      }),
                                                                    children: /* tuple */[
                                                                      item.showManameMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                              top: "0",
                                                                              transform: "translate(0, 0)",
                                                                              maxHeight: "280",
                                                                              minHeight: "0",
                                                                              topLeft: "12",
                                                                              topRight: "12",
                                                                              bottomRight: "12",
                                                                              bottomLeft: "12",
                                                                              paddingRight: "8",
                                                                              paddingLeft: "8",
                                                                              children: $$Array.map((function (manameitem) {
                                                                                      return React.createElement(MenuItem$BtsCore.make, {
                                                                                                  top: "0",
                                                                                                  right: "8",
                                                                                                  bottom: "0",
                                                                                                  left: "8",
                                                                                                  disablePadding: manameitem.optionPadding,
                                                                                                  topLeft: "12",
                                                                                                  topRight: "12",
                                                                                                  bottomRight: "12",
                                                                                                  bottomLeft: "12",
                                                                                                  onClick: (function (param) {
                                                                                                      return Curry._2(clickManameMenu, manameitem.value, i);
                                                                                                    }),
                                                                                                  children: manameitem.value
                                                                                                });
                                                                                    }), item.manameitems)
                                                                            }) : null,
                                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                                            animation: IconAnimation$BtsCore.topDownRorate(item.showManameMenu),
                                                                            src: Icons$BtsCore.arrowDownBlack
                                                                          })
                                                                    ]
                                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                    showBackground: item.showManameMenu,
                                                                    backgroundColor: "transparent",
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showManameMenu, i);
                                                                      })
                                                                  })))
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(TextFieldMultiline$BtsCore.make, {
                                                            top: "12",
                                                            right: "0",
                                                            left: "0",
                                                            labelColor: "rgba(255,0,0,0.8)",
                                                            enterBorderColor: "rgba(255,0,0,0.8)",
                                                            downBorderColor: "rgba(255,0,0,0.6)",
                                                            borderColor: "rgba(0,0,0,0.2)",
                                                            rows: 3,
                                                            value: item.action1,
                                                            disabled: state.showProgress,
                                                            onChange: (function ($$event) {
                                                                return Curry._2(changeAction1, $$event.target.value, i);
                                                              }),
                                                            children: "資材處"
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "6",
                                                      bottom: "6",
                                                      left: "6",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "start",
                                                            alignItem: "center",
                                                            children: $$Array.map((function (workitem) {
                                                                    return React.createElement(GridItem$BtsCore.make, {
                                                                                top: "0",
                                                                                bottom: "0",
                                                                                left: "0",
                                                                                xs: "no",
                                                                                children: React.createElement(Chip$BtsCore.make, {
                                                                                      enterBorderWidth: "0",
                                                                                      downBorderWidth: "0",
                                                                                      borderWidth: "0",
                                                                                      showButn: true,
                                                                                      src: Icons$BtsCore.clearBlack,
                                                                                      onButton: (function (param) {
                                                                                          return Curry._2(clearWorkItem, workitem.mbId, i);
                                                                                        }),
                                                                                      children: /* tuple */[
                                                                                        React.createElement(Typography$BtsCore.make, {
                                                                                              variant: "subtitle2",
                                                                                              children: "S"
                                                                                            }),
                                                                                        React.createElement(Typography$BtsCore.make, {
                                                                                              variant: "subtitle2",
                                                                                              children: workitem.mbValue
                                                                                            })
                                                                                      ]
                                                                                    })
                                                                              });
                                                                  }), item.workitems)
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      style: {
                                                        position: "relative"
                                                      },
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: null
                                                    }, React.createElement(TextFieldStandard$BtsCore.make, {
                                                          top: "12",
                                                          right: "0",
                                                          left: "0",
                                                          labelColor: "rgba(255,0,0,0.8)",
                                                          enterBorderColor: "rgba(255,0,0,0.8)",
                                                          downBorderColor: "rgba(255,0,0,0.6)",
                                                          borderColor: "rgba(0,0,0,0.2)",
                                                          value: item.work,
                                                          disabled: state.showProgress,
                                                          onChange: (function ($$event) {
                                                              return Curry._2(changeWork, $$event.target.value, i);
                                                            }),
                                                          onKeyDown: (function ($$event) {
                                                              return Curry._3(keydownWork, $$event.keyCode, $$event.target.value, i);
                                                            }),
                                                          children: "生產工單"
                                                        }), item.showWork ? React.createElement(React.Fragment, undefined, React.createElement(SelectMenu$BtsCore.make, {
                                                                top: "100%",
                                                                transform: "translate(0, 0)",
                                                                maxHeight: "280",
                                                                minHeight: "0",
                                                                topLeft: "12",
                                                                topRight: "12",
                                                                bottomRight: "12",
                                                                bottomLeft: "12",
                                                                paddingRight: "8",
                                                                paddingLeft: "8",
                                                                children: $$Array.map((function (worknoitem) {
                                                                        return React.createElement(MenuItem$BtsCore.make, {
                                                                                    top: "8",
                                                                                    right: "15",
                                                                                    bottom: "8",
                                                                                    left: "6",
                                                                                    enterBackgroundColor: "rgba(0,0,0,0.06)",
                                                                                    downBackgroundColor: "rgba(0,0,0,0.08)",
                                                                                    topLeft: "12",
                                                                                    topRight: "12",
                                                                                    bottomRight: "12",
                                                                                    bottomLeft: "12",
                                                                                    onClick: (function (param) {
                                                                                        return Curry._2(clickItemWork, worknoitem.value, i);
                                                                                      }),
                                                                                    children: React.createElement(Typography$BtsCore.make, {
                                                                                          variant: "subheading",
                                                                                          children: worknoitem.value
                                                                                        })
                                                                                  });
                                                                      }), item.worknoitems)
                                                              }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                showBackground: true,
                                                                backgroundColor: "transparent",
                                                                onClick: (function (param) {
                                                                    return Curry._1(showWork, i);
                                                                  })
                                                              })) : null), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(TextFieldMultiline$BtsCore.make, {
                                                            top: "12",
                                                            right: "0",
                                                            left: "0",
                                                            labelColor: "rgba(255,0,0,0.8)",
                                                            enterBorderColor: "rgba(255,0,0,0.8)",
                                                            downBorderColor: "rgba(255,0,0,0.6)",
                                                            borderColor: "rgba(0,0,0,0.2)",
                                                            rows: 3,
                                                            value: item.action2,
                                                            disabled: state.showProgress,
                                                            onChange: (function ($$event) {
                                                                return Curry._2(changeAction2, $$event.target.value, i);
                                                              }),
                                                            children: "工程處"
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "6",
                                                      bottom: "6",
                                                      left: "6",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "start",
                                                            alignItem: "center",
                                                            children: $$Array.map((function (mbitem) {
                                                                    return React.createElement(GridItem$BtsCore.make, {
                                                                                top: "0",
                                                                                bottom: "0",
                                                                                left: "0",
                                                                                xs: "no",
                                                                                children: React.createElement(Chip$BtsCore.make, {
                                                                                      enterBorderWidth: "0",
                                                                                      downBorderWidth: "0",
                                                                                      borderWidth: "0",
                                                                                      showButn: true,
                                                                                      src: Icons$BtsCore.clearBlack,
                                                                                      onButton: (function (param) {
                                                                                          return Curry._2(clearMbItem, mbitem.mbId, i);
                                                                                        }),
                                                                                      children: /* tuple */[
                                                                                        React.createElement(Typography$BtsCore.make, {
                                                                                              variant: "subtitle2",
                                                                                              children: "S"
                                                                                            }),
                                                                                        React.createElement(Typography$BtsCore.make, {
                                                                                              variant: "subtitle2",
                                                                                              children: mbitem.mbValue
                                                                                            })
                                                                                      ]
                                                                                    })
                                                                              });
                                                                  }), item.mbitems)
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "center",
                                                            alignItem: "center",
                                                            children: null
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: null
                                                              }, React.createElement(SelectStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    tile: "篩選M/B",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.mtst,
                                                                    disabled: state.showProgress,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showMtstMenu, i);
                                                                      }),
                                                                    children: /* tuple */[
                                                                      item.showMtstMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                              top: "0",
                                                                              transform: "translate(0, 0)",
                                                                              maxHeight: "280",
                                                                              minHeight: "0",
                                                                              topLeft: "12",
                                                                              topRight: "12",
                                                                              bottomRight: "12",
                                                                              bottomLeft: "12",
                                                                              paddingRight: "8",
                                                                              paddingLeft: "8",
                                                                              children: $$Array.map((function (mtstitem) {
                                                                                      return React.createElement(MenuItem$BtsCore.make, {
                                                                                                  top: "0",
                                                                                                  right: "8",
                                                                                                  bottom: "0",
                                                                                                  left: "8",
                                                                                                  disablePadding: mtstitem.optionPadding,
                                                                                                  topLeft: "12",
                                                                                                  topRight: "12",
                                                                                                  bottomRight: "12",
                                                                                                  bottomLeft: "12",
                                                                                                  onClick: (function (param) {
                                                                                                      return Curry._2(clickMtstMenu, mtstitem.value, i);
                                                                                                    }),
                                                                                                  children: mtstitem.value
                                                                                                });
                                                                                    }), item.mtstitems)
                                                                            }) : null,
                                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                                            animation: IconAnimation$BtsCore.topDownRorate(item.showMtstMenu),
                                                                            src: Icons$BtsCore.arrowDownBlack
                                                                          })
                                                                    ]
                                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                    showBackground: item.showMtstMenu,
                                                                    backgroundColor: "transparent",
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showMtstMenu, i);
                                                                      })
                                                                  })), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: null
                                                              }, React.createElement(SelectStandard$BtsCore.make, {
                                                                    top: "12",
                                                                    right: "0",
                                                                    left: "0",
                                                                    labelColor: "rgba(255,0,0,0.8)",
                                                                    tile: "M/B",
                                                                    enterBorderColor: "rgba(255,0,0,0.8)",
                                                                    downBorderColor: "rgba(255,0,0,0.6)",
                                                                    borderColor: "rgba(0,0,0,0.2)",
                                                                    value: item.mbst,
                                                                    disabled: state.showProgress,
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showMbstMenu, i);
                                                                      }),
                                                                    children: /* tuple */[
                                                                      item.showMbstMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                              top: "0",
                                                                              transform: "translate(0, 0)",
                                                                              maxHeight: "280",
                                                                              minHeight: "0",
                                                                              topLeft: "12",
                                                                              topRight: "12",
                                                                              bottomRight: "12",
                                                                              bottomLeft: "12",
                                                                              paddingRight: "8",
                                                                              paddingLeft: "8",
                                                                              children: $$Array.map((function (mbstitem) {
                                                                                      return React.createElement(MenuItem$BtsCore.make, {
                                                                                                  top: "0",
                                                                                                  right: "8",
                                                                                                  bottom: "0",
                                                                                                  left: "8",
                                                                                                  disablePadding: mbstitem.optionPadding,
                                                                                                  topLeft: "12",
                                                                                                  topRight: "12",
                                                                                                  bottomRight: "12",
                                                                                                  bottomLeft: "12",
                                                                                                  onClick: (function (param) {
                                                                                                      return Curry._2(clickMbstMenu, mbstitem.value, i);
                                                                                                    }),
                                                                                                  children: mbstitem.value
                                                                                                });
                                                                                    }), item.mbstitems)
                                                                            }) : null,
                                                                      React.createElement(IconGeneral$BtsCore.make, {
                                                                            animation: IconAnimation$BtsCore.topDownRorate(item.showMbstMenu),
                                                                            src: Icons$BtsCore.arrowDownBlack
                                                                          })
                                                                    ]
                                                                  }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                    showBackground: item.showMbstMenu,
                                                                    backgroundColor: "transparent",
                                                                    onClick: (function (param) {
                                                                        return Curry._1(showMbstMenu, i);
                                                                      })
                                                                  })))
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            direction: "row",
                                                            justify: "center",
                                                            alignItem: "center",
                                                            children: null
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      value: item.oldno,
                                                                      disabled: state.showProgress,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changeOldno, $$event.target.value, i);
                                                                        }),
                                                                      children: "舊料號"
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      value: item.newno,
                                                                      disabled: state.showProgress,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changeNewno, $$event.target.value, i);
                                                                        }),
                                                                      children: "新料號"
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                                      top: "12",
                                                                      right: "0",
                                                                      left: "0",
                                                                      labelColor: "rgba(255,0,0,0.8)",
                                                                      enterBorderColor: "rgba(255,0,0,0.8)",
                                                                      downBorderColor: "rgba(255,0,0,0.6)",
                                                                      borderColor: "rgba(0,0,0,0.2)",
                                                                      value: item.sopno,
                                                                      disabled: state.showProgress,
                                                                      onChange: (function ($$event) {
                                                                          return Curry._2(changeSopno, $$event.target.value, i);
                                                                        }),
                                                                      children: "SOP文件編號"
                                                                    })
                                                              }))
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(TextFieldMultiline$BtsCore.make, {
                                                            top: "12",
                                                            right: "0",
                                                            left: "0",
                                                            labelColor: "rgba(255,0,0,0.8)",
                                                            enterBorderColor: "rgba(255,0,0,0.8)",
                                                            downBorderColor: "rgba(255,0,0,0.6)",
                                                            borderColor: "rgba(0,0,0,0.2)",
                                                            rows: 3,
                                                            value: item.action3,
                                                            disabled: state.showProgress,
                                                            onChange: (function ($$event) {
                                                                return Curry._2(changeAction3, $$event.target.value, i);
                                                              }),
                                                            children: "品保處"
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                            top: "12",
                                                            right: "0",
                                                            left: "0",
                                                            labelColor: "rgba(255,0,0,0.8)",
                                                            enterBorderColor: "rgba(255,0,0,0.8)",
                                                            downBorderColor: "rgba(255,0,0,0.6)",
                                                            borderColor: "rgba(0,0,0,0.2)",
                                                            value: item.sipno,
                                                            disabled: state.showProgress,
                                                            onChange: (function ($$event) {
                                                                return Curry._2(changeSipno, $$event.target.value, i);
                                                              }),
                                                            children: "SIP文件編號"
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(TextFieldMultiline$BtsCore.make, {
                                                            top: "12",
                                                            right: "0",
                                                            left: "0",
                                                            labelColor: "rgba(255,0,0,0.8)",
                                                            enterBorderColor: "rgba(255,0,0,0.8)",
                                                            downBorderColor: "rgba(255,0,0,0.6)",
                                                            borderColor: "rgba(0,0,0,0.2)",
                                                            rows: 3,
                                                            value: item.action4,
                                                            disabled: state.showProgress,
                                                            onChange: (function ($$event) {
                                                                return Curry._2(changeAction4, $$event.target.value, i);
                                                              }),
                                                            children: "生產處"
                                                          })
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      xs: "auto",
                                                      children: React.createElement(TextFieldMultiline$BtsCore.make, {
                                                            top: "12",
                                                            right: "0",
                                                            left: "0",
                                                            labelColor: "rgba(255,0,0,0.8)",
                                                            enterBorderColor: "rgba(255,0,0,0.8)",
                                                            downBorderColor: "rgba(255,0,0,0.6)",
                                                            borderColor: "rgba(0,0,0,0.2)",
                                                            rows: 3,
                                                            value: item.action5,
                                                            disabled: state.showProgress,
                                                            onChange: (function ($$event) {
                                                                return Curry._2(changeAction5, $$event.target.value, i);
                                                              }),
                                                            children: "不知道"
                                                          })
                                                    }));
                                    }), state.items))
                      })
                }), React.createElement(SnackbarYoutube$BtsCore.make, {
                  showYoutube: state.showYoutube,
                  position: "bottomLeft",
                  children: /* tuple */[
                    React.createElement("span", undefined, state.youtubeText),
                    null
                  ]
                }));
}

var make = ModifyF;

export {
  newmbitem ,
  newphotoitem ,
  newgrotoitem ,
  reducer ,
  initialState ,
  make ,
  
}
/*  Not a pure module */
